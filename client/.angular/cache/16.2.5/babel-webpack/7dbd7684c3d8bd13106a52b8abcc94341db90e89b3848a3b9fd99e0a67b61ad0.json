{"ast":null,"code":"import { finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/busy.service\";\nexport class LoadingInterceptor {\n  constructor(busyService) {\n    this.busyService = busyService;\n  }\n  intercept(request, next) {\n    this.busyService.busy();\n    return next.handle(request).pipe(finalize(() => {\n      this.busyService.idle();\n    }));\n  }\n  static #_ = this.ɵfac = function LoadingInterceptor_Factory(t) {\n    return new (t || LoadingInterceptor)(i0.ɵɵinject(i1.BusyService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoadingInterceptor,\n    factory: LoadingInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["finalize","LoadingInterceptor","constructor","busyService","intercept","request","next","busy","handle","pipe","idle","_","i0","ɵɵinject","i1","BusyService","_2","factory","ɵfac"],"sources":["C:\\Users\\BongumusaN\\TestingApp\\client\\src\\app\\_interceptors\\loading.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BusyService } from '../_services/busy.service';\r\nimport { delay, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private busyService: BusyService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    this.busyService.busy();\r\n    return next.handle(request).pipe(\r\n      finalize(() => {\r\n        this.busyService.idle();\r\n      })\r\n    )\r\n  }\r\n}\r\n"],"mappings":"AASA,SAAgBA,QAAQ,QAAQ,gBAAgB;;;AAGhD,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/CC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,IAAI,CAACH,WAAW,CAACI,IAAI,EAAE;IACvB,OAAOD,IAAI,CAACE,MAAM,CAACH,OAAO,CAAC,CAACI,IAAI,CAC9BT,QAAQ,CAAC,MAAK;MACZ,IAAI,CAACG,WAAW,CAACO,IAAI,EAAE;IACzB,CAAC,CAAC,CACH;EACH;EAAC,QAAAC,CAAA,G;qBAXUV,kBAAkB,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBf,kBAAkB;IAAAgB,OAAA,EAAlBhB,kBAAkB,CAAAiB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n  }\n  getUserWithRoles() {\n    return this.http.get(this.baseUrl + 'admin/users-with-roles');\n  }\n  updateUserRoles(username, roles) {\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\n  }\n  static #_ = this.ɵfac = function AdminService_Factory(t) {\n    return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminService,\n    factory: AdminService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","AdminService","constructor","http","baseUrl","apiUrl","getUserWithRoles","get","updateUserRoles","username","roles","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\BongumusaN\\TestingApp\\client\\src\\app\\_services\\admin.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\nbaseUrl = environment.apiUrl;\r\n\r\nconstructor(private http: HttpClient){\r\n\r\n}\r\n \r\ngetUserWithRoles(){\r\n  return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\r\n}\r\n\r\nupdateUserRoles(username: string, roles: string[]){\r\n  return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {})\r\n}\r\n}\r\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,YAAY;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAGJ,WAAW,CAACK,MAAM;EAI5B;EAEAC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAkB,IAAI,CAACH,OAAO,GAAG,wBAAwB,CAAC;EAChF;EAEAI,eAAeA,CAACC,QAAgB,EAAEC,KAAe;IAC/C,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,OAAO,GAAG,mBAAmB,GAAGK,QAAQ,GAAG,SAAS,GAAGC,KAAK,EAAE,EAAE,CAAC;EAC9F;EAAC,QAAAE,CAAA,G;qBAbYX,YAAY,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZhB,YAAY;IAAAiB,OAAA,EAAZjB,YAAY,CAAAkB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/account.service\";\nexport class HasRoleDirective {\n  constructor(viewContainerRef, templateRef, accountService) {\n    this.viewContainerRef = viewContainerRef;\n    this.templateRef = templateRef;\n    this.accountService = accountService;\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n    });\n  }\n  ngOnInit() {\n    if (!this.user?.roles || this.user == null) {\n      this.viewContainerRef.clear();\n      return;\n    }\n    if (this.user?.roles.some(r => this.appHasRole.includes(r))) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    }\n  }\n  static #_ = this.ɵfac = function HasRoleDirective_Factory(t) {\n    return new (t || HasRoleDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i1.AccountService));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: HasRoleDirective,\n    selectors: [[\"\", \"appHasRole\", \"\"]],\n    inputs: {\n      appHasRole: \"appHasRole\"\n    }\n  });\n}","map":{"version":3,"names":["take","HasRoleDirective","constructor","viewContainerRef","templateRef","accountService","currentUser$","pipe","subscribe","user","ngOnInit","roles","clear","some","r","appHasRole","includes","createEmbeddedView","_","i0","ɵɵdirectiveInject","ViewContainerRef","TemplateRef","i1","AccountService","_2","selectors","inputs"],"sources":["C:\\Users\\BongumusaN\\TestingApp\\client\\src\\app\\_directives\\has-role.directive.ts"],"sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { User } from '../_models/user';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n\r\n\r\n@Directive({\r\n  selector: '[appHasRole]' //*appHasRole='[]'\r\n})\r\nexport class HasRoleDirective {\r\n  @Input() appHasRole: string[];\r\n  user: User;\r\n\r\n  constructor(private viewContainerRef: ViewContainerRef, \r\n    private templateRef: TemplateRef<any>, \r\n    private accountService: AccountService) {\r\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user =>{\r\n        this.user = user;\r\n      })\r\n     }\r\n\r\n     ngOnInit(): void{\r\n      if (!this.user?.roles || this.user == null){\r\n        this.viewContainerRef.clear();\r\n        return;\r\n      }\r\n\r\n      if (this.user?.roles.some(r => this.appHasRole.includes(r))){\r\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n      }else{ \r\n        this.viewContainerRef.clear();\r\n      }\r\n     }\r\n\r\n}\r\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,gBAAgB;;;AASrC,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,gBAAkC,EAC5CC,WAA6B,EAC7BC,cAA8B;IAFpB,KAAAF,gBAAgB,GAAhBA,gBAAgB;IAC1B,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,cAAc,GAAdA,cAAc;IACpB,IAAI,CAACA,cAAc,CAACC,YAAY,CAACC,IAAI,CAACP,IAAI,CAAC,CAAC,CAAC,CAAC,CAACQ,SAAS,CAACC,IAAI,IAAG;MAC9D,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB,CAAC,CAAC;EACH;EAEAC,QAAQA,CAAA;IACP,IAAI,CAAC,IAAI,CAACD,IAAI,EAAEE,KAAK,IAAI,IAAI,CAACF,IAAI,IAAI,IAAI,EAAC;MACzC,IAAI,CAACN,gBAAgB,CAACS,KAAK,EAAE;MAC7B;;IAGF,IAAI,IAAI,CAACH,IAAI,EAAEE,KAAK,CAACE,IAAI,CAACC,CAAC,IAAI,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACF,CAAC,CAAC,CAAC,EAAC;MAC1D,IAAI,CAACX,gBAAgB,CAACc,kBAAkB,CAAC,IAAI,CAACb,WAAW,CAAC;KAC3D,MAAI;MACH,IAAI,CAACD,gBAAgB,CAACS,KAAK,EAAE;;EAEhC;EAAC,QAAAM,CAAA,G;qBAvBOjB,gBAAgB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,gBAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhBxB,gBAAgB;IAAAyB,SAAA;IAAAC,MAAA;MAAAZ,UAAA;IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
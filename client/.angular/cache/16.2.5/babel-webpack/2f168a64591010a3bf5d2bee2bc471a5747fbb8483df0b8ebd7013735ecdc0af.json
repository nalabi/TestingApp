{"ast":null,"code":"import { take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/account.service\";\nexport class HasRoleDirective {\n  constructor(viewContainerRef, templateRef, accountService) {\n    this.viewContainerRef = viewContainerRef;\n    this.templateRef = templateRef;\n    this.accountService = accountService;\n    this.appHasRole = [];\n    this.user = {};\n    this.accountService.currentUser$.pipe(take(1)).subscribe({\n      next: user => {\n        if (user) this.user = user;\n      }\n    });\n  }\n  ngOnInit() {\n    if (this.user?.roles.some(r => this.appHasRole.includes(r))) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    }\n  }\n  static #_ = this.ɵfac = function HasRoleDirective_Factory(t) {\n    return new (t || HasRoleDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i1.AccountService));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: HasRoleDirective,\n    selectors: [[\"\", \"appHasRole\", \"\"]],\n    inputs: {\n      appHasRole: \"appHasRole\"\n    }\n  });\n}","map":{"version":3,"names":["take","HasRoleDirective","constructor","viewContainerRef","templateRef","accountService","appHasRole","user","currentUser$","pipe","subscribe","next","ngOnInit","roles","some","r","includes","createEmbeddedView","clear","_","i0","ɵɵdirectiveInject","ViewContainerRef","TemplateRef","i1","AccountService","_2","selectors","inputs"],"sources":["C:\\Users\\BongumusaN\\TestingApp\\client\\src\\app\\_directives\\has-role.directive.ts"],"sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { take } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Directive({\r\n  selector: '[appHasRole]'\r\n})\r\nexport class HasRoleDirective {\r\n  @Input() appHasRole: string[] = [];\r\n  user: User = {} as User;\r\n\r\n  constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>,\r\n    private accountService: AccountService) {\r\n      this.accountService.currentUser$.pipe(take(1)).subscribe({\r\n        next: user => {\r\n          if (user) this.user = user;\r\n        }\r\n      })\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    if (this.user?.roles.some(r => this.appHasRole.includes(r))) {\r\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n    } else {\r\n      this.viewContainerRef.clear();\r\n    }\r\n  }\r\n\r\n}\r\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,MAAM;;;AAO3B,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,gBAAkC,EAAUC,WAA6B,EACnFC,cAA8B;IADpB,KAAAF,gBAAgB,GAAhBA,gBAAgB;IAA4B,KAAAC,WAAW,GAAXA,WAAW;IACjE,KAAAC,cAAc,GAAdA,cAAc;IAJf,KAAAC,UAAU,GAAa,EAAE;IAClC,KAAAC,IAAI,GAAS,EAAU;IAInB,IAAI,CAACF,cAAc,CAACG,YAAY,CAACC,IAAI,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC,CAACU,SAAS,CAAC;MACvDC,IAAI,EAAEJ,IAAI,IAAG;QACX,IAAIA,IAAI,EAAE,IAAI,CAACA,IAAI,GAAGA,IAAI;MAC5B;KACD,CAAC;EACJ;EAEFK,QAAQA,CAAA;IACN,IAAI,IAAI,CAACL,IAAI,EAAEM,KAAK,CAACC,IAAI,CAACC,CAAC,IAAI,IAAI,CAACT,UAAU,CAACU,QAAQ,CAACD,CAAC,CAAC,CAAC,EAAE;MAC3D,IAAI,CAACZ,gBAAgB,CAACc,kBAAkB,CAAC,IAAI,CAACb,WAAW,CAAC;KAC3D,MAAM;MACL,IAAI,CAACD,gBAAgB,CAACe,KAAK,EAAE;;EAEjC;EAAC,QAAAC,CAAA,G;qBAnBUlB,gBAAgB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,gBAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhBzB,gBAAgB;IAAA0B,SAAA;IAAAC,MAAA;MAAAtB,UAAA;IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
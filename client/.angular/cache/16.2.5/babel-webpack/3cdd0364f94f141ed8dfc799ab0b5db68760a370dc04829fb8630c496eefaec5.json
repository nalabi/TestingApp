{"ast":null,"code":"import { inject } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { map } from 'rxjs';\nexport const AuthGuard = (route, state) => {\n  const accountService = inject(AccountService);\n  const toastr = inject(ToastrService);\n  return accountService.currentUser$.pipe(map(user => {\n    if (user) return true;else {\n      toastr.error('you shall not pass!');\n      return false;\n    }\n  }));\n};","map":{"version":3,"names":["inject","AccountService","ToastrService","map","AuthGuard","route","state","accountService","toastr","currentUser$","pipe","user","error"],"sources":["C:\\Users\\BongumusaN\\TestingApp\\client\\src\\app\\_guards\\auth.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\r\nimport { CanActivateFn } from '@angular/router';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { map } from 'rxjs';\r\n\r\nexport const AuthGuard: CanActivateFn = (route, state) => {\r\n  const accountService = inject(AccountService);\r\n  const toastr = inject(ToastrService);\r\n\r\n  return accountService.currentUser$.pipe(\r\n    map(user => {\r\n      if (user) return true;\r\n      else {\r\n        toastr.error('you shall not pass!');\r\n        return false;\r\n      }\r\n    })\r\n  )\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AAEtC,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,aAAa,QAAQ,YAAY;AAC1C,SAASC,GAAG,QAAQ,MAAM;AAE1B,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,cAAc,GAAGP,MAAM,CAACC,cAAc,CAAC;EAC7C,MAAMO,MAAM,GAAGR,MAAM,CAACE,aAAa,CAAC;EAEpC,OAAOK,cAAc,CAACE,YAAY,CAACC,IAAI,CACrCP,GAAG,CAACQ,IAAI,IAAG;IACT,IAAIA,IAAI,EAAE,OAAO,IAAI,CAAC,KACjB;MACHH,MAAM,CAACI,KAAK,CAAC,qBAAqB,CAAC;MACnC,OAAO,KAAK;;EAEhB,CAAC,CAAC,CACH;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
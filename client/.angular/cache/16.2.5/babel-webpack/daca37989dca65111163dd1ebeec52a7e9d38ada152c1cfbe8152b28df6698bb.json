{"ast":null,"code":"import { inject } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { map } from 'rxjs';\nexport const adminGuard = (route, state) => {\n  const accountService = inject(AccountService);\n  const toastr = inject(ToastrService);\n  return accountService.currentUser$.pipe(map(user => {\n    if (!user) return false;\n    if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\n      return true;\n    } else {\n      toastr.error('You cannot enter this area');\n      return false;\n    }\n  }));\n};","map":{"version":3,"names":["inject","AccountService","ToastrService","map","adminGuard","route","state","accountService","toastr","currentUser$","pipe","user","roles","includes","error"],"sources":["C:\\Users\\BongumusaN\\TestingApp\\client\\src\\app\\_guards\\admin.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\r\nimport { CanActivateFn } from '@angular/router';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { map } from 'rxjs';\r\n\r\nexport const adminGuard: CanActivateFn = (route, state) => {\r\n  const accountService = inject(AccountService);\r\n  const toastr = inject(ToastrService);\r\n\r\n  return accountService.currentUser$.pipe(\r\n    map(user => {\r\n      if (!user) return false;\r\n      if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\r\n        return true;\r\n      } else {\r\n        toastr.error('You cannot enter this area');\r\n        return false;\r\n      }\r\n    })\r\n  )\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AAEtC,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,aAAa,QAAQ,YAAY;AAC1C,SAASC,GAAG,QAAQ,MAAM;AAE1B,OAAO,MAAMC,UAAU,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACxD,MAAMC,cAAc,GAAGP,MAAM,CAACC,cAAc,CAAC;EAC7C,MAAMO,MAAM,GAAGR,MAAM,CAACE,aAAa,CAAC;EAEpC,OAAOK,cAAc,CAACE,YAAY,CAACC,IAAI,CACrCP,GAAG,CAACQ,IAAI,IAAG;IACT,IAAI,CAACA,IAAI,EAAE,OAAO,KAAK;IACvB,IAAIA,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,OAAO,CAAC,IAAIF,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;MACpE,OAAO,IAAI;KACZ,MAAM;MACLL,MAAM,CAACM,KAAK,CAAC,4BAA4B,CAAC;MAC1C,OAAO,KAAK;;EAEhB,CAAC,CAAC,CACH;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
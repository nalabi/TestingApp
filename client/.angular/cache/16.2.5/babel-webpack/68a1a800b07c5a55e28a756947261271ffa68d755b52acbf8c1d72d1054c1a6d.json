{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/account.service\";\nimport * as i2 from \"ngx-toastr\";\nexport class AuthGuard {\n  constructor(accountService, toastr) {\n    this.accountService = accountService;\n    this.toastr = toastr;\n  }\n  canActivate() {\n    return this.accountService.currentUser$.pipe(map(user => {\n      if (user) return true;\n      this.toastr.error('You shall not pass!');\n    }));\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AccountService), i0.ɵɵinject(i2.ToastrService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","AuthGuard","constructor","accountService","toastr","canActivate","currentUser$","pipe","user","error","_","i0","ɵɵinject","i1","AccountService","i2","ToastrService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\BongumusaN\\TestingApp\\client\\src\\app\\_guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard  {\r\n  constructor(private accountService: AccountService, private toastr: ToastrService) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map(user => {\r\n        if (user) return true;\r\n        this.toastr.error('You shall not pass!')\r\n      })\r\n    )\r\n  }\r\n  \r\n}"],"mappings":"AAKA,SAASA,GAAG,QAAQ,gBAAgB;;;;AAKpC,OAAM,MAAOC,SAAS;EACpBC,YAAoBC,cAA8B,EAAUC,MAAqB;IAA7D,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;EAAkB;EAEpFC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,cAAc,CAACG,YAAY,CAACC,IAAI,CAC1CP,GAAG,CAACQ,IAAI,IAAG;MACT,IAAIA,IAAI,EAAE,OAAO,IAAI;MACrB,IAAI,CAACJ,MAAM,CAACK,KAAK,CAAC,qBAAqB,CAAC;IAC1C,CAAC,CAAC,CACH;EACH;EAAC,QAAAC,CAAA,G;qBAVUT,SAAS,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAThB,SAAS;IAAAiB,OAAA,EAATjB,SAAS,CAAAkB,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
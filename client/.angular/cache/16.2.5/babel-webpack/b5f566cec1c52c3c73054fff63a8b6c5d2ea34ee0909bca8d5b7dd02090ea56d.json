{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ngx-bootstrap/datepicker\";\nfunction DateInputComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.label, \" is required\");\n  }\n}\nexport class DateInputComponent {\n  constructor(ngControl) {\n    this.ngControl = ngControl;\n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-red',\n      dateInputFormat: 'DD MMMM YYYY'\n    };\n  }\n  writeValue(obj) {}\n  registerOnChange(fn) {}\n  registerOnTouched(fn) {}\n  static #_ = this.ɵfac = function DateInputComponent_Factory(t) {\n    return new (t || DateInputComponent)(i0.ɵɵdirectiveInject(i1.NgControl, 2));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DateInputComponent,\n    selectors: [[\"app-date-input\"]],\n    inputs: {\n      label: \"label\",\n      maxDate: \"maxDate\"\n    },\n    decls: 3,\n    vars: 7,\n    consts: [[1, \"mb-3\"], [\"type\", \"text\", \"bsDatepicker\", \"\", 1, \"form-control\", 3, \"formControl\", \"placeholder\", \"bsConfig\", \"maxDate\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"invalid-feedback\"]],\n    template: function DateInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"input\", 1);\n        i0.ɵɵtemplate(2, DateInputComponent_div_2_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.control.touched && ctx.control.invalid);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.label);\n        i0.ɵɵproperty(\"formControl\", ctx.control)(\"bsConfig\", ctx.bsConfig)(\"maxDate\", ctx.maxDate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.control.errors == null ? null : ctx.control.errors[\"required\"]);\n      }\n    },\n    dependencies: [i2.NgIf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i3.BsDatepickerDirective, i3.BsDatepickerInputDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","label","DateInputComponent","constructor","ngControl","valueAccessor","bsConfig","containerClass","dateInputFormat","writeValue","obj","registerOnChange","fn","registerOnTouched","_","ɵɵdirectiveInject","i1","NgControl","_2","selectors","inputs","maxDate","decls","vars","consts","template","DateInputComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","DateInputComponent_div_2_Template","ɵɵclassProp","control","touched","invalid","ɵɵpropertyInterpolate","ɵɵproperty","errors"],"sources":["C:\\Users\\BongumusaN\\TestingApp\\client\\src\\app\\_forms\\date-input\\date-input.component.ts","C:\\Users\\BongumusaN\\TestingApp\\client\\src\\app\\_forms\\date-input\\date-input.component.html"],"sourcesContent":["import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-date-input',\r\n  templateUrl: './date-input.component.html',\r\n  styleUrls: ['./date-input.component.css']\r\n})\r\nexport class DateInputComponent implements ControlValueAccessor {\r\n  @Input()\r\n  label!: string;\r\n  @Input()\r\n  maxDate!: Date;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(@Self() public ngControl: NgControl) { \r\n    this.ngControl.valueAccessor = this;\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red',\r\n      dateInputFormat: 'DD MMMM YYYY'\r\n    }\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n}\r\n","<div class=\"mb-3\">\r\n  <input\r\n      type=\"text\"\r\n      [class.is-invalid]=\"control.touched && control.invalid\"\r\n      class=\"form-control\"\r\n      [formControl]=\"control\"\r\n      placeholder=\"{{label}}\"\r\n      bsDatepicker\r\n      [bsConfig]=\"bsConfig\"\r\n      [maxDate]=\"maxDate\"\r\n  >\r\n  <div *ngIf=\"control.errors?.['required']\" class=\"invalid-feedback\">{{label}} is required</div>\r\n</div>\r\n"],"mappings":";;;;;;ICWEA,EAAA,CAAAC,cAAA,aAAmE;IAAAD,EAAA,CAAAE,MAAA,GAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAA3BH,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAK,kBAAA,KAAAC,MAAA,CAAAC,KAAA,iBAAqB;;;ADA1F,OAAM,MAAOC,kBAAkB;EAO7BC,YAA2BC,SAAoB;IAApB,KAAAA,SAAS,GAATA,SAAS;IAClC,IAAI,CAACA,SAAS,CAACC,aAAa,GAAG,IAAI;IACnC,IAAI,CAACC,QAAQ,GAAG;MACdC,cAAc,EAAE,WAAW;MAC3BC,eAAe,EAAE;KAClB;EACH;EAEAC,UAAUA,CAACC,GAAQ,GACnB;EAEAC,gBAAgBA,CAACC,EAAO,GACxB;EAEAC,iBAAiBA,CAACD,EAAO,GACzB;EAAC,QAAAE,CAAA,G;qBAtBUZ,kBAAkB,EAAAR,EAAA,CAAAqB,iBAAA,CAAAC,EAAA,CAAAC,SAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBhB,kBAAkB;IAAAiB,SAAA;IAAAC,MAAA;MAAAnB,KAAA;MAAAoB,OAAA;IAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX/BjC,EAAA,CAAAC,cAAA,aAAkB;QAChBD,EAAA,CAAAmC,SAAA,eASC;QACDnC,EAAA,CAAAoC,UAAA,IAAAC,iCAAA,iBAA8F;QAChGrC,EAAA,CAAAG,YAAA,EAAM;;;QATAH,EAAA,CAAAI,SAAA,GAAuD;QAAvDJ,EAAA,CAAAsC,WAAA,eAAAJ,GAAA,CAAAK,OAAA,CAAAC,OAAA,IAAAN,GAAA,CAAAK,OAAA,CAAAE,OAAA,CAAuD;QAGvDzC,EAAA,CAAA0C,qBAAA,gBAAAR,GAAA,CAAA3B,KAAA,CAAuB;QADvBP,EAAA,CAAA2C,UAAA,gBAAAT,GAAA,CAAAK,OAAA,CAAuB,aAAAL,GAAA,CAAAtB,QAAA,aAAAsB,GAAA,CAAAP,OAAA;QAMrB3B,EAAA,CAAAI,SAAA,GAAkC;QAAlCJ,EAAA,CAAA2C,UAAA,SAAAT,GAAA,CAAAK,OAAA,CAAAK,MAAA,kBAAAV,GAAA,CAAAK,OAAA,CAAAK,MAAA,aAAkC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n// todo: split\n/** Provides default values for Pagination and pager components */\nconst _c0 = function (a0, a1) {\n  return {\n    \"pull-left\": a0,\n    \"float-left\": a1\n  };\n};\nconst _c1 = function (a0, a1) {\n  return {\n    \"pull-right\": a0,\n    \"float-right\": a1\n  };\n};\nconst _c2 = function (a0, a1) {\n  return {\n    disabled: a0,\n    currentPage: a1\n  };\n};\nfunction PaginationComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 11)(1, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_1_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.selectPage(1, $event));\n    });\n    i0.ɵɵelementContainer(2, 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r11 = i0.ɵɵreference(13);\n    i0.ɵɵclassProp(\"disabled\", ctx_r0.noPrevious() || ctx_r0.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.customFirstTemplate || _r11)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c2, ctx_r0.noPrevious() || ctx_r0.disabled, ctx_r0.page));\n  }\n}\nfunction PaginationComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 14)(1, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_2_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.selectPage(ctx_r17.page - 1, $event));\n    });\n    i0.ɵɵelementContainer(2, 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const _r9 = i0.ɵɵreference(11);\n    i0.ɵɵclassProp(\"disabled\", ctx_r1.noPrevious() || ctx_r1.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.customPreviousTemplate || _r9)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c2, ctx_r1.noPrevious() || ctx_r1.disabled, ctx_r1.page));\n  }\n}\nconst _c3 = function (a0, a1, a2) {\n  return {\n    disabled: a0,\n    $implicit: a1,\n    currentPage: a2\n  };\n};\nfunction PaginationComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 15)(1, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_3_Template_a_click_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const pg_r19 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.selectPage(pg_r19.number, $event));\n    });\n    i0.ɵɵelementContainer(2, 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const pg_r19 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    const _r5 = i0.ɵɵreference(7);\n    i0.ɵɵclassProp(\"active\", pg_r19.active)(\"disabled\", ctx_r2.disabled && !pg_r19.active);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.customPageTemplate || _r5)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(6, _c3, ctx_r2.disabled, pg_r19, ctx_r2.page));\n  }\n}\nfunction PaginationComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 16)(1, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_4_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.selectPage(ctx_r22.page + 1, $event));\n    });\n    i0.ɵɵelementContainer(2, 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    const _r7 = i0.ɵɵreference(9);\n    i0.ɵɵclassProp(\"disabled\", ctx_r3.noNext() || ctx_r3.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.customNextTemplate || _r7)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c2, ctx_r3.noNext() || ctx_r3.disabled, ctx_r3.page));\n  }\n}\nfunction PaginationComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 17)(1, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_5_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.selectPage(ctx_r24.totalPages, $event));\n    });\n    i0.ɵɵelementContainer(2, 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    const _r13 = i0.ɵɵreference(15);\n    i0.ɵɵclassProp(\"disabled\", ctx_r4.noNext() || ctx_r4.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.customLastTemplate || _r13)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c2, ctx_r4.noNext() || ctx_r4.disabled, ctx_r4.page));\n  }\n}\nfunction PaginationComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const page_r26 = ctx.$implicit;\n    i0.ɵɵtextInterpolate(page_r26.text);\n  }\n}\nfunction PaginationComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r8.getText(\"next\"));\n  }\n}\nfunction PaginationComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r10.getText(\"previous\"));\n  }\n}\nfunction PaginationComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r12.getText(\"first\"));\n  }\n}\nfunction PaginationComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r14.getText(\"last\"));\n  }\n}\nclass PaginationConfig {\n  constructor() {\n    this.main = {\n      itemsPerPage: 10,\n      boundaryLinks: false,\n      directionLinks: true,\n      firstText: 'First',\n      previousText: 'Previous',\n      nextText: 'Next',\n      lastText: 'Last',\n      pageBtnClass: '',\n      rotate: true\n    };\n    this.pager = {\n      itemsPerPage: 15,\n      previousText: '« Previous',\n      nextText: 'Next »',\n      pageBtnClass: '',\n      align: true\n    };\n  }\n  static #_ = this.ɵfac = function PaginationConfig_Factory(t) {\n    return new (t || PaginationConfig)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: PaginationConfig,\n    factory: PaginationConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaginationConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst PAGER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PagerComponent),\n  multi: true\n};\nclass PagerComponent {\n  constructor(elementRef, paginationConfig, changeDetection) {\n    this.elementRef = elementRef;\n    this.changeDetection = changeDetection;\n    /** if `true` aligns each link to the sides of pager */\n    this.align = false;\n    /** if false first and last buttons will be hidden */\n    this.boundaryLinks = false;\n    /** if false previous and next buttons will be hidden */\n    this.directionLinks = true;\n    // labels\n    /** first button text */\n    this.firstText = 'First';\n    /** previous button text */\n    this.previousText = '« Previous';\n    /** next button text */\n    this.nextText = 'Next »';\n    /** last button text */\n    this.lastText = 'Last';\n    /** if true current page will in the middle of pages list */\n    this.rotate = true;\n    // css\n    /** add class to <code><li\\></code> */\n    this.pageBtnClass = '';\n    /** if true pagination component will be disabled */\n    this.disabled = false;\n    /** fired when total pages count changes, $event:number equals to total pages count */\n    this.numPages = new EventEmitter();\n    /** fired when page was changed, $event:{page, itemsPerPage} equals to\n     * object with current page index and number of items per page\n     */\n    this.pageChanged = new EventEmitter();\n    this.onChange = Function.prototype;\n    this.onTouched = Function.prototype;\n    this.classMap = '';\n    this.inited = false;\n    this._itemsPerPage = 15;\n    this._totalItems = 0;\n    this._totalPages = 0;\n    this._page = 1;\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(Object.assign({}, paginationConfig.main, paginationConfig.pager));\n    }\n  }\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  get itemsPerPage() {\n    return this._itemsPerPage;\n  }\n  set itemsPerPage(v) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  /** total number of items in all pages */\n  get totalItems() {\n    return this._totalItems;\n  }\n  set totalItems(v) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  get totalPages() {\n    return this._totalPages;\n  }\n  set totalPages(v) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n  get page() {\n    return this._page;\n  }\n  set page(value) {\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n  configureOptions(config) {\n    this.config = Object.assign({}, config);\n  }\n  ngOnInit() {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n    // watch for maxSize\n    if (typeof this.maxSize === 'undefined') {\n      this.maxSize = this.config?.maxSize || 0;\n    }\n    if (typeof this.rotate === 'undefined') {\n      this.rotate = !!this.config?.rotate;\n    }\n    if (typeof this.boundaryLinks === 'undefined') {\n      this.boundaryLinks = !!this.config?.boundaryLinks;\n    }\n    if (typeof this.directionLinks === 'undefined') {\n      this.directionLinks = !!this.config?.directionLinks;\n    }\n    if (typeof this.pageBtnClass === 'undefined') {\n      this.pageBtnClass = this.config?.pageBtnClass || '';\n    }\n    // base class\n    if (typeof this.itemsPerPage === 'undefined') {\n      this.itemsPerPage = this.config?.itemsPerPage || 0;\n    }\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n  writeValue(value) {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n  getText(key) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return this[`${key}Text`] || this.config[`${key}Text`];\n  }\n  noPrevious() {\n    return this.page === 1;\n  }\n  noNext() {\n    return this.page === this.totalPages;\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  selectPage(page, event) {\n    if (event) {\n      event.preventDefault();\n    }\n    if (!this.disabled) {\n      if (event && event.target) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const target = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n  // Create page object used in template\n  makePage(num, text, active) {\n    return {\n      text,\n      number: num,\n      active\n    };\n  }\n  getPages(currentPage, totalPages) {\n    const pages = [];\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n    // recompute if maxSize\n    if (isMaxSized && this.maxSize) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage = (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n    return pages;\n  }\n  // base class\n  calculateTotalPages() {\n    const totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil(this.totalItems / this.itemsPerPage);\n    return Math.max(totalPages || 0, 1);\n  }\n  static #_ = this.ɵfac = function PagerComponent_Factory(t) {\n    return new (t || PagerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PaginationConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: PagerComponent,\n    selectors: [[\"pager\"]],\n    inputs: {\n      align: \"align\",\n      maxSize: \"maxSize\",\n      boundaryLinks: \"boundaryLinks\",\n      directionLinks: \"directionLinks\",\n      firstText: \"firstText\",\n      previousText: \"previousText\",\n      nextText: \"nextText\",\n      lastText: \"lastText\",\n      rotate: \"rotate\",\n      pageBtnClass: \"pageBtnClass\",\n      disabled: \"disabled\",\n      itemsPerPage: \"itemsPerPage\",\n      totalItems: \"totalItems\"\n    },\n    outputs: {\n      numPages: \"numPages\",\n      pageChanged: \"pageChanged\"\n    },\n    features: [i0.ɵɵProvidersFeature([PAGER_CONTROL_VALUE_ACCESSOR])],\n    decls: 7,\n    vars: 24,\n    consts: [[1, \"pager\"], [3, \"ngClass\"], [\"href\", \"\", 3, \"click\"]],\n    template: function PagerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\", 0)(1, \"li\", 1)(2, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function PagerComponent_Template_a_click_2_listener($event) {\n          return ctx.selectPage(ctx.page - 1, $event);\n        });\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"li\", 1)(5, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function PagerComponent_Template_a_click_5_listener($event) {\n          return ctx.selectPage(ctx.page + 1, $event);\n        });\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassMap(ctx.pageBtnClass);\n        i0.ɵɵclassProp(\"disabled\", ctx.noPrevious())(\"previous\", ctx.align);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(18, _c0, ctx.align, ctx.align));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.getText(\"previous\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassMap(ctx.pageBtnClass);\n        i0.ɵɵclassProp(\"disabled\", ctx.noNext())(\"next\", ctx.align);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(21, _c1, ctx.align, ctx.align));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.getText(\"next\"));\n      }\n    },\n    dependencies: [i2.NgClass],\n    encapsulation: 2\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'pager',\n      providers: [PAGER_CONTROL_VALUE_ACCESSOR],\n      template: \"<ul class=\\\"pager\\\">\\n  <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-left': align, 'float-left': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a>\\n  </li>\\n  <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a>\\n  </li>\\n</ul>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: PaginationConfig\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    align: [{\n      type: Input\n    }],\n    maxSize: [{\n      type: Input\n    }],\n    boundaryLinks: [{\n      type: Input\n    }],\n    directionLinks: [{\n      type: Input\n    }],\n    firstText: [{\n      type: Input\n    }],\n    previousText: [{\n      type: Input\n    }],\n    nextText: [{\n      type: Input\n    }],\n    lastText: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    pageBtnClass: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    numPages: [{\n      type: Output\n    }],\n    pageChanged: [{\n      type: Output\n    }],\n    itemsPerPage: [{\n      type: Input\n    }],\n    totalItems: [{\n      type: Input\n    }]\n  });\n})();\nconst PAGINATION_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PaginationComponent),\n  multi: true\n};\nclass PaginationComponent {\n  constructor(elementRef, paginationConfig, changeDetection) {\n    this.elementRef = elementRef;\n    this.changeDetection = changeDetection;\n    /** if `true` aligns each link to the sides of pager */\n    this.align = true;\n    /** if false first and last buttons will be hidden */\n    this.boundaryLinks = false;\n    /** if false previous and next buttons will be hidden */\n    this.directionLinks = true;\n    /** if true current page will in the middle of pages list */\n    this.rotate = true;\n    // css\n    /** add class to <code><li\\></code> */\n    this.pageBtnClass = '';\n    /** if true pagination component will be disabled */\n    this.disabled = false;\n    /** fired when total pages count changes, $event:number equals to total pages count */\n    this.numPages = new EventEmitter();\n    /** fired when page was changed, $event:{page, itemsPerPage} equals to object\n     * with current page index and number of items per page\n     */\n    this.pageChanged = new EventEmitter();\n    this.onChange = Function.prototype;\n    this.onTouched = Function.prototype;\n    this.classMap = '';\n    this.inited = false;\n    this._itemsPerPage = 10;\n    this._totalItems = 0;\n    this._totalPages = 0;\n    this._page = 1;\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(paginationConfig.main);\n    }\n  }\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  get itemsPerPage() {\n    return this._itemsPerPage;\n  }\n  set itemsPerPage(v) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  /** total number of items in all pages */\n  get totalItems() {\n    return this._totalItems;\n  }\n  set totalItems(v) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  get totalPages() {\n    return this._totalPages;\n  }\n  set totalPages(v) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n  get page() {\n    return this._page;\n  }\n  set page(value) {\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n  configureOptions(config) {\n    this.config = Object.assign({}, config);\n  }\n  ngOnInit() {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n    // watch for maxSize\n    if (typeof this.maxSize === 'undefined') {\n      this.maxSize = this.config?.maxSize || 0;\n    }\n    if (typeof this.rotate === 'undefined') {\n      this.rotate = !!this.config?.rotate;\n    }\n    if (typeof this.boundaryLinks === 'undefined') {\n      this.boundaryLinks = !!this.config?.boundaryLinks;\n    }\n    if (typeof this.directionLinks === 'undefined') {\n      this.directionLinks = !!this.config?.directionLinks;\n    }\n    if (typeof this.pageBtnClass === 'undefined') {\n      this.pageBtnClass = this.config?.pageBtnClass || '';\n    }\n    // base class\n    if (typeof this.itemsPerPage === 'undefined') {\n      this.itemsPerPage = this.config?.itemsPerPage || 0;\n    }\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n  writeValue(value) {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n  getText(key) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return this[`${key}Text`] || this.config[`${key}Text`];\n  }\n  noPrevious() {\n    return this.page === 1;\n  }\n  noNext() {\n    return this.page === this.totalPages;\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  selectPage(page, event) {\n    if (event) {\n      event.preventDefault();\n    }\n    if (!this.disabled) {\n      if (event && event.target) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const target = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n  // Create page object used in template\n  makePage(num, text, active) {\n    return {\n      text,\n      number: num,\n      active\n    };\n  }\n  getPages(currentPage, totalPages) {\n    const pages = [];\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n    // recompute if maxSize\n    if (isMaxSized && this.maxSize) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage = (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n    return pages;\n  }\n  // base class\n  calculateTotalPages() {\n    const totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil(this.totalItems / this.itemsPerPage);\n    return Math.max(totalPages || 0, 1);\n  }\n  static #_ = this.ɵfac = function PaginationComponent_Factory(t) {\n    return new (t || PaginationComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PaginationConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: PaginationComponent,\n    selectors: [[\"pagination\"]],\n    inputs: {\n      align: \"align\",\n      maxSize: \"maxSize\",\n      boundaryLinks: \"boundaryLinks\",\n      directionLinks: \"directionLinks\",\n      firstText: \"firstText\",\n      previousText: \"previousText\",\n      nextText: \"nextText\",\n      lastText: \"lastText\",\n      rotate: \"rotate\",\n      pageBtnClass: \"pageBtnClass\",\n      disabled: \"disabled\",\n      customPageTemplate: \"customPageTemplate\",\n      customNextTemplate: \"customNextTemplate\",\n      customPreviousTemplate: \"customPreviousTemplate\",\n      customFirstTemplate: \"customFirstTemplate\",\n      customLastTemplate: \"customLastTemplate\",\n      itemsPerPage: \"itemsPerPage\",\n      totalItems: \"totalItems\"\n    },\n    outputs: {\n      numPages: \"numPages\",\n      pageChanged: \"pageChanged\"\n    },\n    features: [i0.ɵɵProvidersFeature([PAGINATION_CONTROL_VALUE_ACCESSOR])],\n    decls: 16,\n    vars: 6,\n    consts: [[1, \"pagination\", 3, \"ngClass\"], [\"class\", \"pagination-first page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-prev page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-page page-item\", 3, \"active\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"pagination-next page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-last page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"defaultPageTemplate\", \"\"], [\"defaultNextTemplate\", \"\"], [\"defaultPreviousTemplate\", \"\"], [\"defaultFirstTemplate\", \"\"], [\"defaultLastTemplate\", \"\"], [1, \"pagination-first\", \"page-item\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"pagination-prev\", \"page-item\"], [1, \"pagination-page\", \"page-item\"], [1, \"pagination-next\", \"page-item\"], [1, \"pagination-last\", \"page-item\"]],\n    template: function PaginationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\", 0);\n        i0.ɵɵtemplate(1, PaginationComponent_li_1_Template, 3, 7, \"li\", 1);\n        i0.ɵɵtemplate(2, PaginationComponent_li_2_Template, 3, 7, \"li\", 2);\n        i0.ɵɵtemplate(3, PaginationComponent_li_3_Template, 3, 10, \"li\", 3);\n        i0.ɵɵtemplate(4, PaginationComponent_li_4_Template, 3, 7, \"li\", 4);\n        i0.ɵɵtemplate(5, PaginationComponent_li_5_Template, 3, 7, \"li\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, PaginationComponent_ng_template_6_Template, 1, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(8, PaginationComponent_ng_template_8_Template, 1, 1, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(10, PaginationComponent_ng_template_10_Template, 1, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(12, PaginationComponent_ng_template_12_Template, 1, 1, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(14, PaginationComponent_ng_template_14_Template, 1, 1, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.classMap);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pages);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaginationComponent, [{\n    type: Component,\n    args: [{\n      selector: 'pagination',\n      providers: [PAGINATION_CONTROL_VALUE_ACCESSOR],\n      template: \"<ul class=\\\"pagination\\\" [ngClass]=\\\"classMap\\\">\\n  <li class=\\\"pagination-first page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customFirstTemplate || defaultFirstTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-prev page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page - 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPreviousTemplate || defaultPreviousTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li *ngFor=\\\"let pg of pages\\\"\\n      [class.active]=\\\"pg.active\\\"\\n      [class.disabled]=\\\"disabled && !pg.active\\\"\\n      class=\\\"pagination-page page-item\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(pg.number, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPageTemplate || defaultPageTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pg, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-next page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page + 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customNextTemplate || defaultNextTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-last page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(totalPages, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customLastTemplate || defaultLastTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n</ul>\\n\\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\\n\\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\\n\\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\\n\\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\\n\\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: PaginationConfig\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    align: [{\n      type: Input\n    }],\n    maxSize: [{\n      type: Input\n    }],\n    boundaryLinks: [{\n      type: Input\n    }],\n    directionLinks: [{\n      type: Input\n    }],\n    firstText: [{\n      type: Input\n    }],\n    previousText: [{\n      type: Input\n    }],\n    nextText: [{\n      type: Input\n    }],\n    lastText: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    pageBtnClass: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    customPageTemplate: [{\n      type: Input\n    }],\n    customNextTemplate: [{\n      type: Input\n    }],\n    customPreviousTemplate: [{\n      type: Input\n    }],\n    customFirstTemplate: [{\n      type: Input\n    }],\n    customLastTemplate: [{\n      type: Input\n    }],\n    numPages: [{\n      type: Output\n    }],\n    pageChanged: [{\n      type: Output\n    }],\n    itemsPerPage: [{\n      type: Input\n    }],\n    totalItems: [{\n      type: Input\n    }]\n  });\n})();\nclass PaginationModule {\n  static forRoot() {\n    return {\n      ngModule: PaginationModule,\n      providers: []\n    };\n  }\n  static #_ = this.ɵfac = function PaginationModule_Factory(t) {\n    return new (t || PaginationModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: PaginationModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaginationModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [PagerComponent, PaginationComponent],\n      exports: [PagerComponent, PaginationComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PagerComponent, PaginationComponent, PaginationConfig, PaginationModule };","map":{"version":3,"names":["i0","Injectable","forwardRef","EventEmitter","Component","Input","Output","NgModule","NG_VALUE_ACCESSOR","i2","CommonModule","_c0","a0","a1","_c1","_c2","disabled","currentPage","PaginationComponent_li_1_Template","rf","ctx","_r16","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","PaginationComponent_li_1_Template_a_click_1_listener","$event","ɵɵrestoreView","ctx_r15","ɵɵnextContext","ɵɵresetView","selectPage","ɵɵelementContainer","ɵɵelementEnd","ctx_r0","_r11","ɵɵreference","ɵɵclassProp","noPrevious","ɵɵadvance","ɵɵproperty","customFirstTemplate","ɵɵpureFunction2","page","PaginationComponent_li_2_Template","_r18","PaginationComponent_li_2_Template_a_click_1_listener","ctx_r17","ctx_r1","_r9","customPreviousTemplate","_c3","a2","$implicit","PaginationComponent_li_3_Template","_r21","PaginationComponent_li_3_Template_a_click_1_listener","restoredCtx","pg_r19","ctx_r20","number","ctx_r2","_r5","active","customPageTemplate","ɵɵpureFunction3","PaginationComponent_li_4_Template","_r23","PaginationComponent_li_4_Template_a_click_1_listener","ctx_r22","ctx_r3","_r7","noNext","customNextTemplate","PaginationComponent_li_5_Template","_r25","PaginationComponent_li_5_Template_a_click_1_listener","ctx_r24","totalPages","ctx_r4","_r13","customLastTemplate","PaginationComponent_ng_template_6_Template","ɵɵtext","page_r26","ɵɵtextInterpolate","text","PaginationComponent_ng_template_8_Template","ctx_r8","getText","PaginationComponent_ng_template_10_Template","ctx_r10","PaginationComponent_ng_template_12_Template","ctx_r12","PaginationComponent_ng_template_14_Template","ctx_r14","PaginationConfig","constructor","main","itemsPerPage","boundaryLinks","directionLinks","firstText","previousText","nextText","lastText","pageBtnClass","rotate","pager","align","_","ɵfac","PaginationConfig_Factory","t","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","PAGER_CONTROL_VALUE_ACCESSOR","provide","useExisting","PagerComponent","multi","elementRef","paginationConfig","changeDetection","numPages","pageChanged","onChange","Function","prototype","onTouched","classMap","inited","_itemsPerPage","_totalItems","_totalPages","_page","config","configureOptions","Object","assign","v","calculateTotalPages","totalItems","emit","value","_previous","markForCheck","ngOnInit","window","nativeElement","getAttribute","maxSize","pages","getPages","writeValue","key","registerOnChange","fn","registerOnTouched","event","preventDefault","target","blur","makePage","num","startPage","endPage","isMaxSized","Math","max","floor","ceil","min","toString","push","previousPageSet","unshift","nextPageSet","PagerComponent_Factory","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","ɵcmp","ɵɵdefineComponent","selectors","inputs","outputs","features","ɵɵProvidersFeature","decls","vars","consts","template","PagerComponent_Template","PagerComponent_Template_a_click_2_listener","PagerComponent_Template_a_click_5_listener","ɵɵclassMap","dependencies","NgClass","encapsulation","selector","providers","PAGINATION_CONTROL_VALUE_ACCESSOR","PaginationComponent","PaginationComponent_Factory","PaginationComponent_Template","ɵɵtemplate","ɵɵtemplateRefExtractor","NgForOf","NgIf","NgTemplateOutlet","PaginationModule","forRoot","ngModule","PaginationModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["C:/Users/BongumusaN/TestingApp/client/node_modules/ngx-bootstrap/pagination/fesm2022/ngx-bootstrap-pagination.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n// todo: split\n/** Provides default values for Pagination and pager components */\nclass PaginationConfig {\n    constructor() {\n        this.main = {\n            itemsPerPage: 10,\n            boundaryLinks: false,\n            directionLinks: true,\n            firstText: 'First',\n            previousText: 'Previous',\n            nextText: 'Next',\n            lastText: 'Last',\n            pageBtnClass: '',\n            rotate: true\n        };\n        this.pager = {\n            itemsPerPage: 15,\n            previousText: '« Previous',\n            nextText: 'Next »',\n            pageBtnClass: '',\n            align: true\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: PaginationConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: PaginationConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: PaginationConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nconst PAGER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PagerComponent),\n    multi: true\n};\nclass PagerComponent {\n    constructor(elementRef, paginationConfig, changeDetection) {\n        this.elementRef = elementRef;\n        this.changeDetection = changeDetection;\n        /** if `true` aligns each link to the sides of pager */\n        this.align = false;\n        /** if false first and last buttons will be hidden */\n        this.boundaryLinks = false;\n        /** if false previous and next buttons will be hidden */\n        this.directionLinks = true;\n        // labels\n        /** first button text */\n        this.firstText = 'First';\n        /** previous button text */\n        this.previousText = '« Previous';\n        /** next button text */\n        this.nextText = 'Next »';\n        /** last button text */\n        this.lastText = 'Last';\n        /** if true current page will in the middle of pages list */\n        this.rotate = true;\n        // css\n        /** add class to <code><li\\></code> */\n        this.pageBtnClass = '';\n        /** if true pagination component will be disabled */\n        this.disabled = false;\n        /** fired when total pages count changes, $event:number equals to total pages count */\n        this.numPages = new EventEmitter();\n        /** fired when page was changed, $event:{page, itemsPerPage} equals to\n         * object with current page index and number of items per page\n         */\n        this.pageChanged = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.classMap = '';\n        this.inited = false;\n        this._itemsPerPage = 15;\n        this._totalItems = 0;\n        this._totalPages = 0;\n        this._page = 1;\n        this.elementRef = elementRef;\n        if (!this.config) {\n            this.configureOptions(Object.assign({}, paginationConfig.main, paginationConfig.pager));\n        }\n    }\n    /** maximum number of items per page. If value less than 1 will display all items on one page */\n    get itemsPerPage() {\n        return this._itemsPerPage;\n    }\n    set itemsPerPage(v) {\n        this._itemsPerPage = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    /** total number of items in all pages */\n    get totalItems() {\n        return this._totalItems;\n    }\n    set totalItems(v) {\n        this._totalItems = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    get totalPages() {\n        return this._totalPages;\n    }\n    set totalPages(v) {\n        this._totalPages = v;\n        this.numPages.emit(v);\n        if (this.inited) {\n            this.selectPage(this.page);\n        }\n    }\n    get page() {\n        return this._page;\n    }\n    set page(value) {\n        const _previous = this._page;\n        this._page = value > this.totalPages ? this.totalPages : value || 1;\n        this.changeDetection.markForCheck();\n        if (_previous === this._page || typeof _previous === 'undefined') {\n            return;\n        }\n        this.pageChanged.emit({\n            page: this._page,\n            itemsPerPage: this.itemsPerPage\n        });\n    }\n    configureOptions(config) {\n        this.config = Object.assign({}, config);\n    }\n    ngOnInit() {\n        if (typeof window !== 'undefined') {\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n        }\n        // watch for maxSize\n        if (typeof this.maxSize === 'undefined') {\n            this.maxSize = this.config?.maxSize || 0;\n        }\n        if (typeof this.rotate === 'undefined') {\n            this.rotate = !!this.config?.rotate;\n        }\n        if (typeof this.boundaryLinks === 'undefined') {\n            this.boundaryLinks = !!this.config?.boundaryLinks;\n        }\n        if (typeof this.directionLinks === 'undefined') {\n            this.directionLinks = !!this.config?.directionLinks;\n        }\n        if (typeof this.pageBtnClass === 'undefined') {\n            this.pageBtnClass = this.config?.pageBtnClass || '';\n        }\n        // base class\n        if (typeof this.itemsPerPage === 'undefined') {\n            this.itemsPerPage = this.config?.itemsPerPage || 0;\n        }\n        this.totalPages = this.calculateTotalPages();\n        // this class\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.inited = true;\n    }\n    writeValue(value) {\n        this.page = value;\n        this.pages = this.getPages(this.page, this.totalPages);\n    }\n    getText(key) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return this[`${key}Text`] || this.config[`${key}Text`];\n    }\n    noPrevious() {\n        return this.page === 1;\n    }\n    noNext() {\n        return this.page === this.totalPages;\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    selectPage(page, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!this.disabled) {\n            if (event && event.target) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const target = event.target;\n                target.blur();\n            }\n            this.writeValue(page);\n            this.onChange(this.page);\n        }\n    }\n    // Create page object used in template\n    makePage(num, text, active) {\n        return { text, number: num, active };\n    }\n    getPages(currentPage, totalPages) {\n        const pages = [];\n        // Default page limits\n        let startPage = 1;\n        let endPage = totalPages;\n        const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n        // recompute if maxSize\n        if (isMaxSized && this.maxSize) {\n            if (this.rotate) {\n                // Current page is displayed in the middle of the visible ones\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n                endPage = startPage + this.maxSize - 1;\n                // Adjust if limit is exceeded\n                if (endPage > totalPages) {\n                    endPage = totalPages;\n                    startPage = endPage - this.maxSize + 1;\n                }\n            }\n            else {\n                // Visible pages are paginated with maxSize\n                startPage =\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n                // Adjust last page if limit is exceeded\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n            }\n        }\n        // Add page number links\n        for (let num = startPage; num <= endPage; num++) {\n            const page = this.makePage(num, num.toString(), num === currentPage);\n            pages.push(page);\n        }\n        // Add links to move between page sets\n        if (isMaxSized && !this.rotate) {\n            if (startPage > 1) {\n                const previousPageSet = this.makePage(startPage - 1, '...', false);\n                pages.unshift(previousPageSet);\n            }\n            if (endPage < totalPages) {\n                const nextPageSet = this.makePage(endPage + 1, '...', false);\n                pages.push(nextPageSet);\n            }\n        }\n        return pages;\n    }\n    // base class\n    calculateTotalPages() {\n        const totalPages = this.itemsPerPage < 1\n            ? 1\n            : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: PagerComponent, deps: [{ token: i0.ElementRef }, { token: PaginationConfig }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.4\", type: PagerComponent, selector: \"pager\", inputs: { align: \"align\", maxSize: \"maxSize\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", firstText: \"firstText\", previousText: \"previousText\", nextText: \"nextText\", lastText: \"lastText\", rotate: \"rotate\", pageBtnClass: \"pageBtnClass\", disabled: \"disabled\", itemsPerPage: \"itemsPerPage\", totalItems: \"totalItems\" }, outputs: { numPages: \"numPages\", pageChanged: \"pageChanged\" }, providers: [PAGER_CONTROL_VALUE_ACCESSOR], ngImport: i0, template: \"<ul class=\\\"pager\\\">\\n  <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-left': align, 'float-left': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a>\\n  </li>\\n  <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a>\\n  </li>\\n</ul>\\n\", dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: PagerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'pager', providers: [PAGER_CONTROL_VALUE_ACCESSOR], template: \"<ul class=\\\"pager\\\">\\n  <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-left': align, 'float-left': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a>\\n  </li>\\n  <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a>\\n  </li>\\n</ul>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: PaginationConfig }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { align: [{\n                type: Input\n            }], maxSize: [{\n                type: Input\n            }], boundaryLinks: [{\n                type: Input\n            }], directionLinks: [{\n                type: Input\n            }], firstText: [{\n                type: Input\n            }], previousText: [{\n                type: Input\n            }], nextText: [{\n                type: Input\n            }], lastText: [{\n                type: Input\n            }], rotate: [{\n                type: Input\n            }], pageBtnClass: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], numPages: [{\n                type: Output\n            }], pageChanged: [{\n                type: Output\n            }], itemsPerPage: [{\n                type: Input\n            }], totalItems: [{\n                type: Input\n            }] } });\n\nconst PAGINATION_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PaginationComponent),\n    multi: true\n};\nclass PaginationComponent {\n    constructor(elementRef, paginationConfig, changeDetection) {\n        this.elementRef = elementRef;\n        this.changeDetection = changeDetection;\n        /** if `true` aligns each link to the sides of pager */\n        this.align = true;\n        /** if false first and last buttons will be hidden */\n        this.boundaryLinks = false;\n        /** if false previous and next buttons will be hidden */\n        this.directionLinks = true;\n        /** if true current page will in the middle of pages list */\n        this.rotate = true;\n        // css\n        /** add class to <code><li\\></code> */\n        this.pageBtnClass = '';\n        /** if true pagination component will be disabled */\n        this.disabled = false;\n        /** fired when total pages count changes, $event:number equals to total pages count */\n        this.numPages = new EventEmitter();\n        /** fired when page was changed, $event:{page, itemsPerPage} equals to object\n         * with current page index and number of items per page\n         */\n        this.pageChanged = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.classMap = '';\n        this.inited = false;\n        this._itemsPerPage = 10;\n        this._totalItems = 0;\n        this._totalPages = 0;\n        this._page = 1;\n        this.elementRef = elementRef;\n        if (!this.config) {\n            this.configureOptions(paginationConfig.main);\n        }\n    }\n    /** maximum number of items per page. If value less than 1 will display all items on one page */\n    get itemsPerPage() {\n        return this._itemsPerPage;\n    }\n    set itemsPerPage(v) {\n        this._itemsPerPage = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    /** total number of items in all pages */\n    get totalItems() {\n        return this._totalItems;\n    }\n    set totalItems(v) {\n        this._totalItems = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    get totalPages() {\n        return this._totalPages;\n    }\n    set totalPages(v) {\n        this._totalPages = v;\n        this.numPages.emit(v);\n        if (this.inited) {\n            this.selectPage(this.page);\n        }\n    }\n    get page() {\n        return this._page;\n    }\n    set page(value) {\n        const _previous = this._page;\n        this._page = value > this.totalPages ? this.totalPages : value || 1;\n        this.changeDetection.markForCheck();\n        if (_previous === this._page || typeof _previous === 'undefined') {\n            return;\n        }\n        this.pageChanged.emit({\n            page: this._page,\n            itemsPerPage: this.itemsPerPage\n        });\n    }\n    configureOptions(config) {\n        this.config = Object.assign({}, config);\n    }\n    ngOnInit() {\n        if (typeof window !== 'undefined') {\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n        }\n        // watch for maxSize\n        if (typeof this.maxSize === 'undefined') {\n            this.maxSize = this.config?.maxSize || 0;\n        }\n        if (typeof this.rotate === 'undefined') {\n            this.rotate = !!this.config?.rotate;\n        }\n        if (typeof this.boundaryLinks === 'undefined') {\n            this.boundaryLinks = !!this.config?.boundaryLinks;\n        }\n        if (typeof this.directionLinks === 'undefined') {\n            this.directionLinks = !!this.config?.directionLinks;\n        }\n        if (typeof this.pageBtnClass === 'undefined') {\n            this.pageBtnClass = this.config?.pageBtnClass || '';\n        }\n        // base class\n        if (typeof this.itemsPerPage === 'undefined') {\n            this.itemsPerPage = this.config?.itemsPerPage || 0;\n        }\n        this.totalPages = this.calculateTotalPages();\n        // this class\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.inited = true;\n    }\n    writeValue(value) {\n        this.page = value;\n        this.pages = this.getPages(this.page, this.totalPages);\n    }\n    getText(key) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return this[`${key}Text`] || this.config[`${key}Text`];\n    }\n    noPrevious() {\n        return this.page === 1;\n    }\n    noNext() {\n        return this.page === this.totalPages;\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    selectPage(page, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!this.disabled) {\n            if (event && event.target) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const target = event.target;\n                target.blur();\n            }\n            this.writeValue(page);\n            this.onChange(this.page);\n        }\n    }\n    // Create page object used in template\n    makePage(num, text, active) {\n        return { text, number: num, active };\n    }\n    getPages(currentPage, totalPages) {\n        const pages = [];\n        // Default page limits\n        let startPage = 1;\n        let endPage = totalPages;\n        const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n        // recompute if maxSize\n        if (isMaxSized && this.maxSize) {\n            if (this.rotate) {\n                // Current page is displayed in the middle of the visible ones\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n                endPage = startPage + this.maxSize - 1;\n                // Adjust if limit is exceeded\n                if (endPage > totalPages) {\n                    endPage = totalPages;\n                    startPage = endPage - this.maxSize + 1;\n                }\n            }\n            else {\n                // Visible pages are paginated with maxSize\n                startPage =\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n                // Adjust last page if limit is exceeded\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n            }\n        }\n        // Add page number links\n        for (let num = startPage; num <= endPage; num++) {\n            const page = this.makePage(num, num.toString(), num === currentPage);\n            pages.push(page);\n        }\n        // Add links to move between page sets\n        if (isMaxSized && !this.rotate) {\n            if (startPage > 1) {\n                const previousPageSet = this.makePage(startPage - 1, '...', false);\n                pages.unshift(previousPageSet);\n            }\n            if (endPage < totalPages) {\n                const nextPageSet = this.makePage(endPage + 1, '...', false);\n                pages.push(nextPageSet);\n            }\n        }\n        return pages;\n    }\n    // base class\n    calculateTotalPages() {\n        const totalPages = this.itemsPerPage < 1\n            ? 1\n            : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: PaginationComponent, deps: [{ token: i0.ElementRef }, { token: PaginationConfig }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.4\", type: PaginationComponent, selector: \"pagination\", inputs: { align: \"align\", maxSize: \"maxSize\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", firstText: \"firstText\", previousText: \"previousText\", nextText: \"nextText\", lastText: \"lastText\", rotate: \"rotate\", pageBtnClass: \"pageBtnClass\", disabled: \"disabled\", customPageTemplate: \"customPageTemplate\", customNextTemplate: \"customNextTemplate\", customPreviousTemplate: \"customPreviousTemplate\", customFirstTemplate: \"customFirstTemplate\", customLastTemplate: \"customLastTemplate\", itemsPerPage: \"itemsPerPage\", totalItems: \"totalItems\" }, outputs: { numPages: \"numPages\", pageChanged: \"pageChanged\" }, providers: [PAGINATION_CONTROL_VALUE_ACCESSOR], ngImport: i0, template: \"<ul class=\\\"pagination\\\" [ngClass]=\\\"classMap\\\">\\n  <li class=\\\"pagination-first page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customFirstTemplate || defaultFirstTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-prev page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page - 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPreviousTemplate || defaultPreviousTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li *ngFor=\\\"let pg of pages\\\"\\n      [class.active]=\\\"pg.active\\\"\\n      [class.disabled]=\\\"disabled && !pg.active\\\"\\n      class=\\\"pagination-page page-item\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(pg.number, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPageTemplate || defaultPageTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pg, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-next page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page + 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customNextTemplate || defaultNextTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-last page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(totalPages, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customLastTemplate || defaultLastTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n</ul>\\n\\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\\n\\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\\n\\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\\n\\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\\n\\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\\n\", dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: PaginationComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'pagination', providers: [PAGINATION_CONTROL_VALUE_ACCESSOR], template: \"<ul class=\\\"pagination\\\" [ngClass]=\\\"classMap\\\">\\n  <li class=\\\"pagination-first page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customFirstTemplate || defaultFirstTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-prev page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page - 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPreviousTemplate || defaultPreviousTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li *ngFor=\\\"let pg of pages\\\"\\n      [class.active]=\\\"pg.active\\\"\\n      [class.disabled]=\\\"disabled && !pg.active\\\"\\n      class=\\\"pagination-page page-item\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(pg.number, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPageTemplate || defaultPageTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pg, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-next page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page + 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customNextTemplate || defaultNextTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-last page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(totalPages, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customLastTemplate || defaultLastTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n</ul>\\n\\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\\n\\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\\n\\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\\n\\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\\n\\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: PaginationConfig }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { align: [{\n                type: Input\n            }], maxSize: [{\n                type: Input\n            }], boundaryLinks: [{\n                type: Input\n            }], directionLinks: [{\n                type: Input\n            }], firstText: [{\n                type: Input\n            }], previousText: [{\n                type: Input\n            }], nextText: [{\n                type: Input\n            }], lastText: [{\n                type: Input\n            }], rotate: [{\n                type: Input\n            }], pageBtnClass: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], customPageTemplate: [{\n                type: Input\n            }], customNextTemplate: [{\n                type: Input\n            }], customPreviousTemplate: [{\n                type: Input\n            }], customFirstTemplate: [{\n                type: Input\n            }], customLastTemplate: [{\n                type: Input\n            }], numPages: [{\n                type: Output\n            }], pageChanged: [{\n                type: Output\n            }], itemsPerPage: [{\n                type: Input\n            }], totalItems: [{\n                type: Input\n            }] } });\n\nclass PaginationModule {\n    static forRoot() {\n        return { ngModule: PaginationModule, providers: [] };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: PaginationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.4\", ngImport: i0, type: PaginationModule, declarations: [PagerComponent, PaginationComponent], imports: [CommonModule], exports: [PagerComponent, PaginationComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: PaginationModule, imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: PaginationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [PagerComponent, PaginationComponent],\n                    exports: [PagerComponent, PaginationComponent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PagerComponent, PaginationComponent, PaginationConfig, PaginationModule };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,UAAU,EAAEC,UAAU,EAAEC,YAAY,EAAEC,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,eAAe;AACxG,SAASC,iBAAiB,QAAQ,gBAAgB;AAClD,OAAO,KAAKC,EAAE,MAAM,iBAAiB;AACrC,SAASC,YAAY,QAAQ,iBAAiB;;AAE9C;AACA;AAAA,MAAAC,GAAA,YAAAA,CAAAC,EAAA,EAAAC,EAAA;EAAA;IAAA,aAAAD,EAAA;IAAA,cAAAC;EAAA;AAAA;AAAA,MAAAC,GAAA,YAAAA,CAAAF,EAAA,EAAAC,EAAA;EAAA;IAAA,cAAAD,EAAA;IAAA,eAAAC;EAAA;AAAA;AAAA,MAAAE,GAAA,YAAAA,CAAAH,EAAA,EAAAC,EAAA;EAAA;IAAAG,QAAA,EAAAJ,EAAA;IAAAK,WAAA,EAAAJ;EAAA;AAAA;AAAA,SAAAK,kCAAAC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAE,IAAA,GAsBoGrB,EAAE,CAAAsB,gBAAA;IAAFtB,EAAE,CAAAuB,cAAA,YAgd+4B,CAAC,WAAD,CAAC;IAhdl5BvB,EAAE,CAAAwB,UAAA,mBAAAC,qDAAAC,MAAA;MAAF1B,EAAE,CAAA2B,aAAA,CAAAN,IAAA;MAAA,MAAAO,OAAA,GAAF5B,EAAE,CAAA6B,aAAA;MAAA,OAAF7B,EAAE,CAAA8B,WAAA,CAgd47BF,OAAA,CAAAG,UAAA,CAAW,CAAC,EAAAL,MAAQ,EAAC;IAAA,CAAC,CAAC;IAhdr9B1B,EAAE,CAAAgC,kBAAA,MAgd6qC,CAAC;IAhdhrChC,EAAE,CAAAiC,YAAA,CAgdurC,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAe,MAAA,GAhd1rClC,EAAE,CAAA6B,aAAA;IAAA,MAAAM,IAAA,GAAFnC,EAAE,CAAAoC,WAAA;IAAFpC,EAAE,CAAAqC,WAAA,aAAAH,MAAA,CAAAI,UAAA,MAAAJ,MAAA,CAAAlB,QAgd84B,CAAC;IAhdj5BhB,EAAE,CAAAuC,SAAA,EAgd2iC,CAAC;IAhd9iCvC,EAAE,CAAAwC,UAAA,qBAAAN,MAAA,CAAAO,mBAAA,IAAAN,IAgd2iC,CAAC,4BAhd9iCnC,EAAE,CAAA0C,eAAA,IAAA3B,GAAA,EAAAmB,MAAA,CAAAI,UAAA,MAAAJ,MAAA,CAAAlB,QAAA,EAAAkB,MAAA,CAAAS,IAAA,CAgd2iC,CAAC;EAAA;AAAA;AAAA,SAAAC,kCAAAzB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA0B,IAAA,GAhd9iC7C,EAAE,CAAAsB,gBAAA;IAAFtB,EAAE,CAAAuB,cAAA,YAgdm0C,CAAC,WAAD,CAAC;IAhdt0CvB,EAAE,CAAAwB,UAAA,mBAAAsB,qDAAApB,MAAA;MAAF1B,EAAE,CAAA2B,aAAA,CAAAkB,IAAA;MAAA,MAAAE,OAAA,GAAF/C,EAAE,CAAA6B,aAAA;MAAA,OAAF7B,EAAE,CAAA8B,WAAA,CAgdg3CiB,OAAA,CAAAhB,UAAA,CAAAgB,OAAA,CAAAJ,IAAA,GAAkB,CAAC,EAAAjB,MAAQ,EAAC;IAAA,CAAC,CAAC;IAhdh5C1B,EAAE,CAAAgC,kBAAA,MAgd8mD,CAAC;IAhdjnDhC,EAAE,CAAAiC,YAAA,CAgdwnD,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAA6B,MAAA,GAhd3nDhD,EAAE,CAAA6B,aAAA;IAAA,MAAAoB,GAAA,GAAFjD,EAAE,CAAAoC,WAAA;IAAFpC,EAAE,CAAAqC,WAAA,aAAAW,MAAA,CAAAV,UAAA,MAAAU,MAAA,CAAAhC,QAgdk0C,CAAC;IAhdr0ChB,EAAE,CAAAuC,SAAA,EAgd4+C,CAAC;IAhd/+CvC,EAAE,CAAAwC,UAAA,qBAAAQ,MAAA,CAAAE,sBAAA,IAAAD,GAgd4+C,CAAC,4BAhd/+CjD,EAAE,CAAA0C,eAAA,IAAA3B,GAAA,EAAAiC,MAAA,CAAAV,UAAA,MAAAU,MAAA,CAAAhC,QAAA,EAAAgC,MAAA,CAAAL,IAAA,CAgd4+C,CAAC;EAAA;AAAA;AAAA,MAAAQ,GAAA,YAAAA,CAAAvC,EAAA,EAAAC,EAAA,EAAAuC,EAAA;EAAA;IAAApC,QAAA,EAAAJ,EAAA;IAAAyC,SAAA,EAAAxC,EAAA;IAAAI,WAAA,EAAAmC;EAAA;AAAA;AAAA,SAAAE,kCAAAnC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAoC,IAAA,GAhd/+CvD,EAAE,CAAAsB,gBAAA;IAAFtB,EAAE,CAAAuB,cAAA,YAgdwyD,CAAC,WAAD,CAAC;IAhd3yDvB,EAAE,CAAAwB,UAAA,mBAAAgC,qDAAA9B,MAAA;MAAA,MAAA+B,WAAA,GAAFzD,EAAE,CAAA2B,aAAA,CAAA4B,IAAA;MAAA,MAAAG,MAAA,GAAAD,WAAA,CAAAJ,SAAA;MAAA,MAAAM,OAAA,GAAF3D,EAAE,CAAA6B,aAAA;MAAA,OAAF7B,EAAE,CAAA8B,WAAA,CAgdq1D6B,OAAA,CAAA5B,UAAA,CAAA2B,MAAA,CAAAE,MAAA,EAAAlC,MAA4B,EAAC;IAAA,CAAC,CAAC;IAhdt3D1B,EAAE,CAAAgC,kBAAA,MAgd2kE,CAAC;IAhd9kEhC,EAAE,CAAAiC,YAAA,CAgdqlE,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAuC,MAAA,GAAAtC,GAAA,CAAAiC,SAAA;IAAA,MAAAQ,MAAA,GAhdxlE7D,EAAE,CAAA6B,aAAA;IAAA,MAAAiC,GAAA,GAAF9D,EAAE,CAAAoC,WAAA;IAAFpC,EAAE,CAAAqC,WAAA,WAAAqB,MAAA,CAAAK,MAgdysD,CAAC,aAAAF,MAAA,CAAA7C,QAAA,KAAA0C,MAAA,CAAAK,MAAD,CAAC;IAhd5sD/D,EAAE,CAAAuC,SAAA,EAgd08D,CAAC;IAhd78DvC,EAAE,CAAAwC,UAAA,qBAAAqB,MAAA,CAAAG,kBAAA,IAAAF,GAgd08D,CAAC,4BAhd78D9D,EAAE,CAAAiE,eAAA,IAAAd,GAAA,EAAAU,MAAA,CAAA7C,QAAA,EAAA0C,MAAA,EAAAG,MAAA,CAAAlB,IAAA,CAgd08D,CAAC;EAAA;AAAA;AAAA,SAAAuB,kCAAA/C,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgD,IAAA,GAhd78DnE,EAAE,CAAAsB,gBAAA;IAAFtB,EAAE,CAAAuB,cAAA,YAgd6tE,CAAC,WAAD,CAAC;IAhdhuEvB,EAAE,CAAAwB,UAAA,mBAAA4C,qDAAA1C,MAAA;MAAF1B,EAAE,CAAA2B,aAAA,CAAAwC,IAAA;MAAA,MAAAE,OAAA,GAAFrE,EAAE,CAAA6B,aAAA;MAAA,OAAF7B,EAAE,CAAA8B,WAAA,CAgd0wEuC,OAAA,CAAAtC,UAAA,CAAAsC,OAAA,CAAA1B,IAAA,GAAkB,CAAC,EAAAjB,MAAQ,EAAC;IAAA,CAAC,CAAC;IAhd1yE1B,EAAE,CAAAgC,kBAAA,MAgd4/E,CAAC;IAhd//EhC,EAAE,CAAAiC,YAAA,CAgdsgF,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAmD,MAAA,GAhdzgFtE,EAAE,CAAA6B,aAAA;IAAA,MAAA0C,GAAA,GAAFvE,EAAE,CAAAoC,WAAA;IAAFpC,EAAE,CAAAqC,WAAA,aAAAiC,MAAA,CAAAE,MAAA,MAAAF,MAAA,CAAAtD,QAgd4tE,CAAC;IAhd/tEhB,EAAE,CAAAuC,SAAA,EAgd83E,CAAC;IAhdj4EvC,EAAE,CAAAwC,UAAA,qBAAA8B,MAAA,CAAAG,kBAAA,IAAAF,GAgd83E,CAAC,4BAhdj4EvE,EAAE,CAAA0C,eAAA,IAAA3B,GAAA,EAAAuD,MAAA,CAAAE,MAAA,MAAAF,MAAA,CAAAtD,QAAA,EAAAsD,MAAA,CAAA3B,IAAA,CAgd83E,CAAC;EAAA;AAAA;AAAA,SAAA+B,kCAAAvD,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAwD,IAAA,GAhdj4E3E,EAAE,CAAAsB,gBAAA;IAAFtB,EAAE,CAAAuB,cAAA,YAgd6oF,CAAC,WAAD,CAAC;IAhdhpFvB,EAAE,CAAAwB,UAAA,mBAAAoD,qDAAAlD,MAAA;MAAF1B,EAAE,CAAA2B,aAAA,CAAAgD,IAAA;MAAA,MAAAE,OAAA,GAAF7E,EAAE,CAAA6B,aAAA;MAAA,OAAF7B,EAAE,CAAA8B,WAAA,CAgd0rF+C,OAAA,CAAA9C,UAAA,CAAA8C,OAAA,CAAAC,UAAA,EAAApD,MAA6B,EAAC;IAAA,CAAC,CAAC;IAhd5tF1B,EAAE,CAAAgC,kBAAA,MAgd86F,CAAC;IAhdj7FhC,EAAE,CAAAiC,YAAA,CAgdw7F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAA4D,MAAA,GAhd37F/E,EAAE,CAAA6B,aAAA;IAAA,MAAAmD,IAAA,GAAFhF,EAAE,CAAAoC,WAAA;IAAFpC,EAAE,CAAAqC,WAAA,aAAA0C,MAAA,CAAAP,MAAA,MAAAO,MAAA,CAAA/D,QAgd4oF,CAAC;IAhd/oFhB,EAAE,CAAAuC,SAAA,EAgdgzF,CAAC;IAhdnzFvC,EAAE,CAAAwC,UAAA,qBAAAuC,MAAA,CAAAE,kBAAA,IAAAD,IAgdgzF,CAAC,4BAhdnzFhF,EAAE,CAAA0C,eAAA,IAAA3B,GAAA,EAAAgE,MAAA,CAAAP,MAAA,MAAAO,MAAA,CAAA/D,QAAA,EAAA+D,MAAA,CAAApC,IAAA,CAgdgzF,CAAC;EAAA;AAAA;AAAA,SAAAuC,2CAAA/D,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhdnzFnB,EAAE,CAAAmF,MAAA,EAgdsgG,CAAC;EAAA;EAAA,IAAAhE,EAAA;IAAA,MAAAiE,QAAA,GAAAhE,GAAA,CAAAiC,SAAA;IAhdzgGrD,EAAE,CAAAqF,iBAAA,CAAAD,QAAA,CAAAE,IAgdsgG,CAAC;EAAA;AAAA;AAAA,SAAAC,2CAAApE,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhdzgGnB,EAAE,CAAAmF,MAAA,EAgd+kG,CAAC;EAAA;EAAA,IAAAhE,EAAA;IAAA,MAAAqE,MAAA,GAhdllGxF,EAAE,CAAA6B,aAAA;IAAF7B,EAAE,CAAAqF,iBAAA,CAAAG,MAAA,CAAAC,OAAA,QAgd+kG,CAAC;EAAA;AAAA;AAAA,SAAAC,4CAAAvE,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhdllGnB,EAAE,CAAAmF,MAAA,EAgdgqG,CAAC;EAAA;EAAA,IAAAhE,EAAA;IAAA,MAAAwE,OAAA,GAhdnqG3F,EAAE,CAAA6B,aAAA;IAAF7B,EAAE,CAAAqF,iBAAA,CAAAM,OAAA,CAAAF,OAAA,YAgdgqG,CAAC;EAAA;AAAA;AAAA,SAAAG,4CAAAzE,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhdnqGnB,EAAE,CAAAmF,MAAA,EAgd2uG,CAAC;EAAA;EAAA,IAAAhE,EAAA;IAAA,MAAA0E,OAAA,GAhd9uG7F,EAAE,CAAA6B,aAAA;IAAF7B,EAAE,CAAAqF,iBAAA,CAAAQ,OAAA,CAAAJ,OAAA,SAgd2uG,CAAC;EAAA;AAAA;AAAA,SAAAK,4CAAA3E,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhd9uGnB,EAAE,CAAAmF,MAAA,EAgdozG,CAAC;EAAA;EAAA,IAAAhE,EAAA;IAAA,MAAA4E,OAAA,GAhdvzG/F,EAAE,CAAA6B,aAAA;IAAF7B,EAAE,CAAAqF,iBAAA,CAAAU,OAAA,CAAAN,OAAA,QAgdozG,CAAC;EAAA;AAAA;AAre35G,MAAMO,gBAAgB,CAAC;EACnBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,IAAI,GAAG;MACRC,YAAY,EAAE,EAAE;MAChBC,aAAa,EAAE,KAAK;MACpBC,cAAc,EAAE,IAAI;MACpBC,SAAS,EAAE,OAAO;MAClBC,YAAY,EAAE,UAAU;MACxBC,QAAQ,EAAE,MAAM;MAChBC,QAAQ,EAAE,MAAM;MAChBC,YAAY,EAAE,EAAE;MAChBC,MAAM,EAAE;IACZ,CAAC;IACD,IAAI,CAACC,KAAK,GAAG;MACTT,YAAY,EAAE,EAAE;MAChBI,YAAY,EAAE,YAAY;MAC1BC,QAAQ,EAAE,QAAQ;MAClBE,YAAY,EAAE,EAAE;MAChBG,KAAK,EAAE;IACX,CAAC;EACL;EAAC,QAAAC,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAC,yBAAAC,CAAA;IAAA,YAAAA,CAAA,IAAwFjB,gBAAgB;EAAA,CAAoD;EAAA,QAAAkB,EAAA,GACrK,IAAI,CAACC,KAAK,kBAD6EnH,EAAE,CAAAoH,kBAAA;IAAAC,KAAA,EACYrB,gBAAgB;IAAAsB,OAAA,EAAhBtB,gBAAgB,CAAAe,IAAA;IAAAQ,UAAA,EAAc;EAAM,EAAG;AACzJ;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAHoGxH,EAAE,CAAAyH,iBAAA,CAGXzB,gBAAgB,EAAc,CAAC;IAC9G0B,IAAI,EAAEzH,UAAU;IAChB0H,IAAI,EAAE,CAAC;MACCJ,UAAU,EAAE;IAChB,CAAC;EACT,CAAC,CAAC;AAAA;AAEV,MAAMK,4BAA4B,GAAG;EACjCC,OAAO,EAAErH,iBAAiB;EAC1BsH,WAAW,EAAE5H,UAAU,CAAC,MAAM6H,cAAc,CAAC;EAC7CC,KAAK,EAAE;AACX,CAAC;AACD,MAAMD,cAAc,CAAC;EACjB9B,WAAWA,CAACgC,UAAU,EAAEC,gBAAgB,EAAEC,eAAe,EAAE;IACvD,IAAI,CAACF,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACE,eAAe,GAAGA,eAAe;IACtC;IACA,IAAI,CAACtB,KAAK,GAAG,KAAK;IAClB;IACA,IAAI,CAACT,aAAa,GAAG,KAAK;IAC1B;IACA,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B;IACA;IACA,IAAI,CAACC,SAAS,GAAG,OAAO;IACxB;IACA,IAAI,CAACC,YAAY,GAAG,YAAY;IAChC;IACA,IAAI,CAACC,QAAQ,GAAG,QAAQ;IACxB;IACA,IAAI,CAACC,QAAQ,GAAG,MAAM;IACtB;IACA,IAAI,CAACE,MAAM,GAAG,IAAI;IAClB;IACA;IACA,IAAI,CAACD,YAAY,GAAG,EAAE;IACtB;IACA,IAAI,CAAC1F,QAAQ,GAAG,KAAK;IACrB;IACA,IAAI,CAACoH,QAAQ,GAAG,IAAIjI,YAAY,CAAC,CAAC;IAClC;AACR;AACA;IACQ,IAAI,CAACkI,WAAW,GAAG,IAAIlI,YAAY,CAAC,CAAC;IACrC,IAAI,CAACmI,QAAQ,GAAGC,QAAQ,CAACC,SAAS;IAClC,IAAI,CAACC,SAAS,GAAGF,QAAQ,CAACC,SAAS;IACnC,IAAI,CAACE,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,WAAW,GAAG,CAAC;IACpB,IAAI,CAACC,WAAW,GAAG,CAAC;IACpB,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACd,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAAC,IAAI,CAACe,MAAM,EAAE;MACd,IAAI,CAACC,gBAAgB,CAACC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEjB,gBAAgB,CAAChC,IAAI,EAAEgC,gBAAgB,CAACtB,KAAK,CAAC,CAAC;IAC3F;EACJ;EACA;EACA,IAAIT,YAAYA,CAAA,EAAG;IACf,OAAO,IAAI,CAACyC,aAAa;EAC7B;EACA,IAAIzC,YAAYA,CAACiD,CAAC,EAAE;IAChB,IAAI,CAACR,aAAa,GAAGQ,CAAC;IACtB,IAAI,CAACtE,UAAU,GAAG,IAAI,CAACuE,mBAAmB,CAAC,CAAC;EAChD;EACA;EACA,IAAIC,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACT,WAAW;EAC3B;EACA,IAAIS,UAAUA,CAACF,CAAC,EAAE;IACd,IAAI,CAACP,WAAW,GAAGO,CAAC;IACpB,IAAI,CAACtE,UAAU,GAAG,IAAI,CAACuE,mBAAmB,CAAC,CAAC;EAChD;EACA,IAAIvE,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACgE,WAAW;EAC3B;EACA,IAAIhE,UAAUA,CAACsE,CAAC,EAAE;IACd,IAAI,CAACN,WAAW,GAAGM,CAAC;IACpB,IAAI,CAAChB,QAAQ,CAACmB,IAAI,CAACH,CAAC,CAAC;IACrB,IAAI,IAAI,CAACT,MAAM,EAAE;MACb,IAAI,CAAC5G,UAAU,CAAC,IAAI,CAACY,IAAI,CAAC;IAC9B;EACJ;EACA,IAAIA,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACoG,KAAK;EACrB;EACA,IAAIpG,IAAIA,CAAC6G,KAAK,EAAE;IACZ,MAAMC,SAAS,GAAG,IAAI,CAACV,KAAK;IAC5B,IAAI,CAACA,KAAK,GAAGS,KAAK,GAAG,IAAI,CAAC1E,UAAU,GAAG,IAAI,CAACA,UAAU,GAAG0E,KAAK,IAAI,CAAC;IACnE,IAAI,CAACrB,eAAe,CAACuB,YAAY,CAAC,CAAC;IACnC,IAAID,SAAS,KAAK,IAAI,CAACV,KAAK,IAAI,OAAOU,SAAS,KAAK,WAAW,EAAE;MAC9D;IACJ;IACA,IAAI,CAACpB,WAAW,CAACkB,IAAI,CAAC;MAClB5G,IAAI,EAAE,IAAI,CAACoG,KAAK;MAChB5C,YAAY,EAAE,IAAI,CAACA;IACvB,CAAC,CAAC;EACN;EACA8C,gBAAgBA,CAACD,MAAM,EAAE;IACrB,IAAI,CAACA,MAAM,GAAGE,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,MAAM,CAAC;EAC3C;EACAW,QAAQA,CAAA,EAAG;IACP,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;MAC/B,IAAI,CAAClB,QAAQ,GAAG,IAAI,CAACT,UAAU,CAAC4B,aAAa,CAACC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE;IAC7E;IACA;IACA,IAAI,OAAO,IAAI,CAACC,OAAO,KAAK,WAAW,EAAE;MACrC,IAAI,CAACA,OAAO,GAAG,IAAI,CAACf,MAAM,EAAEe,OAAO,IAAI,CAAC;IAC5C;IACA,IAAI,OAAO,IAAI,CAACpD,MAAM,KAAK,WAAW,EAAE;MACpC,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,IAAI,CAACqC,MAAM,EAAErC,MAAM;IACvC;IACA,IAAI,OAAO,IAAI,CAACP,aAAa,KAAK,WAAW,EAAE;MAC3C,IAAI,CAACA,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC4C,MAAM,EAAE5C,aAAa;IACrD;IACA,IAAI,OAAO,IAAI,CAACC,cAAc,KAAK,WAAW,EAAE;MAC5C,IAAI,CAACA,cAAc,GAAG,CAAC,CAAC,IAAI,CAAC2C,MAAM,EAAE3C,cAAc;IACvD;IACA,IAAI,OAAO,IAAI,CAACK,YAAY,KAAK,WAAW,EAAE;MAC1C,IAAI,CAACA,YAAY,GAAG,IAAI,CAACsC,MAAM,EAAEtC,YAAY,IAAI,EAAE;IACvD;IACA;IACA,IAAI,OAAO,IAAI,CAACP,YAAY,KAAK,WAAW,EAAE;MAC1C,IAAI,CAACA,YAAY,GAAG,IAAI,CAAC6C,MAAM,EAAE7C,YAAY,IAAI,CAAC;IACtD;IACA,IAAI,CAACrB,UAAU,GAAG,IAAI,CAACuE,mBAAmB,CAAC,CAAC;IAC5C;IACA,IAAI,CAACW,KAAK,GAAG,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACtH,IAAI,EAAE,IAAI,CAACmC,UAAU,CAAC;IACtD,IAAI,CAAC6D,MAAM,GAAG,IAAI;EACtB;EACAuB,UAAUA,CAACV,KAAK,EAAE;IACd,IAAI,CAAC7G,IAAI,GAAG6G,KAAK;IACjB,IAAI,CAACQ,KAAK,GAAG,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACtH,IAAI,EAAE,IAAI,CAACmC,UAAU,CAAC;EAC1D;EACAW,OAAOA,CAAC0E,GAAG,EAAE;IACT;IACA,OAAO,IAAI,CAAE,GAAEA,GAAI,MAAK,CAAC,IAAI,IAAI,CAACnB,MAAM,CAAE,GAAEmB,GAAI,MAAK,CAAC;EAC1D;EACA7H,UAAUA,CAAA,EAAG;IACT,OAAO,IAAI,CAACK,IAAI,KAAK,CAAC;EAC1B;EACA6B,MAAMA,CAAA,EAAG;IACL,OAAO,IAAI,CAAC7B,IAAI,KAAK,IAAI,CAACmC,UAAU;EACxC;EACAsF,gBAAgBA,CAACC,EAAE,EAAE;IACjB,IAAI,CAAC/B,QAAQ,GAAG+B,EAAE;EACtB;EACAC,iBAAiBA,CAACD,EAAE,EAAE;IAClB,IAAI,CAAC5B,SAAS,GAAG4B,EAAE;EACvB;EACAtI,UAAUA,CAACY,IAAI,EAAE4H,KAAK,EAAE;IACpB,IAAIA,KAAK,EAAE;MACPA,KAAK,CAACC,cAAc,CAAC,CAAC;IAC1B;IACA,IAAI,CAAC,IAAI,CAACxJ,QAAQ,EAAE;MAChB,IAAIuJ,KAAK,IAAIA,KAAK,CAACE,MAAM,EAAE;QACvB;QACA,MAAMA,MAAM,GAAGF,KAAK,CAACE,MAAM;QAC3BA,MAAM,CAACC,IAAI,CAAC,CAAC;MACjB;MACA,IAAI,CAACR,UAAU,CAACvH,IAAI,CAAC;MACrB,IAAI,CAAC2F,QAAQ,CAAC,IAAI,CAAC3F,IAAI,CAAC;IAC5B;EACJ;EACA;EACAgI,QAAQA,CAACC,GAAG,EAAEtF,IAAI,EAAEvB,MAAM,EAAE;IACxB,OAAO;MAAEuB,IAAI;MAAE1B,MAAM,EAAEgH,GAAG;MAAE7G;IAAO,CAAC;EACxC;EACAkG,QAAQA,CAAChJ,WAAW,EAAE6D,UAAU,EAAE;IAC9B,MAAMkF,KAAK,GAAG,EAAE;IAChB;IACA,IAAIa,SAAS,GAAG,CAAC;IACjB,IAAIC,OAAO,GAAGhG,UAAU;IACxB,MAAMiG,UAAU,GAAG,OAAO,IAAI,CAAChB,OAAO,KAAK,WAAW,IAAI,IAAI,CAACA,OAAO,GAAGjF,UAAU;IACnF;IACA,IAAIiG,UAAU,IAAI,IAAI,CAAChB,OAAO,EAAE;MAC5B,IAAI,IAAI,CAACpD,MAAM,EAAE;QACb;QACAkE,SAAS,GAAGG,IAAI,CAACC,GAAG,CAAChK,WAAW,GAAG+J,IAAI,CAACE,KAAK,CAAC,IAAI,CAACnB,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACnEe,OAAO,GAAGD,SAAS,GAAG,IAAI,CAACd,OAAO,GAAG,CAAC;QACtC;QACA,IAAIe,OAAO,GAAGhG,UAAU,EAAE;UACtBgG,OAAO,GAAGhG,UAAU;UACpB+F,SAAS,GAAGC,OAAO,GAAG,IAAI,CAACf,OAAO,GAAG,CAAC;QAC1C;MACJ,CAAC,MACI;QACD;QACAc,SAAS,GACL,CAACG,IAAI,CAACG,IAAI,CAAClK,WAAW,GAAG,IAAI,CAAC8I,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAACA,OAAO,GAAG,CAAC;QAClE;QACAe,OAAO,GAAGE,IAAI,CAACI,GAAG,CAACP,SAAS,GAAG,IAAI,CAACd,OAAO,GAAG,CAAC,EAAEjF,UAAU,CAAC;MAChE;IACJ;IACA;IACA,KAAK,IAAI8F,GAAG,GAAGC,SAAS,EAAED,GAAG,IAAIE,OAAO,EAAEF,GAAG,EAAE,EAAE;MAC7C,MAAMjI,IAAI,GAAG,IAAI,CAACgI,QAAQ,CAACC,GAAG,EAAEA,GAAG,CAACS,QAAQ,CAAC,CAAC,EAAET,GAAG,KAAK3J,WAAW,CAAC;MACpE+I,KAAK,CAACsB,IAAI,CAAC3I,IAAI,CAAC;IACpB;IACA;IACA,IAAIoI,UAAU,IAAI,CAAC,IAAI,CAACpE,MAAM,EAAE;MAC5B,IAAIkE,SAAS,GAAG,CAAC,EAAE;QACf,MAAMU,eAAe,GAAG,IAAI,CAACZ,QAAQ,CAACE,SAAS,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;QAClEb,KAAK,CAACwB,OAAO,CAACD,eAAe,CAAC;MAClC;MACA,IAAIT,OAAO,GAAGhG,UAAU,EAAE;QACtB,MAAM2G,WAAW,GAAG,IAAI,CAACd,QAAQ,CAACG,OAAO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;QAC5Dd,KAAK,CAACsB,IAAI,CAACG,WAAW,CAAC;MAC3B;IACJ;IACA,OAAOzB,KAAK;EAChB;EACA;EACAX,mBAAmBA,CAAA,EAAG;IAClB,MAAMvE,UAAU,GAAG,IAAI,CAACqB,YAAY,GAAG,CAAC,GAClC,CAAC,GACD6E,IAAI,CAACG,IAAI,CAAC,IAAI,CAAC7B,UAAU,GAAG,IAAI,CAACnD,YAAY,CAAC;IACpD,OAAO6E,IAAI,CAACC,GAAG,CAACnG,UAAU,IAAI,CAAC,EAAE,CAAC,CAAC;EACvC;EAAC,QAAAgC,CAAA,GACQ,IAAI,CAACC,IAAI,YAAA2E,uBAAAzE,CAAA;IAAA,YAAAA,CAAA,IAAwFc,cAAc,EA9NxB/H,EAAE,CAAA2L,iBAAA,CA8NwC3L,EAAE,CAAC4L,UAAU,GA9NvD5L,EAAE,CAAA2L,iBAAA,CA8NkE3F,gBAAgB,GA9NpFhG,EAAE,CAAA2L,iBAAA,CA8N+F3L,EAAE,CAAC6L,iBAAiB;EAAA,CAA4C;EAAA,QAAA3E,EAAA,GACxP,IAAI,CAAC4E,IAAI,kBA/N8E9L,EAAE,CAAA+L,iBAAA;IAAArE,IAAA,EA+NJK,cAAc;IAAAiE,SAAA;IAAAC,MAAA;MAAApF,KAAA;MAAAkD,OAAA;MAAA3D,aAAA;MAAAC,cAAA;MAAAC,SAAA;MAAAC,YAAA;MAAAC,QAAA;MAAAC,QAAA;MAAAE,MAAA;MAAAD,YAAA;MAAA1F,QAAA;MAAAmF,YAAA;MAAAmD,UAAA;IAAA;IAAA4C,OAAA;MAAA9D,QAAA;MAAAC,WAAA;IAAA;IAAA8D,QAAA,GA/NZnM,EAAE,CAAAoM,kBAAA,CA+N2b,CAACxE,4BAA4B,CAAC;IAAAyE,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAtL,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QA/N3dnB,EAAE,CAAAuB,cAAA,WA+NugB,CAAC,WAAD,CAAC,UAAD,CAAC;QA/N1gBvB,EAAE,CAAAwB,UAAA,mBAAAkL,2CAAAhL,MAAA;UAAA,OA+NwsBN,GAAA,CAAAW,UAAA,CAAAX,GAAA,CAAAuB,IAAA,GAAkB,CAAC,EAAAjB,MAAQ,CAAC;QAAA,CAAC,CAAC;QA/NxuB1B,EAAE,CAAAmF,MAAA,EA+N+vB,CAAC;QA/NlwBnF,EAAE,CAAAiC,YAAA,CA+NmwB,CAAC,CAAD,CAAC;QA/NtwBjC,EAAE,CAAAuB,cAAA,WA+N86B,CAAC,UAAD,CAAC;QA/Nj7BvB,EAAE,CAAAwB,UAAA,mBAAAmL,2CAAAjL,MAAA;UAAA,OA+Nu8BN,GAAA,CAAAW,UAAA,CAAAX,GAAA,CAAAuB,IAAA,GAAkB,CAAC,EAAAjB,MAAQ,CAAC;QAAA,CAAC,CAAC;QA/Nv+B1B,EAAE,CAAAmF,MAAA,EA+N0/B,CAAC;QA/N7/BnF,EAAE,CAAAiC,YAAA,CA+N8/B,CAAC,CAAD,CAAC,CAAD,CAAC;MAAA;MAAA,IAAAd,EAAA;QA/NjgCnB,EAAE,CAAAuC,SAAA,EA+N8qB,CAAC;QA/NjrBvC,EAAE,CAAA4M,UAAA,CAAAxL,GAAA,CAAAsF,YA+N8qB,CAAC;QA/NjrB1G,EAAE,CAAAqC,WAAA,aAAAjB,GAAA,CAAAkB,UAAA,EA+NgjB,CAAC,aAAAlB,GAAA,CAAAyF,KAAD,CAAC;QA/NnjB7G,EAAE,CAAAwC,UAAA,YAAFxC,EAAE,CAAA0C,eAAA,KAAA/B,GAAA,EAAAS,GAAA,CAAAyF,KAAA,EAAAzF,GAAA,CAAAyF,KAAA,CA+N0oB,CAAC;QA/N7oB7G,EAAE,CAAAuC,SAAA,EA+N+vB,CAAC;QA/NlwBvC,EAAE,CAAAqF,iBAAA,CAAAjE,GAAA,CAAAqE,OAAA,YA+N+vB,CAAC;QA/NlwBzF,EAAE,CAAAuC,SAAA,EA+N66B,CAAC;QA/Nh7BvC,EAAE,CAAA4M,UAAA,CAAAxL,GAAA,CAAAsF,YA+N66B,CAAC;QA/Nh7B1G,EAAE,CAAAqC,WAAA,aAAAjB,GAAA,CAAAoD,MAAA,EA+NizB,CAAC,SAAApD,GAAA,CAAAyF,KAAD,CAAC;QA/NpzB7G,EAAE,CAAAwC,UAAA,YAAFxC,EAAE,CAAA0C,eAAA,KAAA5B,GAAA,EAAAM,GAAA,CAAAyF,KAAA,EAAAzF,GAAA,CAAAyF,KAAA,CA+Ny4B,CAAC;QA/N54B7G,EAAE,CAAAuC,SAAA,EA+N0/B,CAAC;QA/N7/BvC,EAAE,CAAAqF,iBAAA,CAAAjE,GAAA,CAAAqE,OAAA,QA+N0/B,CAAC;MAAA;IAAA;IAAAoH,YAAA,GAAmEpM,EAAE,CAACqM,OAAO;IAAAC,aAAA;EAAA,EAA2D;AACzuC;AACA;EAAA,QAAAvF,SAAA,oBAAAA,SAAA,KAjOoGxH,EAAE,CAAAyH,iBAAA,CAiOXM,cAAc,EAAc,CAAC;IAC5GL,IAAI,EAAEtH,SAAS;IACfuH,IAAI,EAAE,CAAC;MAAEqF,QAAQ,EAAE,OAAO;MAAEC,SAAS,EAAE,CAACrF,4BAA4B,CAAC;MAAE4E,QAAQ,EAAE;IAAgiB,CAAC;EACtnB,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE9E,IAAI,EAAE1H,EAAE,CAAC4L;IAAW,CAAC,EAAE;MAAElE,IAAI,EAAE1B;IAAiB,CAAC,EAAE;MAAE0B,IAAI,EAAE1H,EAAE,CAAC6L;IAAkB,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEhF,KAAK,EAAE,CAAC;MACrJa,IAAI,EAAErH;IACV,CAAC,CAAC;IAAE0J,OAAO,EAAE,CAAC;MACVrC,IAAI,EAAErH;IACV,CAAC,CAAC;IAAE+F,aAAa,EAAE,CAAC;MAChBsB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEgG,cAAc,EAAE,CAAC;MACjBqB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEiG,SAAS,EAAE,CAAC;MACZoB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEkG,YAAY,EAAE,CAAC;MACfmB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEmG,QAAQ,EAAE,CAAC;MACXkB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEoG,QAAQ,EAAE,CAAC;MACXiB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEsG,MAAM,EAAE,CAAC;MACTe,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEqG,YAAY,EAAE,CAAC;MACfgB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEW,QAAQ,EAAE,CAAC;MACX0G,IAAI,EAAErH;IACV,CAAC,CAAC;IAAE+H,QAAQ,EAAE,CAAC;MACXV,IAAI,EAAEpH;IACV,CAAC,CAAC;IAAE+H,WAAW,EAAE,CAAC;MACdX,IAAI,EAAEpH;IACV,CAAC,CAAC;IAAE6F,YAAY,EAAE,CAAC;MACfuB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEiJ,UAAU,EAAE,CAAC;MACb5B,IAAI,EAAErH;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM6M,iCAAiC,GAAG;EACtCrF,OAAO,EAAErH,iBAAiB;EAC1BsH,WAAW,EAAE5H,UAAU,CAAC,MAAMiN,mBAAmB,CAAC;EAClDnF,KAAK,EAAE;AACX,CAAC;AACD,MAAMmF,mBAAmB,CAAC;EACtBlH,WAAWA,CAACgC,UAAU,EAAEC,gBAAgB,EAAEC,eAAe,EAAE;IACvD,IAAI,CAACF,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACE,eAAe,GAAGA,eAAe;IACtC;IACA,IAAI,CAACtB,KAAK,GAAG,IAAI;IACjB;IACA,IAAI,CAACT,aAAa,GAAG,KAAK;IAC1B;IACA,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B;IACA,IAAI,CAACM,MAAM,GAAG,IAAI;IAClB;IACA;IACA,IAAI,CAACD,YAAY,GAAG,EAAE;IACtB;IACA,IAAI,CAAC1F,QAAQ,GAAG,KAAK;IACrB;IACA,IAAI,CAACoH,QAAQ,GAAG,IAAIjI,YAAY,CAAC,CAAC;IAClC;AACR;AACA;IACQ,IAAI,CAACkI,WAAW,GAAG,IAAIlI,YAAY,CAAC,CAAC;IACrC,IAAI,CAACmI,QAAQ,GAAGC,QAAQ,CAACC,SAAS;IAClC,IAAI,CAACC,SAAS,GAAGF,QAAQ,CAACC,SAAS;IACnC,IAAI,CAACE,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,WAAW,GAAG,CAAC;IACpB,IAAI,CAACC,WAAW,GAAG,CAAC;IACpB,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACd,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAAC,IAAI,CAACe,MAAM,EAAE;MACd,IAAI,CAACC,gBAAgB,CAACf,gBAAgB,CAAChC,IAAI,CAAC;IAChD;EACJ;EACA;EACA,IAAIC,YAAYA,CAAA,EAAG;IACf,OAAO,IAAI,CAACyC,aAAa;EAC7B;EACA,IAAIzC,YAAYA,CAACiD,CAAC,EAAE;IAChB,IAAI,CAACR,aAAa,GAAGQ,CAAC;IACtB,IAAI,CAACtE,UAAU,GAAG,IAAI,CAACuE,mBAAmB,CAAC,CAAC;EAChD;EACA;EACA,IAAIC,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACT,WAAW;EAC3B;EACA,IAAIS,UAAUA,CAACF,CAAC,EAAE;IACd,IAAI,CAACP,WAAW,GAAGO,CAAC;IACpB,IAAI,CAACtE,UAAU,GAAG,IAAI,CAACuE,mBAAmB,CAAC,CAAC;EAChD;EACA,IAAIvE,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACgE,WAAW;EAC3B;EACA,IAAIhE,UAAUA,CAACsE,CAAC,EAAE;IACd,IAAI,CAACN,WAAW,GAAGM,CAAC;IACpB,IAAI,CAAChB,QAAQ,CAACmB,IAAI,CAACH,CAAC,CAAC;IACrB,IAAI,IAAI,CAACT,MAAM,EAAE;MACb,IAAI,CAAC5G,UAAU,CAAC,IAAI,CAACY,IAAI,CAAC;IAC9B;EACJ;EACA,IAAIA,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACoG,KAAK;EACrB;EACA,IAAIpG,IAAIA,CAAC6G,KAAK,EAAE;IACZ,MAAMC,SAAS,GAAG,IAAI,CAACV,KAAK;IAC5B,IAAI,CAACA,KAAK,GAAGS,KAAK,GAAG,IAAI,CAAC1E,UAAU,GAAG,IAAI,CAACA,UAAU,GAAG0E,KAAK,IAAI,CAAC;IACnE,IAAI,CAACrB,eAAe,CAACuB,YAAY,CAAC,CAAC;IACnC,IAAID,SAAS,KAAK,IAAI,CAACV,KAAK,IAAI,OAAOU,SAAS,KAAK,WAAW,EAAE;MAC9D;IACJ;IACA,IAAI,CAACpB,WAAW,CAACkB,IAAI,CAAC;MAClB5G,IAAI,EAAE,IAAI,CAACoG,KAAK;MAChB5C,YAAY,EAAE,IAAI,CAACA;IACvB,CAAC,CAAC;EACN;EACA8C,gBAAgBA,CAACD,MAAM,EAAE;IACrB,IAAI,CAACA,MAAM,GAAGE,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,MAAM,CAAC;EAC3C;EACAW,QAAQA,CAAA,EAAG;IACP,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;MAC/B,IAAI,CAAClB,QAAQ,GAAG,IAAI,CAACT,UAAU,CAAC4B,aAAa,CAACC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE;IAC7E;IACA;IACA,IAAI,OAAO,IAAI,CAACC,OAAO,KAAK,WAAW,EAAE;MACrC,IAAI,CAACA,OAAO,GAAG,IAAI,CAACf,MAAM,EAAEe,OAAO,IAAI,CAAC;IAC5C;IACA,IAAI,OAAO,IAAI,CAACpD,MAAM,KAAK,WAAW,EAAE;MACpC,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,IAAI,CAACqC,MAAM,EAAErC,MAAM;IACvC;IACA,IAAI,OAAO,IAAI,CAACP,aAAa,KAAK,WAAW,EAAE;MAC3C,IAAI,CAACA,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC4C,MAAM,EAAE5C,aAAa;IACrD;IACA,IAAI,OAAO,IAAI,CAACC,cAAc,KAAK,WAAW,EAAE;MAC5C,IAAI,CAACA,cAAc,GAAG,CAAC,CAAC,IAAI,CAAC2C,MAAM,EAAE3C,cAAc;IACvD;IACA,IAAI,OAAO,IAAI,CAACK,YAAY,KAAK,WAAW,EAAE;MAC1C,IAAI,CAACA,YAAY,GAAG,IAAI,CAACsC,MAAM,EAAEtC,YAAY,IAAI,EAAE;IACvD;IACA;IACA,IAAI,OAAO,IAAI,CAACP,YAAY,KAAK,WAAW,EAAE;MAC1C,IAAI,CAACA,YAAY,GAAG,IAAI,CAAC6C,MAAM,EAAE7C,YAAY,IAAI,CAAC;IACtD;IACA,IAAI,CAACrB,UAAU,GAAG,IAAI,CAACuE,mBAAmB,CAAC,CAAC;IAC5C;IACA,IAAI,CAACW,KAAK,GAAG,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACtH,IAAI,EAAE,IAAI,CAACmC,UAAU,CAAC;IACtD,IAAI,CAAC6D,MAAM,GAAG,IAAI;EACtB;EACAuB,UAAUA,CAACV,KAAK,EAAE;IACd,IAAI,CAAC7G,IAAI,GAAG6G,KAAK;IACjB,IAAI,CAACQ,KAAK,GAAG,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACtH,IAAI,EAAE,IAAI,CAACmC,UAAU,CAAC;EAC1D;EACAW,OAAOA,CAAC0E,GAAG,EAAE;IACT;IACA,OAAO,IAAI,CAAE,GAAEA,GAAI,MAAK,CAAC,IAAI,IAAI,CAACnB,MAAM,CAAE,GAAEmB,GAAI,MAAK,CAAC;EAC1D;EACA7H,UAAUA,CAAA,EAAG;IACT,OAAO,IAAI,CAACK,IAAI,KAAK,CAAC;EAC1B;EACA6B,MAAMA,CAAA,EAAG;IACL,OAAO,IAAI,CAAC7B,IAAI,KAAK,IAAI,CAACmC,UAAU;EACxC;EACAsF,gBAAgBA,CAACC,EAAE,EAAE;IACjB,IAAI,CAAC/B,QAAQ,GAAG+B,EAAE;EACtB;EACAC,iBAAiBA,CAACD,EAAE,EAAE;IAClB,IAAI,CAAC5B,SAAS,GAAG4B,EAAE;EACvB;EACAtI,UAAUA,CAACY,IAAI,EAAE4H,KAAK,EAAE;IACpB,IAAIA,KAAK,EAAE;MACPA,KAAK,CAACC,cAAc,CAAC,CAAC;IAC1B;IACA,IAAI,CAAC,IAAI,CAACxJ,QAAQ,EAAE;MAChB,IAAIuJ,KAAK,IAAIA,KAAK,CAACE,MAAM,EAAE;QACvB;QACA,MAAMA,MAAM,GAAGF,KAAK,CAACE,MAAM;QAC3BA,MAAM,CAACC,IAAI,CAAC,CAAC;MACjB;MACA,IAAI,CAACR,UAAU,CAACvH,IAAI,CAAC;MACrB,IAAI,CAAC2F,QAAQ,CAAC,IAAI,CAAC3F,IAAI,CAAC;IAC5B;EACJ;EACA;EACAgI,QAAQA,CAACC,GAAG,EAAEtF,IAAI,EAAEvB,MAAM,EAAE;IACxB,OAAO;MAAEuB,IAAI;MAAE1B,MAAM,EAAEgH,GAAG;MAAE7G;IAAO,CAAC;EACxC;EACAkG,QAAQA,CAAChJ,WAAW,EAAE6D,UAAU,EAAE;IAC9B,MAAMkF,KAAK,GAAG,EAAE;IAChB;IACA,IAAIa,SAAS,GAAG,CAAC;IACjB,IAAIC,OAAO,GAAGhG,UAAU;IACxB,MAAMiG,UAAU,GAAG,OAAO,IAAI,CAAChB,OAAO,KAAK,WAAW,IAAI,IAAI,CAACA,OAAO,GAAGjF,UAAU;IACnF;IACA,IAAIiG,UAAU,IAAI,IAAI,CAAChB,OAAO,EAAE;MAC5B,IAAI,IAAI,CAACpD,MAAM,EAAE;QACb;QACAkE,SAAS,GAAGG,IAAI,CAACC,GAAG,CAAChK,WAAW,GAAG+J,IAAI,CAACE,KAAK,CAAC,IAAI,CAACnB,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACnEe,OAAO,GAAGD,SAAS,GAAG,IAAI,CAACd,OAAO,GAAG,CAAC;QACtC;QACA,IAAIe,OAAO,GAAGhG,UAAU,EAAE;UACtBgG,OAAO,GAAGhG,UAAU;UACpB+F,SAAS,GAAGC,OAAO,GAAG,IAAI,CAACf,OAAO,GAAG,CAAC;QAC1C;MACJ,CAAC,MACI;QACD;QACAc,SAAS,GACL,CAACG,IAAI,CAACG,IAAI,CAAClK,WAAW,GAAG,IAAI,CAAC8I,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAACA,OAAO,GAAG,CAAC;QAClE;QACAe,OAAO,GAAGE,IAAI,CAACI,GAAG,CAACP,SAAS,GAAG,IAAI,CAACd,OAAO,GAAG,CAAC,EAAEjF,UAAU,CAAC;MAChE;IACJ;IACA;IACA,KAAK,IAAI8F,GAAG,GAAGC,SAAS,EAAED,GAAG,IAAIE,OAAO,EAAEF,GAAG,EAAE,EAAE;MAC7C,MAAMjI,IAAI,GAAG,IAAI,CAACgI,QAAQ,CAACC,GAAG,EAAEA,GAAG,CAACS,QAAQ,CAAC,CAAC,EAAET,GAAG,KAAK3J,WAAW,CAAC;MACpE+I,KAAK,CAACsB,IAAI,CAAC3I,IAAI,CAAC;IACpB;IACA;IACA,IAAIoI,UAAU,IAAI,CAAC,IAAI,CAACpE,MAAM,EAAE;MAC5B,IAAIkE,SAAS,GAAG,CAAC,EAAE;QACf,MAAMU,eAAe,GAAG,IAAI,CAACZ,QAAQ,CAACE,SAAS,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;QAClEb,KAAK,CAACwB,OAAO,CAACD,eAAe,CAAC;MAClC;MACA,IAAIT,OAAO,GAAGhG,UAAU,EAAE;QACtB,MAAM2G,WAAW,GAAG,IAAI,CAACd,QAAQ,CAACG,OAAO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;QAC5Dd,KAAK,CAACsB,IAAI,CAACG,WAAW,CAAC;MAC3B;IACJ;IACA,OAAOzB,KAAK;EAChB;EACA;EACAX,mBAAmBA,CAAA,EAAG;IAClB,MAAMvE,UAAU,GAAG,IAAI,CAACqB,YAAY,GAAG,CAAC,GAClC,CAAC,GACD6E,IAAI,CAACG,IAAI,CAAC,IAAI,CAAC7B,UAAU,GAAG,IAAI,CAACnD,YAAY,CAAC;IACpD,OAAO6E,IAAI,CAACC,GAAG,CAACnG,UAAU,IAAI,CAAC,EAAE,CAAC,CAAC;EACvC;EAAC,QAAAgC,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAqG,4BAAAnG,CAAA;IAAA,YAAAA,CAAA,IAAwFkG,mBAAmB,EA/c7BnN,EAAE,CAAA2L,iBAAA,CA+c6C3L,EAAE,CAAC4L,UAAU,GA/c5D5L,EAAE,CAAA2L,iBAAA,CA+cuE3F,gBAAgB,GA/czFhG,EAAE,CAAA2L,iBAAA,CA+coG3L,EAAE,CAAC6L,iBAAiB;EAAA,CAA4C;EAAA,QAAA3E,EAAA,GAC7P,IAAI,CAAC4E,IAAI,kBAhd8E9L,EAAE,CAAA+L,iBAAA;IAAArE,IAAA,EAgdJyF,mBAAmB;IAAAnB,SAAA;IAAAC,MAAA;MAAApF,KAAA;MAAAkD,OAAA;MAAA3D,aAAA;MAAAC,cAAA;MAAAC,SAAA;MAAAC,YAAA;MAAAC,QAAA;MAAAC,QAAA;MAAAE,MAAA;MAAAD,YAAA;MAAA1F,QAAA;MAAAgD,kBAAA;MAAAS,kBAAA;MAAAvB,sBAAA;MAAAT,mBAAA;MAAAwC,kBAAA;MAAAkB,YAAA;MAAAmD,UAAA;IAAA;IAAA4C,OAAA;MAAA9D,QAAA;MAAAC,WAAA;IAAA;IAAA8D,QAAA,GAhdjBnM,EAAE,CAAAoM,kBAAA,CAgdiqB,CAACc,iCAAiC,CAAC;IAAAb,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAa,6BAAAlM,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAhdtsBnB,EAAE,CAAAuB,cAAA,WAgd8wB,CAAC;QAhdjxBvB,EAAE,CAAAsN,UAAA,IAAApM,iCAAA,eAgdgsC,CAAC;QAhdnsClB,EAAE,CAAAsN,UAAA,IAAA1K,iCAAA,eAgdioD,CAAC;QAhdpoD5C,EAAE,CAAAsN,UAAA,IAAAhK,iCAAA,gBAgd8lE,CAAC;QAhdjmEtD,EAAE,CAAAsN,UAAA,IAAApJ,iCAAA,eAgd+gF,CAAC;QAhdlhFlE,EAAE,CAAAsN,UAAA,IAAA5I,iCAAA,eAgdi8F,CAAC;QAhdp8F1E,EAAE,CAAAiC,YAAA,CAgdw8F,CAAC;QAhd38FjC,EAAE,CAAAsN,UAAA,IAAApI,0CAAA,gCAAFlF,EAAE,CAAAuN,sBAgdohG,CAAC;QAhdvhGvN,EAAE,CAAAsN,UAAA,IAAA/H,0CAAA,gCAAFvF,EAAE,CAAAuN,sBAgd6lG,CAAC;QAhdhmGvN,EAAE,CAAAsN,UAAA,KAAA5H,2CAAA,gCAAF1F,EAAE,CAAAuN,sBAgd8qG,CAAC;QAhdjrGvN,EAAE,CAAAsN,UAAA,KAAA1H,2CAAA,gCAAF5F,EAAE,CAAAuN,sBAgdyvG,CAAC;QAhd5vGvN,EAAE,CAAAsN,UAAA,KAAAxH,2CAAA,iCAAF9F,EAAE,CAAAuN,sBAgdk0G,CAAC;MAAA;MAAA,IAAApM,EAAA;QAhdr0GnB,EAAE,CAAAwC,UAAA,YAAApB,GAAA,CAAAsH,QAgd6wB,CAAC;QAhdhxB1I,EAAE,CAAAuC,SAAA,EAgdu1B,CAAC;QAhd11BvC,EAAE,CAAAwC,UAAA,SAAApB,GAAA,CAAAgF,aAgdu1B,CAAC;QAhd11BpG,EAAE,CAAAuC,SAAA,EAgd2wC,CAAC;QAhd9wCvC,EAAE,CAAAwC,UAAA,SAAApB,GAAA,CAAAiF,cAgd2wC,CAAC;QAhd9wCrG,EAAE,CAAAuC,SAAA,EAgdmqD,CAAC;QAhdtqDvC,EAAE,CAAAwC,UAAA,YAAApB,GAAA,CAAA4I,KAgdmqD,CAAC;QAhdtqDhK,EAAE,CAAAuC,SAAA,EAgdyqE,CAAC;QAhd5qEvC,EAAE,CAAAwC,UAAA,SAAApB,GAAA,CAAAiF,cAgdyqE,CAAC;QAhd5qErG,EAAE,CAAAuC,SAAA,EAgdylF,CAAC;QAhd5lFvC,EAAE,CAAAwC,UAAA,SAAApB,GAAA,CAAAgF,aAgdylF,CAAC;MAAA;IAAA;IAAAyG,YAAA,GAAwxBpM,EAAE,CAACqM,OAAO,EAAoFrM,EAAE,CAAC+M,OAAO,EAAmH/M,EAAE,CAACgN,IAAI,EAA6FhN,EAAE,CAACiN,gBAAgB;IAAAX,aAAA;EAAA,EAA2H;AACr6H;AACA;EAAA,QAAAvF,SAAA,oBAAAA,SAAA,KAldoGxH,EAAE,CAAAyH,iBAAA,CAkdX0F,mBAAmB,EAAc,CAAC;IACjHzF,IAAI,EAAEtH,SAAS;IACfuH,IAAI,EAAE,CAAC;MAAEqF,QAAQ,EAAE,YAAY;MAAEC,SAAS,EAAE,CAACC,iCAAiC,CAAC;MAAEV,QAAQ,EAAE;IAAymF,CAAC;EACzsF,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE9E,IAAI,EAAE1H,EAAE,CAAC4L;IAAW,CAAC,EAAE;MAAElE,IAAI,EAAE1B;IAAiB,CAAC,EAAE;MAAE0B,IAAI,EAAE1H,EAAE,CAAC6L;IAAkB,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEhF,KAAK,EAAE,CAAC;MACrJa,IAAI,EAAErH;IACV,CAAC,CAAC;IAAE0J,OAAO,EAAE,CAAC;MACVrC,IAAI,EAAErH;IACV,CAAC,CAAC;IAAE+F,aAAa,EAAE,CAAC;MAChBsB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEgG,cAAc,EAAE,CAAC;MACjBqB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEiG,SAAS,EAAE,CAAC;MACZoB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEkG,YAAY,EAAE,CAAC;MACfmB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEmG,QAAQ,EAAE,CAAC;MACXkB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEoG,QAAQ,EAAE,CAAC;MACXiB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEsG,MAAM,EAAE,CAAC;MACTe,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEqG,YAAY,EAAE,CAAC;MACfgB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEW,QAAQ,EAAE,CAAC;MACX0G,IAAI,EAAErH;IACV,CAAC,CAAC;IAAE2D,kBAAkB,EAAE,CAAC;MACrB0D,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEoE,kBAAkB,EAAE,CAAC;MACrBiD,IAAI,EAAErH;IACV,CAAC,CAAC;IAAE6C,sBAAsB,EAAE,CAAC;MACzBwE,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEoC,mBAAmB,EAAE,CAAC;MACtBiF,IAAI,EAAErH;IACV,CAAC,CAAC;IAAE4E,kBAAkB,EAAE,CAAC;MACrByC,IAAI,EAAErH;IACV,CAAC,CAAC;IAAE+H,QAAQ,EAAE,CAAC;MACXV,IAAI,EAAEpH;IACV,CAAC,CAAC;IAAE+H,WAAW,EAAE,CAAC;MACdX,IAAI,EAAEpH;IACV,CAAC,CAAC;IAAE6F,YAAY,EAAE,CAAC;MACfuB,IAAI,EAAErH;IACV,CAAC,CAAC;IAAEiJ,UAAU,EAAE,CAAC;MACb5B,IAAI,EAAErH;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMsN,gBAAgB,CAAC;EACnB,OAAOC,OAAOA,CAAA,EAAG;IACb,OAAO;MAAEC,QAAQ,EAAEF,gBAAgB;MAAEV,SAAS,EAAE;IAAG,CAAC;EACxD;EAAC,QAAAnG,CAAA,GACQ,IAAI,CAACC,IAAI,YAAA+G,yBAAA7G,CAAA;IAAA,YAAAA,CAAA,IAAwF0G,gBAAgB;EAAA,CAAkD;EAAA,QAAAzG,EAAA,GACnK,IAAI,CAAC6G,IAAI,kBApgB8E/N,EAAE,CAAAgO,gBAAA;IAAAtG,IAAA,EAogBSiG;EAAgB,EAAiI;EAAA,QAAAM,EAAA,GACnP,IAAI,CAACC,IAAI,kBArgB8ElO,EAAE,CAAAmO,gBAAA;IAAAC,OAAA,GAqgBqC1N,YAAY;EAAA,EAAI;AAC3J;AACA;EAAA,QAAA8G,SAAA,oBAAAA,SAAA,KAvgBoGxH,EAAE,CAAAyH,iBAAA,CAugBXkG,gBAAgB,EAAc,CAAC;IAC9GjG,IAAI,EAAEnH,QAAQ;IACdoH,IAAI,EAAE,CAAC;MACCyG,OAAO,EAAE,CAAC1N,YAAY,CAAC;MACvB2N,YAAY,EAAE,CAACtG,cAAc,EAAEoF,mBAAmB,CAAC;MACnDmB,OAAO,EAAE,CAACvG,cAAc,EAAEoF,mBAAmB;IACjD,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAASpF,cAAc,EAAEoF,mBAAmB,EAAEnH,gBAAgB,EAAE2H,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
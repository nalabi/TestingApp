{"ast":null,"code":"import { Injectable, Directive, Optional, ChangeDetectorRef, ElementRef, Input, Pipe, NgModule } from '@angular/core';\nimport { of, timer, empty, Subject } from 'rxjs';\nimport { expand, skip, filter } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\n\nfunction isDefined(value) {\n  return typeof value !== 'undefined' && value !== null;\n}\n\nfunction coerceBooleanProperty(value) {\n  return value != null && `${value}` !== 'false';\n}\n\nfunction dateParser(date) {\n  const parsed = new Date(date);\n\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n\n  const parts = String(date).match(/\\d+/g);\n\n  if (parts === null || parts.length <= 2) {\n    return parsed;\n  } else {\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x, 10));\n    return new Date(Date.UTC(firstP, secondP - 1, ...restPs));\n  }\n}\n\nconst MINUTE = 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\n\nclass TimeagoClock {}\n\nclass TimeagoDefaultClock extends TimeagoClock {\n  tick(then) {\n    return of(0).pipe(expand(() => {\n      const now = Date.now();\n      const seconds = Math.round(Math.abs(now - then) / 1000);\n      const period = seconds < MINUTE ? 1000 : seconds < HOUR ? 1000 * MINUTE : seconds < DAY ? 1000 * HOUR : 0;\n      return period ? timer(period) : empty();\n    }), skip(1));\n  }\n\n}\n\nTimeagoDefaultClock.ɵfac = /*@__PURE__*/function () {\n  let ɵTimeagoDefaultClock_BaseFactory;\n  return function TimeagoDefaultClock_Factory(t) {\n    return (ɵTimeagoDefaultClock_BaseFactory || (ɵTimeagoDefaultClock_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TimeagoDefaultClock)))(t || TimeagoDefaultClock);\n  };\n}();\n\nTimeagoDefaultClock.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: TimeagoDefaultClock,\n  factory: TimeagoDefaultClock.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TimeagoDefaultClock, [{\n    type: Injectable\n  }], null, null);\n})();\n\n;\n/**\n * To modify the text displayed, create a new instance of TimeagoIntl and\n * include it in a custom provider\n */\n\nclass TimeagoIntl {\n  constructor() {\n    /**\n     * Stream that emits whenever the l10n strings are changed\n     * Use this to notify directives if the l10n strings have changed after initialization.\n     */\n    this.changes = new Subject();\n  }\n\n}\n\nTimeagoIntl.ɵfac = function TimeagoIntl_Factory(t) {\n  return new (t || TimeagoIntl)();\n};\n\nTimeagoIntl.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: TimeagoIntl,\n  factory: TimeagoIntl.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TimeagoIntl, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nconst defaultFormattter = function (then) {\n  const now = Date.now();\n  const seconds = Math.round(Math.abs(now - then) / 1000);\n  const suffix = then < now ? 'ago' : 'from now';\n  const [value, unit] = seconds < MINUTE ? [Math.round(seconds), 'second'] : seconds < HOUR ? [Math.round(seconds / MINUTE), 'minute'] : seconds < DAY ? [Math.round(seconds / HOUR), 'hour'] : seconds < WEEK ? [Math.round(seconds / DAY), 'day'] : seconds < MONTH ? [Math.round(seconds / WEEK), 'week'] : seconds < YEAR ? [Math.round(seconds / MONTH), 'month'] : [Math.round(seconds / YEAR), 'year'];\n  return {\n    value,\n    unit,\n    suffix\n  };\n};\n\nconst ɵ0 = defaultFormattter;\n\nclass TimeagoFormatter {}\n\nclass TimeagoDefaultFormatter extends TimeagoFormatter {\n  format(then) {\n    const {\n      suffix,\n      value,\n      unit\n    } = defaultFormattter(then);\n    return this.parse(value, unit, suffix);\n  }\n\n  parse(value, unit, suffix) {\n    if (value !== 1) {\n      unit += 's';\n    }\n\n    return value + ' ' + unit + ' ' + suffix;\n  }\n\n}\n\nTimeagoDefaultFormatter.ɵfac = /*@__PURE__*/function () {\n  let ɵTimeagoDefaultFormatter_BaseFactory;\n  return function TimeagoDefaultFormatter_Factory(t) {\n    return (ɵTimeagoDefaultFormatter_BaseFactory || (ɵTimeagoDefaultFormatter_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TimeagoDefaultFormatter)))(t || TimeagoDefaultFormatter);\n  };\n}();\n\nTimeagoDefaultFormatter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: TimeagoDefaultFormatter,\n  factory: TimeagoDefaultFormatter.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TimeagoDefaultFormatter, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass TimeagoCustomFormatter extends TimeagoFormatter {\n  constructor(intl) {\n    super();\n    this.intl = intl;\n  }\n\n  format(then) {\n    const {\n      suffix,\n      value,\n      unit\n    } = defaultFormattter(then);\n    return this.parse(value, unit, suffix, Date.now(), then);\n  }\n\n  parse(value, unit, suffix, now, then) {\n    /** convert weeks to days if strings don't handle weeks */\n    if (unit === 'week' && !this.intl.strings.week && !this.intl.strings.weeks) {\n      const days = Math.round(Math.abs(now - then) / (1000 * 60 * 60 * 24));\n      value = days;\n      unit = 'day';\n    }\n    /** create a normalize function for given value */\n\n\n    const normalize = this.normalizeFn(value, now - then, this.intl.strings.numbers);\n    /** The eventual return value stored in an array so that the wordSeparator can be used */\n\n    const dateString = [];\n    /** handle prefixes */\n\n    if (suffix === 'ago' && this.intl.strings.prefixAgo) {\n      dateString.push(normalize(this.intl.strings.prefixAgo));\n    }\n\n    if (suffix === 'from now' && this.intl.strings.prefixFromNow) {\n      dateString.push(normalize(this.intl.strings.prefixFromNow));\n    }\n    /** Handle Main number and unit */\n\n\n    const isPlural = value > 1;\n\n    if (isPlural) {\n      const stringFn = this.intl.strings[unit + 's'] || this.intl.strings[unit] || '%d ' + unit;\n      dateString.push(normalize(stringFn));\n    } else {\n      const stringFn = this.intl.strings[unit] || this.intl.strings[unit + 's'] || '%d ' + unit;\n      dateString.push(normalize(stringFn));\n    }\n    /** Handle Suffixes */\n\n\n    if (suffix === 'ago' && this.intl.strings.suffixAgo) {\n      dateString.push(normalize(this.intl.strings.suffixAgo));\n    }\n\n    if (suffix === 'from now' && this.intl.strings.suffixFromNow) {\n      dateString.push(normalize(this.intl.strings.suffixFromNow));\n    }\n    /** join the array into a string and return it */\n\n\n    const wordSeparator = typeof this.intl.strings.wordSeparator === 'string' ? this.intl.strings.wordSeparator : ' ';\n    return dateString.join(wordSeparator);\n  }\n  /**\n   * If the numbers array is present, format numbers with it,\n   * otherwise just cast the number to a string and return it\n  */\n\n\n  normalizeNumber(numbers, value) {\n    return numbers && numbers.length === 10 ? String(value).split('').map(digit => digit.match(/^[0-9]$/) ? numbers[parseInt(digit, 10)] : digit).join('') : String(value);\n  }\n  /**\n   * Take a string or a function that takes number of days and returns a string\n   * and provide a uniform API to create string parts\n  */\n\n\n  normalizeFn(value, millisDelta, numbers) {\n    return stringOrFn => typeof stringOrFn === 'function' ? stringOrFn(value, millisDelta).replace(/%d/g, this.normalizeNumber(numbers, value)) : stringOrFn.replace(/%d/g, this.normalizeNumber(numbers, value));\n  }\n\n}\n\nTimeagoCustomFormatter.ɵfac = function TimeagoCustomFormatter_Factory(t) {\n  return new (t || TimeagoCustomFormatter)(ɵngcc0.ɵɵinject(TimeagoIntl));\n};\n\nTimeagoCustomFormatter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: TimeagoCustomFormatter,\n  factory: TimeagoCustomFormatter.ɵfac\n});\n\nTimeagoCustomFormatter.ctorParameters = () => [{\n  type: TimeagoIntl\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TimeagoCustomFormatter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: TimeagoIntl\n    }];\n  }, null);\n})();\n\nclass TimeagoDirective {\n  constructor(intl, cd, formatter, element, clock) {\n    this.cd = cd;\n    this.clock = clock;\n    /**\n     * Emits on:\n     * - Input change\n     * - Intl change\n     * - Clock tick\n    */\n\n    this.stateChanges = new Subject();\n    this._live = true;\n\n    if (intl) {\n      this.intlSubscription = intl.changes.subscribe(() => this.stateChanges.next());\n    }\n\n    this.stateChanges.subscribe(() => {\n      this.setContent(element.nativeElement, formatter.format(this.date));\n      this.cd.markForCheck();\n    });\n  }\n  /** The Date to display. An actual Date object or something that can be fed to new Date. */\n\n\n  get date() {\n    return this._date;\n  }\n\n  set date(date) {\n    this._date = dateParser(date).valueOf();\n\n    if (this._date) {\n      if (this.clockSubscription) {\n        this.clockSubscription.unsubscribe();\n        this.clockSubscription = undefined;\n      }\n\n      this.clockSubscription = this.clock.tick(this.date).pipe(filter(() => this.live, this)).subscribe(() => this.stateChanges.next());\n    } else {\n      throw new SyntaxError(`Wrong parameter in TimeagoDirective. Expected a valid date, received: ${date}`);\n    }\n  }\n  /** If the directive should update itself over time */\n\n\n  get live() {\n    return this._live;\n  }\n\n  set live(live) {\n    this._live = coerceBooleanProperty(live);\n  }\n\n  ngOnChanges() {\n    this.stateChanges.next();\n  }\n\n  setContent(node, content) {\n    if (isDefined(node.textContent)) {\n      node.textContent = content;\n    } else {\n      node.data = content;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.intlSubscription) {\n      this.intlSubscription.unsubscribe();\n      this.intlSubscription = undefined;\n    }\n\n    if (this.clockSubscription) {\n      this.clockSubscription.unsubscribe();\n      this.clockSubscription = undefined;\n    }\n\n    this.stateChanges.complete();\n  }\n\n}\n\nTimeagoDirective.ɵfac = function TimeagoDirective_Factory(t) {\n  return new (t || TimeagoDirective)(ɵngcc0.ɵɵdirectiveInject(TimeagoIntl, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(TimeagoFormatter), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(TimeagoClock));\n};\n\nTimeagoDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TimeagoDirective,\n  selectors: [[\"\", \"timeago\", \"\"]],\n  inputs: {\n    date: \"date\",\n    live: \"live\"\n  },\n  exportAs: [\"timeago\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nTimeagoDirective.ctorParameters = () => [{\n  type: TimeagoIntl,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: TimeagoFormatter\n}, {\n  type: ElementRef\n}, {\n  type: TimeagoClock\n}];\n\nTimeagoDirective.propDecorators = {\n  date: [{\n    type: Input\n  }],\n  live: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TimeagoDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[timeago]',\n      exportAs: 'timeago'\n    }]\n  }], function () {\n    return [{\n      type: TimeagoIntl,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: TimeagoFormatter\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: TimeagoClock\n    }];\n  }, {\n    date: [{\n      type: Input\n    }],\n    live: [{\n      type: Input\n    }]\n  });\n})();\n\nclass TimeagoPipe {\n  constructor(intl, cd, formatter, clock) {\n    this.clock = clock;\n    this.live = true;\n    /**\n     * Emits on:\n     * - Input change\n     * - Intl change\n     * - Clock tick\n    */\n\n    this.stateChanges = new Subject();\n\n    if (intl) {\n      this.intlSubscription = intl.changes.subscribe(() => this.stateChanges.next());\n    }\n\n    this.stateChanges.subscribe(() => {\n      this.value = formatter.format(this.date);\n      cd.markForCheck();\n    });\n  }\n\n  transform(date, ...args) {\n    const _date = dateParser(date).valueOf();\n\n    let _live;\n\n    _live = isDefined(args[0]) ? coerceBooleanProperty(args[0]) : this.live;\n\n    if (this.date === _date && this.live === _live) {\n      return this.value;\n    }\n\n    this.date = _date;\n    this.live = _live;\n\n    if (this.date) {\n      if (this.clockSubscription) {\n        this.clockSubscription.unsubscribe();\n        this.clockSubscription = undefined;\n      }\n\n      this.clockSubscription = this.clock.tick(this.date).pipe(filter(() => this.live, this)).subscribe(() => this.stateChanges.next());\n      this.stateChanges.next();\n    } else {\n      throw new SyntaxError(`Wrong parameter in TimeagoPipe. Expected a valid date, received: ${date}`);\n    }\n\n    return this.value;\n  }\n\n  ngOnDestroy() {\n    if (this.intlSubscription) {\n      this.intlSubscription.unsubscribe();\n      this.intlSubscription = undefined;\n    }\n\n    if (this.clockSubscription) {\n      this.clockSubscription.unsubscribe();\n      this.clockSubscription = undefined;\n    }\n\n    this.stateChanges.complete();\n  }\n\n}\n\nTimeagoPipe.ɵfac = function TimeagoPipe_Factory(t) {\n  return new (t || TimeagoPipe)(ɵngcc0.ɵɵdirectiveInject(TimeagoIntl, 24), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef, 16), ɵngcc0.ɵɵdirectiveInject(TimeagoFormatter, 16), ɵngcc0.ɵɵdirectiveInject(TimeagoClock, 16));\n};\n\nTimeagoPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"timeago\",\n  type: TimeagoPipe,\n  pure: false\n});\nTimeagoPipe.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: TimeagoPipe,\n  factory: TimeagoPipe.ɵfac\n});\n\nTimeagoPipe.ctorParameters = () => [{\n  type: TimeagoIntl,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: TimeagoFormatter\n}, {\n  type: TimeagoClock\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TimeagoPipe, [{\n    type: Injectable\n  }, {\n    type: Pipe,\n    args: [{\n      name: 'timeago',\n      pure: false\n    }]\n  }], function () {\n    return [{\n      type: TimeagoIntl,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: TimeagoFormatter\n    }, {\n      type: TimeagoClock\n    }];\n  }, null);\n})();\n\nclass TimeagoModule {\n  /**\n   * Use this method in your root module to provide the TimeagoModule\n   */\n  static forRoot(config = {}) {\n    return {\n      ngModule: TimeagoModule,\n      providers: [config.clock || {\n        provide: TimeagoClock,\n        useClass: TimeagoDefaultClock\n      }, config.intl || [], config.formatter || {\n        provide: TimeagoFormatter,\n        useClass: TimeagoDefaultFormatter\n      }]\n    };\n  }\n  /**\n   * Use this method in your other (non root) modules to import the directive/pipe\n   */\n\n\n  static forChild(config = {}) {\n    return {\n      ngModule: TimeagoModule,\n      providers: [config.clock || {\n        provide: TimeagoClock,\n        useClass: TimeagoDefaultClock\n      }, config.intl || [], config.formatter || {\n        provide: TimeagoFormatter,\n        useClass: TimeagoDefaultFormatter\n      }]\n    };\n  }\n\n}\n\nTimeagoModule.ɵfac = function TimeagoModule_Factory(t) {\n  return new (t || TimeagoModule)();\n};\n\nTimeagoModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: TimeagoModule\n});\nTimeagoModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TimeagoModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TimeagoDirective, TimeagoPipe],\n      exports: [TimeagoDirective, TimeagoPipe]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TimeagoModule, {\n    declarations: [TimeagoDirective, TimeagoPipe],\n    exports: [TimeagoDirective, TimeagoPipe]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TimeagoClock, TimeagoCustomFormatter, TimeagoDefaultClock, TimeagoDefaultFormatter, TimeagoDirective, TimeagoFormatter, TimeagoIntl, TimeagoModule, TimeagoPipe, ɵ0 };","map":{"version":3,"names":["Injectable","Directive","Optional","ChangeDetectorRef","ElementRef","Input","Pipe","NgModule","of","timer","empty","Subject","expand","skip","filter","ɵngcc0","isDefined","value","coerceBooleanProperty","dateParser","date","parsed","Date","Number","isNaN","valueOf","parts","String","match","length","firstP","secondP","restPs","map","x","parseInt","UTC","MINUTE","HOUR","DAY","WEEK","MONTH","YEAR","TimeagoClock","TimeagoDefaultClock","tick","then","pipe","now","seconds","Math","round","abs","period","ɵfac","ɵTimeagoDefaultClock_BaseFactory","TimeagoDefaultClock_Factory","t","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","TimeagoIntl","constructor","changes","TimeagoIntl_Factory","defaultFormattter","suffix","unit","ɵ0","TimeagoFormatter","TimeagoDefaultFormatter","format","parse","ɵTimeagoDefaultFormatter_BaseFactory","TimeagoDefaultFormatter_Factory","TimeagoCustomFormatter","intl","strings","week","weeks","days","normalize","normalizeFn","numbers","dateString","prefixAgo","push","prefixFromNow","isPlural","stringFn","suffixAgo","suffixFromNow","wordSeparator","join","normalizeNumber","split","digit","millisDelta","stringOrFn","replace","TimeagoCustomFormatter_Factory","ɵɵinject","ctorParameters","TimeagoDirective","cd","formatter","element","clock","stateChanges","_live","intlSubscription","subscribe","next","setContent","nativeElement","markForCheck","_date","clockSubscription","unsubscribe","undefined","live","SyntaxError","ngOnChanges","node","content","textContent","data","ngOnDestroy","complete","TimeagoDirective_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","inputs","exportAs","features","ɵɵNgOnChangesFeature","decorators","propDecorators","args","selector","TimeagoPipe","transform","TimeagoPipe_Factory","ɵpipe","ɵɵdefinePipe","name","pure","TimeagoModule","forRoot","config","ngModule","providers","provide","useClass","forChild","TimeagoModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Users/BongumusaN/TestingApp/client/node_modules/ngx-timeago/__ivy_ngcc__/fesm2015/ngx-timeago.js"],"sourcesContent":["import { Injectable, Directive, Optional, ChangeDetectorRef, ElementRef, Input, Pipe, NgModule } from '@angular/core';\nimport { of, timer, empty, Subject } from 'rxjs';\nimport { expand, skip, filter } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nfunction isDefined(value) {\n    return typeof value !== 'undefined' && value !== null;\n}\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\nfunction dateParser(date) {\n    const parsed = new Date(date);\n    if (!Number.isNaN(parsed.valueOf())) {\n        return parsed;\n    }\n    const parts = String(date).match(/\\d+/g);\n    if (parts === null || parts.length <= 2) {\n        return parsed;\n    }\n    else {\n        const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x, 10));\n        return new Date(Date.UTC(firstP, secondP - 1, ...restPs));\n    }\n}\nconst MINUTE = 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\n\nclass TimeagoClock {\n}\nclass TimeagoDefaultClock extends TimeagoClock {\n    tick(then) {\n        return of(0)\n            .pipe(expand(() => {\n            const now = Date.now();\n            const seconds = Math.round(Math.abs(now - then) / 1000);\n            const period = seconds < MINUTE\n                ? 1000\n                : seconds < HOUR\n                    ? 1000 * MINUTE\n                    : seconds < DAY\n                        ? 1000 * HOUR\n                        : 0;\n            return period ? timer(period) : empty();\n        }), skip(1));\n    }\n}\nTimeagoDefaultClock.ɵfac = /*@__PURE__*/ function () { let ɵTimeagoDefaultClock_BaseFactory; return function TimeagoDefaultClock_Factory(t) { return (ɵTimeagoDefaultClock_BaseFactory || (ɵTimeagoDefaultClock_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TimeagoDefaultClock)))(t || TimeagoDefaultClock); }; }();\nTimeagoDefaultClock.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TimeagoDefaultClock, factory: TimeagoDefaultClock.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TimeagoDefaultClock, [{\n        type: Injectable\n    }], null, null); })();\n\n;\n/**\n * To modify the text displayed, create a new instance of TimeagoIntl and\n * include it in a custom provider\n */\nclass TimeagoIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the l10n strings are changed\n         * Use this to notify directives if the l10n strings have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n}\nTimeagoIntl.ɵfac = function TimeagoIntl_Factory(t) { return new (t || TimeagoIntl)(); };\nTimeagoIntl.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TimeagoIntl, factory: TimeagoIntl.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TimeagoIntl, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\nconst defaultFormattter = function (then) {\n    const now = Date.now();\n    const seconds = Math.round(Math.abs(now - then) / 1000);\n    const suffix = then < now ? 'ago' : 'from now';\n    const [value, unit] = seconds < MINUTE\n        ? [Math.round(seconds), 'second']\n        : seconds < HOUR\n            ? [Math.round(seconds / MINUTE), 'minute']\n            : seconds < DAY\n                ? [Math.round(seconds / HOUR), 'hour']\n                : seconds < WEEK\n                    ? [Math.round(seconds / DAY), 'day']\n                    : seconds < MONTH\n                        ? [Math.round(seconds / WEEK), 'week']\n                        : seconds < YEAR\n                            ? [Math.round(seconds / MONTH), 'month']\n                            : [Math.round(seconds / YEAR), 'year'];\n    return { value, unit, suffix };\n};\nconst ɵ0 = defaultFormattter;\nclass TimeagoFormatter {\n}\nclass TimeagoDefaultFormatter extends TimeagoFormatter {\n    format(then) {\n        const { suffix, value, unit } = defaultFormattter(then);\n        return this.parse(value, unit, suffix);\n    }\n    parse(value, unit, suffix) {\n        if (value !== 1) {\n            unit += 's';\n        }\n        return value + ' ' + unit + ' ' + suffix;\n    }\n}\nTimeagoDefaultFormatter.ɵfac = /*@__PURE__*/ function () { let ɵTimeagoDefaultFormatter_BaseFactory; return function TimeagoDefaultFormatter_Factory(t) { return (ɵTimeagoDefaultFormatter_BaseFactory || (ɵTimeagoDefaultFormatter_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TimeagoDefaultFormatter)))(t || TimeagoDefaultFormatter); }; }();\nTimeagoDefaultFormatter.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TimeagoDefaultFormatter, factory: TimeagoDefaultFormatter.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TimeagoDefaultFormatter, [{\n        type: Injectable\n    }], null, null); })();\nclass TimeagoCustomFormatter extends TimeagoFormatter {\n    constructor(intl) {\n        super();\n        this.intl = intl;\n    }\n    format(then) {\n        const { suffix, value, unit } = defaultFormattter(then);\n        return this.parse(value, unit, suffix, Date.now(), then);\n    }\n    parse(value, unit, suffix, now, then) {\n        /** convert weeks to days if strings don't handle weeks */\n        if (unit === 'week' && !this.intl.strings.week && !this.intl.strings.weeks) {\n            const days = Math.round(Math.abs(now - then) / (1000 * 60 * 60 * 24));\n            value = days;\n            unit = 'day';\n        }\n        /** create a normalize function for given value */\n        const normalize = this.normalizeFn(value, now - then, this.intl.strings.numbers);\n        /** The eventual return value stored in an array so that the wordSeparator can be used */\n        const dateString = [];\n        /** handle prefixes */\n        if (suffix === 'ago' && this.intl.strings.prefixAgo) {\n            dateString.push(normalize(this.intl.strings.prefixAgo));\n        }\n        if (suffix === 'from now' && this.intl.strings.prefixFromNow) {\n            dateString.push(normalize(this.intl.strings.prefixFromNow));\n        }\n        /** Handle Main number and unit */\n        const isPlural = value > 1;\n        if (isPlural) {\n            const stringFn = this.intl.strings[unit + 's'] || this.intl.strings[unit] || '%d ' + unit;\n            dateString.push(normalize(stringFn));\n        }\n        else {\n            const stringFn = this.intl.strings[unit] || this.intl.strings[unit + 's'] || '%d ' + unit;\n            dateString.push(normalize(stringFn));\n        }\n        /** Handle Suffixes */\n        if (suffix === 'ago' && this.intl.strings.suffixAgo) {\n            dateString.push(normalize(this.intl.strings.suffixAgo));\n        }\n        if (suffix === 'from now' && this.intl.strings.suffixFromNow) {\n            dateString.push(normalize(this.intl.strings.suffixFromNow));\n        }\n        /** join the array into a string and return it */\n        const wordSeparator = typeof this.intl.strings.wordSeparator === 'string' ? this.intl.strings.wordSeparator : ' ';\n        return dateString.join(wordSeparator);\n    }\n    /**\n     * If the numbers array is present, format numbers with it,\n     * otherwise just cast the number to a string and return it\n    */\n    normalizeNumber(numbers, value) {\n        return numbers && numbers.length === 10\n            ? String(value).split('')\n                .map((digit) => digit.match(/^[0-9]$/) ? numbers[parseInt(digit, 10)] : digit)\n                .join('')\n            : String(value);\n    }\n    /**\n     * Take a string or a function that takes number of days and returns a string\n     * and provide a uniform API to create string parts\n    */\n    normalizeFn(value, millisDelta, numbers) {\n        return (stringOrFn) => typeof stringOrFn === 'function'\n            ? stringOrFn(value, millisDelta).replace(/%d/g, this.normalizeNumber(numbers, value))\n            : stringOrFn.replace(/%d/g, this.normalizeNumber(numbers, value));\n    }\n}\nTimeagoCustomFormatter.ɵfac = function TimeagoCustomFormatter_Factory(t) { return new (t || TimeagoCustomFormatter)(ɵngcc0.ɵɵinject(TimeagoIntl)); };\nTimeagoCustomFormatter.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TimeagoCustomFormatter, factory: TimeagoCustomFormatter.ɵfac });\nTimeagoCustomFormatter.ctorParameters = () => [\n    { type: TimeagoIntl }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TimeagoCustomFormatter, [{\n        type: Injectable\n    }], function () { return [{ type: TimeagoIntl }]; }, null); })();\n\nclass TimeagoDirective {\n    constructor(intl, cd, formatter, element, clock) {\n        this.cd = cd;\n        this.clock = clock;\n        /**\n         * Emits on:\n         * - Input change\n         * - Intl change\n         * - Clock tick\n        */\n        this.stateChanges = new Subject();\n        this._live = true;\n        if (intl) {\n            this.intlSubscription = intl.changes.subscribe(() => this.stateChanges.next());\n        }\n        this.stateChanges.subscribe(() => {\n            this.setContent(element.nativeElement, formatter.format(this.date));\n            this.cd.markForCheck();\n        });\n    }\n    /** The Date to display. An actual Date object or something that can be fed to new Date. */\n    get date() {\n        return this._date;\n    }\n    set date(date) {\n        this._date = dateParser(date).valueOf();\n        if (this._date) {\n            if (this.clockSubscription) {\n                this.clockSubscription.unsubscribe();\n                this.clockSubscription = undefined;\n            }\n            this.clockSubscription = this.clock.tick(this.date)\n                .pipe(filter(() => this.live, this))\n                .subscribe(() => this.stateChanges.next());\n        }\n        else {\n            throw new SyntaxError(`Wrong parameter in TimeagoDirective. Expected a valid date, received: ${date}`);\n        }\n    }\n    /** If the directive should update itself over time */\n    get live() {\n        return this._live;\n    }\n    set live(live) {\n        this._live = coerceBooleanProperty(live);\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    setContent(node, content) {\n        if (isDefined(node.textContent)) {\n            node.textContent = content;\n        }\n        else {\n            node.data = content;\n        }\n    }\n    ngOnDestroy() {\n        if (this.intlSubscription) {\n            this.intlSubscription.unsubscribe();\n            this.intlSubscription = undefined;\n        }\n        if (this.clockSubscription) {\n            this.clockSubscription.unsubscribe();\n            this.clockSubscription = undefined;\n        }\n        this.stateChanges.complete();\n    }\n}\nTimeagoDirective.ɵfac = function TimeagoDirective_Factory(t) { return new (t || TimeagoDirective)(ɵngcc0.ɵɵdirectiveInject(TimeagoIntl, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(TimeagoFormatter), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(TimeagoClock)); };\nTimeagoDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: TimeagoDirective, selectors: [[\"\", \"timeago\", \"\"]], inputs: { date: \"date\", live: \"live\" }, exportAs: [\"timeago\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nTimeagoDirective.ctorParameters = () => [\n    { type: TimeagoIntl, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: TimeagoFormatter },\n    { type: ElementRef },\n    { type: TimeagoClock }\n];\nTimeagoDirective.propDecorators = {\n    date: [{ type: Input }],\n    live: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TimeagoDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[timeago]',\n                exportAs: 'timeago'\n            }]\n    }], function () { return [{ type: TimeagoIntl, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: TimeagoFormatter }, { type: ɵngcc0.ElementRef }, { type: TimeagoClock }]; }, { date: [{\n            type: Input\n        }], live: [{\n            type: Input\n        }] }); })();\n\nclass TimeagoPipe {\n    constructor(intl, cd, formatter, clock) {\n        this.clock = clock;\n        this.live = true;\n        /**\n         * Emits on:\n         * - Input change\n         * - Intl change\n         * - Clock tick\n        */\n        this.stateChanges = new Subject();\n        if (intl) {\n            this.intlSubscription = intl.changes.subscribe(() => this.stateChanges.next());\n        }\n        this.stateChanges.subscribe(() => {\n            this.value = formatter.format(this.date);\n            cd.markForCheck();\n        });\n    }\n    transform(date, ...args) {\n        const _date = dateParser(date).valueOf();\n        let _live;\n        _live = isDefined(args[0])\n            ? coerceBooleanProperty(args[0])\n            : this.live;\n        if (this.date === _date && this.live === _live) {\n            return this.value;\n        }\n        this.date = _date;\n        this.live = _live;\n        if (this.date) {\n            if (this.clockSubscription) {\n                this.clockSubscription.unsubscribe();\n                this.clockSubscription = undefined;\n            }\n            this.clockSubscription = this.clock.tick(this.date)\n                .pipe(filter(() => this.live, this))\n                .subscribe(() => this.stateChanges.next());\n            this.stateChanges.next();\n        }\n        else {\n            throw new SyntaxError(`Wrong parameter in TimeagoPipe. Expected a valid date, received: ${date}`);\n        }\n        return this.value;\n    }\n    ngOnDestroy() {\n        if (this.intlSubscription) {\n            this.intlSubscription.unsubscribe();\n            this.intlSubscription = undefined;\n        }\n        if (this.clockSubscription) {\n            this.clockSubscription.unsubscribe();\n            this.clockSubscription = undefined;\n        }\n        this.stateChanges.complete();\n    }\n}\nTimeagoPipe.ɵfac = function TimeagoPipe_Factory(t) { return new (t || TimeagoPipe)(ɵngcc0.ɵɵdirectiveInject(TimeagoIntl, 24), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef, 16), ɵngcc0.ɵɵdirectiveInject(TimeagoFormatter, 16), ɵngcc0.ɵɵdirectiveInject(TimeagoClock, 16)); };\nTimeagoPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"timeago\", type: TimeagoPipe, pure: false });\nTimeagoPipe.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TimeagoPipe, factory: TimeagoPipe.ɵfac });\nTimeagoPipe.ctorParameters = () => [\n    { type: TimeagoIntl, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: TimeagoFormatter },\n    { type: TimeagoClock }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TimeagoPipe, [{\n        type: Injectable\n    }, {\n        type: Pipe,\n        args: [{\n                name: 'timeago',\n                pure: false\n            }]\n    }], function () { return [{ type: TimeagoIntl, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: TimeagoFormatter }, { type: TimeagoClock }]; }, null); })();\n\nclass TimeagoModule {\n    /**\n     * Use this method in your root module to provide the TimeagoModule\n     */\n    static forRoot(config = {}) {\n        return {\n            ngModule: TimeagoModule,\n            providers: [\n                config.clock || { provide: TimeagoClock, useClass: TimeagoDefaultClock },\n                config.intl || [],\n                config.formatter || { provide: TimeagoFormatter, useClass: TimeagoDefaultFormatter },\n            ],\n        };\n    }\n    /**\n     * Use this method in your other (non root) modules to import the directive/pipe\n     */\n    static forChild(config = {}) {\n        return {\n            ngModule: TimeagoModule,\n            providers: [\n                config.clock || { provide: TimeagoClock, useClass: TimeagoDefaultClock },\n                config.intl || [],\n                config.formatter || { provide: TimeagoFormatter, useClass: TimeagoDefaultFormatter },\n            ],\n        };\n    }\n}\nTimeagoModule.ɵfac = function TimeagoModule_Factory(t) { return new (t || TimeagoModule)(); };\nTimeagoModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TimeagoModule });\nTimeagoModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TimeagoModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    TimeagoDirective,\n                    TimeagoPipe,\n                ],\n                exports: [\n                    TimeagoDirective,\n                    TimeagoPipe,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TimeagoModule, { declarations: [TimeagoDirective, TimeagoPipe], exports: [TimeagoDirective, TimeagoPipe] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimeagoClock, TimeagoCustomFormatter, TimeagoDefaultClock, TimeagoDefaultFormatter, TimeagoDirective, TimeagoFormatter, TimeagoIntl, TimeagoModule, TimeagoPipe, ɵ0 };\n\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,EAA0CC,iBAA1C,EAA6DC,UAA7D,EAAyEC,KAAzE,EAAgFC,IAAhF,EAAsFC,QAAtF,QAAsG,eAAtG;AACA,SAASC,EAAT,EAAaC,KAAb,EAAoBC,KAApB,EAA2BC,OAA3B,QAA0C,MAA1C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,gBAArC;AAEA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EACtB,OAAO,OAAOA,KAAP,KAAiB,WAAjB,IAAgCA,KAAK,KAAK,IAAjD;AACH;;AACD,SAASC,qBAAT,CAA+BD,KAA/B,EAAsC;EAClC,OAAOA,KAAK,IAAI,IAAT,IAAkB,GAAEA,KAAM,EAAT,KAAe,OAAvC;AACH;;AACD,SAASE,UAAT,CAAoBC,IAApB,EAA0B;EACtB,MAAMC,MAAM,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAf;;EACA,IAAI,CAACG,MAAM,CAACC,KAAP,CAAaH,MAAM,CAACI,OAAP,EAAb,CAAL,EAAqC;IACjC,OAAOJ,MAAP;EACH;;EACD,MAAMK,KAAK,GAAGC,MAAM,CAACP,IAAD,CAAN,CAAaQ,KAAb,CAAmB,MAAnB,CAAd;;EACA,IAAIF,KAAK,KAAK,IAAV,IAAkBA,KAAK,CAACG,MAAN,IAAgB,CAAtC,EAAyC;IACrC,OAAOR,MAAP;EACH,CAFD,MAGK;IACD,MAAM,CAACS,MAAD,EAASC,OAAT,EAAkB,GAAGC,MAArB,IAA+BN,KAAK,CAACO,GAAN,CAAUC,CAAC,IAAIC,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAAvB,CAArC;IACA,OAAO,IAAIZ,IAAJ,CAASA,IAAI,CAACc,GAAL,CAASN,MAAT,EAAiBC,OAAO,GAAG,CAA3B,EAA8B,GAAGC,MAAjC,CAAT,CAAP;EACH;AACJ;;AACD,MAAMK,MAAM,GAAG,EAAf;AACA,MAAMC,IAAI,GAAGD,MAAM,GAAG,EAAtB;AACA,MAAME,GAAG,GAAGD,IAAI,GAAG,EAAnB;AACA,MAAME,IAAI,GAAGD,GAAG,GAAG,CAAnB;AACA,MAAME,KAAK,GAAGF,GAAG,GAAG,EAApB;AACA,MAAMG,IAAI,GAAGH,GAAG,GAAG,GAAnB;;AAEA,MAAMI,YAAN,CAAmB;;AAEnB,MAAMC,mBAAN,SAAkCD,YAAlC,CAA+C;EAC3CE,IAAI,CAACC,IAAD,EAAO;IACP,OAAOtC,EAAE,CAAC,CAAD,CAAF,CACFuC,IADE,CACGnC,MAAM,CAAC,MAAM;MACnB,MAAMoC,GAAG,GAAG1B,IAAI,CAAC0B,GAAL,EAAZ;MACA,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASJ,GAAG,GAAGF,IAAf,IAAuB,IAAlC,CAAhB;MACA,MAAMO,MAAM,GAAGJ,OAAO,GAAGZ,MAAV,GACT,IADS,GAETY,OAAO,GAAGX,IAAV,GACI,OAAOD,MADX,GAEIY,OAAO,GAAGV,GAAV,GACI,OAAOD,IADX,GAEI,CANd;MAOA,OAAOe,MAAM,GAAG5C,KAAK,CAAC4C,MAAD,CAAR,GAAmB3C,KAAK,EAArC;IACH,CAXe,CADT,EAYHG,IAAI,CAAC,CAAD,CAZD,CAAP;EAaH;;AAf0C;;AAiB/C+B,mBAAmB,CAACU,IAApB,GAA2B,aAAc,YAAY;EAAE,IAAIC,gCAAJ;EAAsC,OAAO,SAASC,2BAAT,CAAqCC,CAArC,EAAwC;IAAE,OAAO,CAACF,gCAAgC,KAAKA,gCAAgC,GAAGxC,MAAM,CAAC2C,qBAAP,CAA6Bd,mBAA7B,CAAxC,CAAjC,EAA6Ha,CAAC,IAAIb,mBAAlI,CAAP;EAAgK,CAAjN;AAAoN,CAAxQ,EAAzC;;AACAA,mBAAmB,CAACe,KAApB,GAA4B,aAAc5C,MAAM,CAAC6C,kBAAP,CAA0B;EAAEC,KAAK,EAAEjB,mBAAT;EAA8BkB,OAAO,EAAElB,mBAAmB,CAACU;AAA3D,CAA1B,CAA1C;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOS,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDhD,MAAM,CAACiD,iBAAP,CAAyBpB,mBAAzB,EAA8C,CAAC;IACzGqB,IAAI,EAAEjE;EADmG,CAAD,CAA9C,EAE1D,IAF0D,EAEpD,IAFoD,CAAnD;AAEO,CAFtB;;AAIA;AACA;AACA;AACA;AACA;;AACA,MAAMkE,WAAN,CAAkB;EACdC,WAAW,GAAG;IACV;AACR;AACA;AACA;IACQ,KAAKC,OAAL,GAAe,IAAIzD,OAAJ,EAAf;EACH;;AAPa;;AASlBuD,WAAW,CAACZ,IAAZ,GAAmB,SAASe,mBAAT,CAA6BZ,CAA7B,EAAgC;EAAE,OAAO,KAAKA,CAAC,IAAIS,WAAV,GAAP;AAAkC,CAAvF;;AACAA,WAAW,CAACP,KAAZ,GAAoB,aAAc5C,MAAM,CAAC6C,kBAAP,CAA0B;EAAEC,KAAK,EAAEK,WAAT;EAAsBJ,OAAO,EAAEI,WAAW,CAACZ;AAA3C,CAA1B,CAAlC;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOS,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDhD,MAAM,CAACiD,iBAAP,CAAyBE,WAAzB,EAAsC,CAAC;IACjGD,IAAI,EAAEjE;EAD2F,CAAD,CAAtC,EAE1D,YAAY;IAAE,OAAO,EAAP;EAAY,CAFgC,EAE9B,IAF8B,CAAnD;AAE6B,CAF5C;;AAIA,MAAMsE,iBAAiB,GAAG,UAAUxB,IAAV,EAAgB;EACtC,MAAME,GAAG,GAAG1B,IAAI,CAAC0B,GAAL,EAAZ;EACA,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASJ,GAAG,GAAGF,IAAf,IAAuB,IAAlC,CAAhB;EACA,MAAMyB,MAAM,GAAGzB,IAAI,GAAGE,GAAP,GAAa,KAAb,GAAqB,UAApC;EACA,MAAM,CAAC/B,KAAD,EAAQuD,IAAR,IAAgBvB,OAAO,GAAGZ,MAAV,GAChB,CAACa,IAAI,CAACC,KAAL,CAAWF,OAAX,CAAD,EAAsB,QAAtB,CADgB,GAEhBA,OAAO,GAAGX,IAAV,GACI,CAACY,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGZ,MAArB,CAAD,EAA+B,QAA/B,CADJ,GAEIY,OAAO,GAAGV,GAAV,GACI,CAACW,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGX,IAArB,CAAD,EAA6B,MAA7B,CADJ,GAEIW,OAAO,GAAGT,IAAV,GACI,CAACU,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGV,GAArB,CAAD,EAA4B,KAA5B,CADJ,GAEIU,OAAO,GAAGR,KAAV,GACI,CAACS,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGT,IAArB,CAAD,EAA6B,MAA7B,CADJ,GAEIS,OAAO,GAAGP,IAAV,GACI,CAACQ,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGR,KAArB,CAAD,EAA8B,OAA9B,CADJ,GAEI,CAACS,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGP,IAArB,CAAD,EAA6B,MAA7B,CAZ1B;EAaA,OAAO;IAAEzB,KAAF;IAASuD,IAAT;IAAeD;EAAf,CAAP;AACH,CAlBD;;AAmBA,MAAME,EAAE,GAAGH,iBAAX;;AACA,MAAMI,gBAAN,CAAuB;;AAEvB,MAAMC,uBAAN,SAAsCD,gBAAtC,CAAuD;EACnDE,MAAM,CAAC9B,IAAD,EAAO;IACT,MAAM;MAAEyB,MAAF;MAAUtD,KAAV;MAAiBuD;IAAjB,IAA0BF,iBAAiB,CAACxB,IAAD,CAAjD;IACA,OAAO,KAAK+B,KAAL,CAAW5D,KAAX,EAAkBuD,IAAlB,EAAwBD,MAAxB,CAAP;EACH;;EACDM,KAAK,CAAC5D,KAAD,EAAQuD,IAAR,EAAcD,MAAd,EAAsB;IACvB,IAAItD,KAAK,KAAK,CAAd,EAAiB;MACbuD,IAAI,IAAI,GAAR;IACH;;IACD,OAAOvD,KAAK,GAAG,GAAR,GAAcuD,IAAd,GAAqB,GAArB,GAA2BD,MAAlC;EACH;;AAVkD;;AAYvDI,uBAAuB,CAACrB,IAAxB,GAA+B,aAAc,YAAY;EAAE,IAAIwB,oCAAJ;EAA0C,OAAO,SAASC,+BAAT,CAAyCtB,CAAzC,EAA4C;IAAE,OAAO,CAACqB,oCAAoC,KAAKA,oCAAoC,GAAG/D,MAAM,CAAC2C,qBAAP,CAA6BiB,uBAA7B,CAA5C,CAArC,EAAyIlB,CAAC,IAAIkB,uBAA9I,CAAP;EAAgL,CAArO;AAAwO,CAAhS,EAA7C;;AACAA,uBAAuB,CAAChB,KAAxB,GAAgC,aAAc5C,MAAM,CAAC6C,kBAAP,CAA0B;EAAEC,KAAK,EAAEc,uBAAT;EAAkCb,OAAO,EAAEa,uBAAuB,CAACrB;AAAnE,CAA1B,CAA9C;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOS,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDhD,MAAM,CAACiD,iBAAP,CAAyBW,uBAAzB,EAAkD,CAAC;IAC7GV,IAAI,EAAEjE;EADuG,CAAD,CAAlD,EAE1D,IAF0D,EAEpD,IAFoD,CAAnD;AAEO,CAFtB;;AAGA,MAAMgF,sBAAN,SAAqCN,gBAArC,CAAsD;EAClDP,WAAW,CAACc,IAAD,EAAO;IACd;IACA,KAAKA,IAAL,GAAYA,IAAZ;EACH;;EACDL,MAAM,CAAC9B,IAAD,EAAO;IACT,MAAM;MAAEyB,MAAF;MAAUtD,KAAV;MAAiBuD;IAAjB,IAA0BF,iBAAiB,CAACxB,IAAD,CAAjD;IACA,OAAO,KAAK+B,KAAL,CAAW5D,KAAX,EAAkBuD,IAAlB,EAAwBD,MAAxB,EAAgCjD,IAAI,CAAC0B,GAAL,EAAhC,EAA4CF,IAA5C,CAAP;EACH;;EACD+B,KAAK,CAAC5D,KAAD,EAAQuD,IAAR,EAAcD,MAAd,EAAsBvB,GAAtB,EAA2BF,IAA3B,EAAiC;IAClC;IACA,IAAI0B,IAAI,KAAK,MAAT,IAAmB,CAAC,KAAKS,IAAL,CAAUC,OAAV,CAAkBC,IAAtC,IAA8C,CAAC,KAAKF,IAAL,CAAUC,OAAV,CAAkBE,KAArE,EAA4E;MACxE,MAAMC,IAAI,GAAGnC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASJ,GAAG,GAAGF,IAAf,KAAwB,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAzC,CAAX,CAAb;MACA7B,KAAK,GAAGoE,IAAR;MACAb,IAAI,GAAG,KAAP;IACH;IACD;;;IACA,MAAMc,SAAS,GAAG,KAAKC,WAAL,CAAiBtE,KAAjB,EAAwB+B,GAAG,GAAGF,IAA9B,EAAoC,KAAKmC,IAAL,CAAUC,OAAV,CAAkBM,OAAtD,CAAlB;IACA;;IACA,MAAMC,UAAU,GAAG,EAAnB;IACA;;IACA,IAAIlB,MAAM,KAAK,KAAX,IAAoB,KAAKU,IAAL,CAAUC,OAAV,CAAkBQ,SAA1C,EAAqD;MACjDD,UAAU,CAACE,IAAX,CAAgBL,SAAS,CAAC,KAAKL,IAAL,CAAUC,OAAV,CAAkBQ,SAAnB,CAAzB;IACH;;IACD,IAAInB,MAAM,KAAK,UAAX,IAAyB,KAAKU,IAAL,CAAUC,OAAV,CAAkBU,aAA/C,EAA8D;MAC1DH,UAAU,CAACE,IAAX,CAAgBL,SAAS,CAAC,KAAKL,IAAL,CAAUC,OAAV,CAAkBU,aAAnB,CAAzB;IACH;IACD;;;IACA,MAAMC,QAAQ,GAAG5E,KAAK,GAAG,CAAzB;;IACA,IAAI4E,QAAJ,EAAc;MACV,MAAMC,QAAQ,GAAG,KAAKb,IAAL,CAAUC,OAAV,CAAkBV,IAAI,GAAG,GAAzB,KAAiC,KAAKS,IAAL,CAAUC,OAAV,CAAkBV,IAAlB,CAAjC,IAA4D,QAAQA,IAArF;MACAiB,UAAU,CAACE,IAAX,CAAgBL,SAAS,CAACQ,QAAD,CAAzB;IACH,CAHD,MAIK;MACD,MAAMA,QAAQ,GAAG,KAAKb,IAAL,CAAUC,OAAV,CAAkBV,IAAlB,KAA2B,KAAKS,IAAL,CAAUC,OAAV,CAAkBV,IAAI,GAAG,GAAzB,CAA3B,IAA4D,QAAQA,IAArF;MACAiB,UAAU,CAACE,IAAX,CAAgBL,SAAS,CAACQ,QAAD,CAAzB;IACH;IACD;;;IACA,IAAIvB,MAAM,KAAK,KAAX,IAAoB,KAAKU,IAAL,CAAUC,OAAV,CAAkBa,SAA1C,EAAqD;MACjDN,UAAU,CAACE,IAAX,CAAgBL,SAAS,CAAC,KAAKL,IAAL,CAAUC,OAAV,CAAkBa,SAAnB,CAAzB;IACH;;IACD,IAAIxB,MAAM,KAAK,UAAX,IAAyB,KAAKU,IAAL,CAAUC,OAAV,CAAkBc,aAA/C,EAA8D;MAC1DP,UAAU,CAACE,IAAX,CAAgBL,SAAS,CAAC,KAAKL,IAAL,CAAUC,OAAV,CAAkBc,aAAnB,CAAzB;IACH;IACD;;;IACA,MAAMC,aAAa,GAAG,OAAO,KAAKhB,IAAL,CAAUC,OAAV,CAAkBe,aAAzB,KAA2C,QAA3C,GAAsD,KAAKhB,IAAL,CAAUC,OAAV,CAAkBe,aAAxE,GAAwF,GAA9G;IACA,OAAOR,UAAU,CAACS,IAAX,CAAgBD,aAAhB,CAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIE,eAAe,CAACX,OAAD,EAAUvE,KAAV,EAAiB;IAC5B,OAAOuE,OAAO,IAAIA,OAAO,CAAC3D,MAAR,KAAmB,EAA9B,GACDF,MAAM,CAACV,KAAD,CAAN,CAAcmF,KAAd,CAAoB,EAApB,EACGnE,GADH,CACQoE,KAAD,IAAWA,KAAK,CAACzE,KAAN,CAAY,SAAZ,IAAyB4D,OAAO,CAACrD,QAAQ,CAACkE,KAAD,EAAQ,EAAR,CAAT,CAAhC,GAAwDA,KAD1E,EAEGH,IAFH,CAEQ,EAFR,CADC,GAIDvE,MAAM,CAACV,KAAD,CAJZ;EAKH;EACD;AACJ;AACA;AACA;;;EACIsE,WAAW,CAACtE,KAAD,EAAQqF,WAAR,EAAqBd,OAArB,EAA8B;IACrC,OAAQe,UAAD,IAAgB,OAAOA,UAAP,KAAsB,UAAtB,GACjBA,UAAU,CAACtF,KAAD,EAAQqF,WAAR,CAAV,CAA+BE,OAA/B,CAAuC,KAAvC,EAA8C,KAAKL,eAAL,CAAqBX,OAArB,EAA8BvE,KAA9B,CAA9C,CADiB,GAEjBsF,UAAU,CAACC,OAAX,CAAmB,KAAnB,EAA0B,KAAKL,eAAL,CAAqBX,OAArB,EAA8BvE,KAA9B,CAA1B,CAFN;EAGH;;AAnEiD;;AAqEtD+D,sBAAsB,CAAC1B,IAAvB,GAA8B,SAASmD,8BAAT,CAAwChD,CAAxC,EAA2C;EAAE,OAAO,KAAKA,CAAC,IAAIuB,sBAAV,EAAkCjE,MAAM,CAAC2F,QAAP,CAAgBxC,WAAhB,CAAlC,CAAP;AAAyE,CAApJ;;AACAc,sBAAsB,CAACrB,KAAvB,GAA+B,aAAc5C,MAAM,CAAC6C,kBAAP,CAA0B;EAAEC,KAAK,EAAEmB,sBAAT;EAAiClB,OAAO,EAAEkB,sBAAsB,CAAC1B;AAAjE,CAA1B,CAA7C;;AACA0B,sBAAsB,CAAC2B,cAAvB,GAAwC,MAAM,CAC1C;EAAE1C,IAAI,EAAEC;AAAR,CAD0C,CAA9C;;AAGA,CAAC,YAAY;EAAE,CAAC,OAAOH,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDhD,MAAM,CAACiD,iBAAP,CAAyBgB,sBAAzB,EAAiD,CAAC;IAC5Gf,IAAI,EAAEjE;EADsG,CAAD,CAAjD,EAE1D,YAAY;IAAE,OAAO,CAAC;MAAEiE,IAAI,EAAEC;IAAR,CAAD,CAAP;EAAiC,CAFW,EAET,IAFS,CAAnD;AAEkD,CAFjE;;AAIA,MAAM0C,gBAAN,CAAuB;EACnBzC,WAAW,CAACc,IAAD,EAAO4B,EAAP,EAAWC,SAAX,EAAsBC,OAAtB,EAA+BC,KAA/B,EAAsC;IAC7C,KAAKH,EAAL,GAAUA,EAAV;IACA,KAAKG,KAAL,GAAaA,KAAb;IACA;AACR;AACA;AACA;AACA;AACA;;IACQ,KAAKC,YAAL,GAAoB,IAAItG,OAAJ,EAApB;IACA,KAAKuG,KAAL,GAAa,IAAb;;IACA,IAAIjC,IAAJ,EAAU;MACN,KAAKkC,gBAAL,GAAwBlC,IAAI,CAACb,OAAL,CAAagD,SAAb,CAAuB,MAAM,KAAKH,YAAL,CAAkBI,IAAlB,EAA7B,CAAxB;IACH;;IACD,KAAKJ,YAAL,CAAkBG,SAAlB,CAA4B,MAAM;MAC9B,KAAKE,UAAL,CAAgBP,OAAO,CAACQ,aAAxB,EAAuCT,SAAS,CAAClC,MAAV,CAAiB,KAAKxD,IAAtB,CAAvC;MACA,KAAKyF,EAAL,CAAQW,YAAR;IACH,CAHD;EAIH;EACD;;;EACQ,IAAJpG,IAAI,GAAG;IACP,OAAO,KAAKqG,KAAZ;EACH;;EACO,IAAJrG,IAAI,CAACA,IAAD,EAAO;IACX,KAAKqG,KAAL,GAAatG,UAAU,CAACC,IAAD,CAAV,CAAiBK,OAAjB,EAAb;;IACA,IAAI,KAAKgG,KAAT,EAAgB;MACZ,IAAI,KAAKC,iBAAT,EAA4B;QACxB,KAAKA,iBAAL,CAAuBC,WAAvB;QACA,KAAKD,iBAAL,GAAyBE,SAAzB;MACH;;MACD,KAAKF,iBAAL,GAAyB,KAAKV,KAAL,CAAWnE,IAAX,CAAgB,KAAKzB,IAArB,EACpB2B,IADoB,CACfjC,MAAM,CAAC,MAAM,KAAK+G,IAAZ,EAAkB,IAAlB,CADS,EAEpBT,SAFoB,CAEV,MAAM,KAAKH,YAAL,CAAkBI,IAAlB,EAFI,CAAzB;IAGH,CARD,MASK;MACD,MAAM,IAAIS,WAAJ,CAAiB,yEAAwE1G,IAAK,EAA9F,CAAN;IACH;EACJ;EACD;;;EACQ,IAAJyG,IAAI,GAAG;IACP,OAAO,KAAKX,KAAZ;EACH;;EACO,IAAJW,IAAI,CAACA,IAAD,EAAO;IACX,KAAKX,KAAL,GAAahG,qBAAqB,CAAC2G,IAAD,CAAlC;EACH;;EACDE,WAAW,GAAG;IACV,KAAKd,YAAL,CAAkBI,IAAlB;EACH;;EACDC,UAAU,CAACU,IAAD,EAAOC,OAAP,EAAgB;IACtB,IAAIjH,SAAS,CAACgH,IAAI,CAACE,WAAN,CAAb,EAAiC;MAC7BF,IAAI,CAACE,WAAL,GAAmBD,OAAnB;IACH,CAFD,MAGK;MACDD,IAAI,CAACG,IAAL,GAAYF,OAAZ;IACH;EACJ;;EACDG,WAAW,GAAG;IACV,IAAI,KAAKjB,gBAAT,EAA2B;MACvB,KAAKA,gBAAL,CAAsBQ,WAAtB;MACA,KAAKR,gBAAL,GAAwBS,SAAxB;IACH;;IACD,IAAI,KAAKF,iBAAT,EAA4B;MACxB,KAAKA,iBAAL,CAAuBC,WAAvB;MACA,KAAKD,iBAAL,GAAyBE,SAAzB;IACH;;IACD,KAAKX,YAAL,CAAkBoB,QAAlB;EACH;;AAnEkB;;AAqEvBzB,gBAAgB,CAACtD,IAAjB,GAAwB,SAASgF,wBAAT,CAAkC7E,CAAlC,EAAqC;EAAE,OAAO,KAAKA,CAAC,IAAImD,gBAAV,EAA4B7F,MAAM,CAACwH,iBAAP,CAAyBrE,WAAzB,EAAsC,CAAtC,CAA5B,EAAsEnD,MAAM,CAACwH,iBAAP,CAAyBxH,MAAM,CAACZ,iBAAhC,CAAtE,EAA0HY,MAAM,CAACwH,iBAAP,CAAyB7D,gBAAzB,CAA1H,EAAsK3D,MAAM,CAACwH,iBAAP,CAAyBxH,MAAM,CAACX,UAAhC,CAAtK,EAAmNW,MAAM,CAACwH,iBAAP,CAAyB5F,YAAzB,CAAnN,CAAP;AAAoQ,CAAnU;;AACAiE,gBAAgB,CAAC4B,IAAjB,GAAwB,aAAczH,MAAM,CAAC0H,iBAAP,CAAyB;EAAExE,IAAI,EAAE2C,gBAAR;EAA0B8B,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,SAAL,EAAgB,EAAhB,CAAD,CAArC;EAA4DC,MAAM,EAAE;IAAEvH,IAAI,EAAE,MAAR;IAAgByG,IAAI,EAAE;EAAtB,CAApE;EAAoGe,QAAQ,EAAE,CAAC,SAAD,CAA9G;EAA2HC,QAAQ,EAAE,CAAC9H,MAAM,CAAC+H,oBAAR;AAArI,CAAzB,CAAtC;;AACAlC,gBAAgB,CAACD,cAAjB,GAAkC,MAAM,CACpC;EAAE1C,IAAI,EAAEC,WAAR;EAAqB6E,UAAU,EAAE,CAAC;IAAE9E,IAAI,EAAE/D;EAAR,CAAD;AAAjC,CADoC,EAEpC;EAAE+D,IAAI,EAAE9D;AAAR,CAFoC,EAGpC;EAAE8D,IAAI,EAAES;AAAR,CAHoC,EAIpC;EAAET,IAAI,EAAE7D;AAAR,CAJoC,EAKpC;EAAE6D,IAAI,EAAEtB;AAAR,CALoC,CAAxC;;AAOAiE,gBAAgB,CAACoC,cAAjB,GAAkC;EAC9B5H,IAAI,EAAE,CAAC;IAAE6C,IAAI,EAAE5D;EAAR,CAAD,CADwB;EAE9BwH,IAAI,EAAE,CAAC;IAAE5D,IAAI,EAAE5D;EAAR,CAAD;AAFwB,CAAlC;;AAIA,CAAC,YAAY;EAAE,CAAC,OAAO0D,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDhD,MAAM,CAACiD,iBAAP,CAAyB4C,gBAAzB,EAA2C,CAAC;IACtG3C,IAAI,EAAEhE,SADgG;IAEtGgJ,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,WADX;MAECN,QAAQ,EAAE;IAFX,CAAD;EAFgG,CAAD,CAA3C,EAM1D,YAAY;IAAE,OAAO,CAAC;MAAE3E,IAAI,EAAEC,WAAR;MAAqB6E,UAAU,EAAE,CAAC;QAChD9E,IAAI,EAAE/D;MAD0C,CAAD;IAAjC,CAAD,EAEX;MAAE+D,IAAI,EAAElD,MAAM,CAACZ;IAAf,CAFW,EAEyB;MAAE8D,IAAI,EAAES;IAAR,CAFzB,EAEqD;MAAET,IAAI,EAAElD,MAAM,CAACX;IAAf,CAFrD,EAEkF;MAAE6D,IAAI,EAAEtB;IAAR,CAFlF,CAAP;EAEmH,CARvE,EAQyE;IAAEvB,IAAI,EAAE,CAAC;MACxI6C,IAAI,EAAE5D;IADkI,CAAD,CAAR;IAE/HwH,IAAI,EAAE,CAAC;MACP5D,IAAI,EAAE5D;IADC,CAAD;EAFyH,CARzE,CAAnD;AAYC,CAZhB;;AAcA,MAAM8I,WAAN,CAAkB;EACdhF,WAAW,CAACc,IAAD,EAAO4B,EAAP,EAAWC,SAAX,EAAsBE,KAAtB,EAA6B;IACpC,KAAKA,KAAL,GAAaA,KAAb;IACA,KAAKa,IAAL,GAAY,IAAZ;IACA;AACR;AACA;AACA;AACA;AACA;;IACQ,KAAKZ,YAAL,GAAoB,IAAItG,OAAJ,EAApB;;IACA,IAAIsE,IAAJ,EAAU;MACN,KAAKkC,gBAAL,GAAwBlC,IAAI,CAACb,OAAL,CAAagD,SAAb,CAAuB,MAAM,KAAKH,YAAL,CAAkBI,IAAlB,EAA7B,CAAxB;IACH;;IACD,KAAKJ,YAAL,CAAkBG,SAAlB,CAA4B,MAAM;MAC9B,KAAKnG,KAAL,GAAa6F,SAAS,CAAClC,MAAV,CAAiB,KAAKxD,IAAtB,CAAb;MACAyF,EAAE,CAACW,YAAH;IACH,CAHD;EAIH;;EACD4B,SAAS,CAAChI,IAAD,EAAO,GAAG6H,IAAV,EAAgB;IACrB,MAAMxB,KAAK,GAAGtG,UAAU,CAACC,IAAD,CAAV,CAAiBK,OAAjB,EAAd;;IACA,IAAIyF,KAAJ;;IACAA,KAAK,GAAGlG,SAAS,CAACiI,IAAI,CAAC,CAAD,CAAL,CAAT,GACF/H,qBAAqB,CAAC+H,IAAI,CAAC,CAAD,CAAL,CADnB,GAEF,KAAKpB,IAFX;;IAGA,IAAI,KAAKzG,IAAL,KAAcqG,KAAd,IAAuB,KAAKI,IAAL,KAAcX,KAAzC,EAAgD;MAC5C,OAAO,KAAKjG,KAAZ;IACH;;IACD,KAAKG,IAAL,GAAYqG,KAAZ;IACA,KAAKI,IAAL,GAAYX,KAAZ;;IACA,IAAI,KAAK9F,IAAT,EAAe;MACX,IAAI,KAAKsG,iBAAT,EAA4B;QACxB,KAAKA,iBAAL,CAAuBC,WAAvB;QACA,KAAKD,iBAAL,GAAyBE,SAAzB;MACH;;MACD,KAAKF,iBAAL,GAAyB,KAAKV,KAAL,CAAWnE,IAAX,CAAgB,KAAKzB,IAArB,EACpB2B,IADoB,CACfjC,MAAM,CAAC,MAAM,KAAK+G,IAAZ,EAAkB,IAAlB,CADS,EAEpBT,SAFoB,CAEV,MAAM,KAAKH,YAAL,CAAkBI,IAAlB,EAFI,CAAzB;MAGA,KAAKJ,YAAL,CAAkBI,IAAlB;IACH,CATD,MAUK;MACD,MAAM,IAAIS,WAAJ,CAAiB,oEAAmE1G,IAAK,EAAzF,CAAN;IACH;;IACD,OAAO,KAAKH,KAAZ;EACH;;EACDmH,WAAW,GAAG;IACV,IAAI,KAAKjB,gBAAT,EAA2B;MACvB,KAAKA,gBAAL,CAAsBQ,WAAtB;MACA,KAAKR,gBAAL,GAAwBS,SAAxB;IACH;;IACD,IAAI,KAAKF,iBAAT,EAA4B;MACxB,KAAKA,iBAAL,CAAuBC,WAAvB;MACA,KAAKD,iBAAL,GAAyBE,SAAzB;IACH;;IACD,KAAKX,YAAL,CAAkBoB,QAAlB;EACH;;AAvDa;;AAyDlBc,WAAW,CAAC7F,IAAZ,GAAmB,SAAS+F,mBAAT,CAA6B5F,CAA7B,EAAgC;EAAE,OAAO,KAAKA,CAAC,IAAI0F,WAAV,EAAuBpI,MAAM,CAACwH,iBAAP,CAAyBrE,WAAzB,EAAsC,EAAtC,CAAvB,EAAkEnD,MAAM,CAACwH,iBAAP,CAAyBxH,MAAM,CAACZ,iBAAhC,EAAmD,EAAnD,CAAlE,EAA0HY,MAAM,CAACwH,iBAAP,CAAyB7D,gBAAzB,EAA2C,EAA3C,CAA1H,EAA0K3D,MAAM,CAACwH,iBAAP,CAAyB5F,YAAzB,EAAuC,EAAvC,CAA1K,CAAP;AAA+N,CAApR;;AACAwG,WAAW,CAACG,KAAZ,GAAoB,aAAcvI,MAAM,CAACwI,YAAP,CAAoB;EAAEC,IAAI,EAAE,SAAR;EAAmBvF,IAAI,EAAEkF,WAAzB;EAAsCM,IAAI,EAAE;AAA5C,CAApB,CAAlC;AACAN,WAAW,CAACxF,KAAZ,GAAoB,aAAc5C,MAAM,CAAC6C,kBAAP,CAA0B;EAAEC,KAAK,EAAEsF,WAAT;EAAsBrF,OAAO,EAAEqF,WAAW,CAAC7F;AAA3C,CAA1B,CAAlC;;AACA6F,WAAW,CAACxC,cAAZ,GAA6B,MAAM,CAC/B;EAAE1C,IAAI,EAAEC,WAAR;EAAqB6E,UAAU,EAAE,CAAC;IAAE9E,IAAI,EAAE/D;EAAR,CAAD;AAAjC,CAD+B,EAE/B;EAAE+D,IAAI,EAAE9D;AAAR,CAF+B,EAG/B;EAAE8D,IAAI,EAAES;AAAR,CAH+B,EAI/B;EAAET,IAAI,EAAEtB;AAAR,CAJ+B,CAAnC;;AAMA,CAAC,YAAY;EAAE,CAAC,OAAOoB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDhD,MAAM,CAACiD,iBAAP,CAAyBmF,WAAzB,EAAsC,CAAC;IACjGlF,IAAI,EAAEjE;EAD2F,CAAD,EAEjG;IACCiE,IAAI,EAAE3D,IADP;IAEC2I,IAAI,EAAE,CAAC;MACCO,IAAI,EAAE,SADP;MAECC,IAAI,EAAE;IAFP,CAAD;EAFP,CAFiG,CAAtC,EAQ1D,YAAY;IAAE,OAAO,CAAC;MAAExF,IAAI,EAAEC,WAAR;MAAqB6E,UAAU,EAAE,CAAC;QAChD9E,IAAI,EAAE/D;MAD0C,CAAD;IAAjC,CAAD,EAEX;MAAE+D,IAAI,EAAElD,MAAM,CAACZ;IAAf,CAFW,EAEyB;MAAE8D,IAAI,EAAES;IAAR,CAFzB,EAEqD;MAAET,IAAI,EAAEtB;IAAR,CAFrD,CAAP;EAEsF,CAV1C,EAU4C,IAV5C,CAAnD;AAUuG,CAVtH;;AAYA,MAAM+G,aAAN,CAAoB;EAChB;AACJ;AACA;EACkB,OAAPC,OAAO,CAACC,MAAM,GAAG,EAAV,EAAc;IACxB,OAAO;MACHC,QAAQ,EAAEH,aADP;MAEHI,SAAS,EAAE,CACPF,MAAM,CAAC5C,KAAP,IAAgB;QAAE+C,OAAO,EAAEpH,YAAX;QAAyBqH,QAAQ,EAAEpH;MAAnC,CADT,EAEPgH,MAAM,CAAC3E,IAAP,IAAe,EAFR,EAGP2E,MAAM,CAAC9C,SAAP,IAAoB;QAAEiD,OAAO,EAAErF,gBAAX;QAA6BsF,QAAQ,EAAErF;MAAvC,CAHb;IAFR,CAAP;EAQH;EACD;AACJ;AACA;;;EACmB,OAARsF,QAAQ,CAACL,MAAM,GAAG,EAAV,EAAc;IACzB,OAAO;MACHC,QAAQ,EAAEH,aADP;MAEHI,SAAS,EAAE,CACPF,MAAM,CAAC5C,KAAP,IAAgB;QAAE+C,OAAO,EAAEpH,YAAX;QAAyBqH,QAAQ,EAAEpH;MAAnC,CADT,EAEPgH,MAAM,CAAC3E,IAAP,IAAe,EAFR,EAGP2E,MAAM,CAAC9C,SAAP,IAAoB;QAAEiD,OAAO,EAAErF,gBAAX;QAA6BsF,QAAQ,EAAErF;MAAvC,CAHb;IAFR,CAAP;EAQH;;AA1Be;;AA4BpB+E,aAAa,CAACpG,IAAd,GAAqB,SAAS4G,qBAAT,CAA+BzG,CAA/B,EAAkC;EAAE,OAAO,KAAKA,CAAC,IAAIiG,aAAV,GAAP;AAAoC,CAA7F;;AACAA,aAAa,CAACS,IAAd,GAAqB,aAAcpJ,MAAM,CAACqJ,gBAAP,CAAwB;EAAEnG,IAAI,EAAEyF;AAAR,CAAxB,CAAnC;AACAA,aAAa,CAACW,IAAd,GAAqB,aAActJ,MAAM,CAACuJ,gBAAP,CAAwB,EAAxB,CAAnC;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOvG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDhD,MAAM,CAACiD,iBAAP,CAAyB0F,aAAzB,EAAwC,CAAC;IACnGzF,IAAI,EAAE1D,QAD6F;IAEnG0I,IAAI,EAAE,CAAC;MACCsB,YAAY,EAAE,CACV3D,gBADU,EAEVuC,WAFU,CADf;MAKCqB,OAAO,EAAE,CACL5D,gBADK,EAELuC,WAFK;IALV,CAAD;EAF6F,CAAD,CAAxC,EAY1D,IAZ0D,EAYpD,IAZoD,CAAnD;AAYO,CAZtB;;AAaA,CAAC,YAAY;EAAE,CAAC,OAAOsB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD1J,MAAM,CAAC2J,kBAAP,CAA0BhB,aAA1B,EAAyC;IAAEa,YAAY,EAAE,CAAC3D,gBAAD,EAAmBuC,WAAnB,CAAhB;IAAiDqB,OAAO,EAAE,CAAC5D,gBAAD,EAAmBuC,WAAnB;EAA1D,CAAzC,CAAnD;AAA2L,CAA1M;AAEA;AACA;AACA;;;AAEA,SAASxG,YAAT,EAAuBqC,sBAAvB,EAA+CpC,mBAA/C,EAAoE+B,uBAApE,EAA6FiC,gBAA7F,EAA+GlC,gBAA/G,EAAiIR,WAAjI,EAA8IwF,aAA9I,EAA6JP,WAA7J,EAA0K1E,EAA1K"},"metadata":{},"sourceType":"module"}
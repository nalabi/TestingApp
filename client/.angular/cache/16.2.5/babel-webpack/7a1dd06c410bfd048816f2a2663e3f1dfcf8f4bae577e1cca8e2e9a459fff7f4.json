{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-toastr\";\nexport class ErrorInterceptor {\n  constructor(router, toastr) {\n    this.router = router;\n    this.toastr = toastr;\n  }\n  intercept(request, next) {\n    return next.handle(request).pipe(catchError(error => {\n      if (error) {\n        switch (error.status) {\n          case 400:\n            if (error.error.errors) {\n              const modalStateErrors = [];\n              for (const key in error.error.errors) {\n                if (error.error.errors[key]) {\n                  modalStateErrors.push(error.error.errors[key]);\n                }\n              }\n              throw modalStateErrors.flat();\n            } else if (typeof error.error === 'object') {\n              this.toastr.error(error.statusText, error.status);\n            } else {\n              this.toastr.error(error.error, error.status);\n            }\n            break;\n          case 401:\n            this.toastr.error(error.statusText, error.status);\n            break;\n          case 404:\n            this.router.navigateByUrl('/not-found');\n            break;\n          case 500:\n            const navigationExtras = {\n              state: {\n                error: error.error\n              }\n            };\n            this.router.navigateByUrl('/server-error', navigationExtras);\n            break;\n          default:\n            this.toastr.error('Something unexpected went wrong');\n            console.log(error);\n            break;\n        }\n      }\n      return throwError(error);\n    }));\n  }\n  static #_ = this.ɵfac = function ErrorInterceptor_Factory(t) {\n    return new (t || ErrorInterceptor)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.ToastrService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorInterceptor,\n    factory: ErrorInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["throwError","catchError","ErrorInterceptor","constructor","router","toastr","intercept","request","next","handle","pipe","error","status","errors","modalStateErrors","key","push","flat","statusText","navigateByUrl","navigationExtras","state","console","log","_","i0","ɵɵinject","i1","Router","i2","ToastrService","_2","factory","ɵfac"],"sources":["C:\\Users\\BongumusaN\\TestingApp\\client\\src\\app\\_interceptors\\error.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private router: Router, private toastr: ToastrService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError(error => {\r\n        if (error) {\r\n          switch (error.status) {\r\n            case 400:\r\n              if (error.error.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in error.error.errors) {\r\n                  if (error.error.errors[key]) {\r\n                    modalStateErrors.push(error.error.errors[key])\r\n                  }\r\n                }\r\n                throw modalStateErrors.flat();\r\n              } else if (typeof(error.error) === 'object') {\r\n                this.toastr.error(error.statusText, error.status);\r\n              } else {\r\n                this.toastr.error(error.error, error.status);\r\n              }\r\n              break;\r\n            case 401:\r\n              this.toastr.error(error.statusText, error.status);\r\n              break;\r\n            case 404:\r\n              this.router.navigateByUrl('/not-found');\r\n              break;\r\n            case 500:\r\n              const navigationExtras: NavigationExtras = {state: {error: error.error}}\r\n              this.router.navigateByUrl('/server-error', navigationExtras);\r\n              break;\r\n            default:\r\n              this.toastr.error('Something unexpected went wrong');\r\n              console.log(error);\r\n              break;\r\n          }\r\n        }\r\n        return throwError(error);\r\n      })\r\n    )\r\n  }\r\n}\r\n"],"mappings":"AAOA,SAAqBA,UAAU,QAAQ,MAAM;AAG7C,SAASC,UAAU,QAAQ,gBAAgB;;;;AAG3C,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,MAAc,EAAUC,MAAqB;IAA7C,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,MAAM,GAANA,MAAM;EAAkB;EAEpEC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,OAAOA,IAAI,CAACC,MAAM,CAACF,OAAO,CAAC,CAACG,IAAI,CAC9BT,UAAU,CAACU,KAAK,IAAG;MACjB,IAAIA,KAAK,EAAE;QACT,QAAQA,KAAK,CAACC,MAAM;UAClB,KAAK,GAAG;YACN,IAAID,KAAK,CAACA,KAAK,CAACE,MAAM,EAAE;cACtB,MAAMC,gBAAgB,GAAG,EAAE;cAC3B,KAAK,MAAMC,GAAG,IAAIJ,KAAK,CAACA,KAAK,CAACE,MAAM,EAAE;gBACpC,IAAIF,KAAK,CAACA,KAAK,CAACE,MAAM,CAACE,GAAG,CAAC,EAAE;kBAC3BD,gBAAgB,CAACE,IAAI,CAACL,KAAK,CAACA,KAAK,CAACE,MAAM,CAACE,GAAG,CAAC,CAAC;;;cAGlD,MAAMD,gBAAgB,CAACG,IAAI,EAAE;aAC9B,MAAM,IAAI,OAAON,KAAK,CAACA,KAAM,KAAK,QAAQ,EAAE;cAC3C,IAAI,CAACN,MAAM,CAACM,KAAK,CAACA,KAAK,CAACO,UAAU,EAAEP,KAAK,CAACC,MAAM,CAAC;aAClD,MAAM;cACL,IAAI,CAACP,MAAM,CAACM,KAAK,CAACA,KAAK,CAACA,KAAK,EAAEA,KAAK,CAACC,MAAM,CAAC;;YAE9C;UACF,KAAK,GAAG;YACN,IAAI,CAACP,MAAM,CAACM,KAAK,CAACA,KAAK,CAACO,UAAU,EAAEP,KAAK,CAACC,MAAM,CAAC;YACjD;UACF,KAAK,GAAG;YACN,IAAI,CAACR,MAAM,CAACe,aAAa,CAAC,YAAY,CAAC;YACvC;UACF,KAAK,GAAG;YACN,MAAMC,gBAAgB,GAAqB;cAACC,KAAK,EAAE;gBAACV,KAAK,EAAEA,KAAK,CAACA;cAAK;YAAC,CAAC;YACxE,IAAI,CAACP,MAAM,CAACe,aAAa,CAAC,eAAe,EAAEC,gBAAgB,CAAC;YAC5D;UACF;YACE,IAAI,CAACf,MAAM,CAACM,KAAK,CAAC,iCAAiC,CAAC;YACpDW,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;YAClB;;;MAGN,OAAOX,UAAU,CAACW,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EAAC,QAAAa,CAAA,G;qBA3CUtB,gBAAgB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhB7B,gBAAgB;IAAA8B,OAAA,EAAhB9B,gBAAgB,CAAA+B;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
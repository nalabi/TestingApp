{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nfunction DatePickerComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.label, \" is required\");\n  }\n}\nexport class DatePickerComponent {\n  constructor(ngControl) {\n    this.ngControl = ngControl;\n    this.label = '';\n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-red',\n      dateInputFormat: 'DD MMMM YYYY'\n    };\n  }\n  writeValue(obj) {}\n  registerOnChange(fn) {}\n  registerOnTouched(fn) {}\n  get control() {\n    return this.ngControl.control;\n  }\n  static #_ = this.ɵfac = function DatePickerComponent_Factory(t) {\n    return new (t || DatePickerComponent)(i0.ɵɵdirectiveInject(i1.NgControl, 2));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DatePickerComponent,\n    selectors: [[\"app-date-picker\"]],\n    inputs: {\n      label: \"label\",\n      maxDate: \"maxDate\"\n    },\n    decls: 3,\n    vars: 7,\n    consts: [[1, \"mb-3\"], [\"type\", \"text\", \"bsDatepicker\", \"\", 1, \"form-control\", 3, \"formControl\", \"placeholder\", \"bsConfig\", \"maxDate\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"invalid-feedback\"]],\n    template: function DatePickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"input\", 1);\n        i0.ɵɵtemplate(2, DatePickerComponent_div_2_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.control.touched && ctx.control.invalid);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.label);\n        i0.ɵɵproperty(\"formControl\", ctx.control)(\"bsConfig\", ctx.bsConfig)(\"maxDate\", ctx.maxDate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.control.errors == null ? null : ctx.control.errors[\"required\"]);\n      }\n    },\n    styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","label","DatePickerComponent","constructor","ngControl","valueAccessor","bsConfig","containerClass","dateInputFormat","writeValue","obj","registerOnChange","fn","registerOnTouched","control","_","ɵɵdirectiveInject","i1","NgControl","_2","selectors","inputs","maxDate","decls","vars","consts","template","DatePickerComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","DatePickerComponent_div_2_Template","ɵɵclassProp","touched","invalid","ɵɵpropertyInterpolate","ɵɵproperty","errors"],"sources":["C:\\Users\\BongumusaN\\TestingApp\\client\\src\\app\\_forms\\date-input\\date-input.component.ts","C:\\Users\\BongumusaN\\TestingApp\\client\\src\\app\\_forms\\date-input\\date-input.component.html"],"sourcesContent":["import { Component, Input, Self } from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-date-picker',\r\n  templateUrl: './date-input.component.html',\r\n  styleUrls: ['./date-picker.component.css']\r\n})\r\nexport class DatePickerComponent implements ControlValueAccessor {\r\n  @Input() label = '';\r\n  @Input() maxDate: Date | undefined;\r\n  bsConfig: Partial<BsDatepickerConfig> | undefined;\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red',\r\n      dateInputFormat: 'DD MMMM YYYY',\r\n    }\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n\r\n  get control(): FormControl {\r\n    return this.ngControl.control as FormControl;\r\n  }\r\n}\r\n","<div class=\"mb-3\">\r\n  <input\r\n      type=\"text\"\r\n      [class.is-invalid]=\"control.touched && control.invalid\"\r\n      class=\"form-control\"\r\n      [formControl]=\"control\"\r\n      placeholder=\"{{label}}\"\r\n      bsDatepicker\r\n      [bsConfig]=\"bsConfig\"\r\n      [maxDate]=\"maxDate\"\r\n  >\r\n  <div *ngIf=\"control.errors?.['required']\" class=\"invalid-feedback\">{{label}} is required</div>\r\n</div>\r\n"],"mappings":";;;;ICWEA,EAAA,CAAAC,cAAA,aAAmE;IAAAD,EAAA,CAAAE,MAAA,GAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAA3BH,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAK,kBAAA,KAAAC,MAAA,CAAAC,KAAA,iBAAqB;;;ADF1F,OAAM,MAAOC,mBAAmB;EAK9BC,YAA2BC,SAAoB;IAApB,KAAAA,SAAS,GAATA,SAAS;IAJ3B,KAAAH,KAAK,GAAG,EAAE;IAKjB,IAAI,CAACG,SAAS,CAACC,aAAa,GAAG,IAAI;IACnC,IAAI,CAACC,QAAQ,GAAG;MACdC,cAAc,EAAE,WAAW;MAC3BC,eAAe,EAAE;KAClB;EACH;EAEAC,UAAUA,CAACC,GAAQ,GACnB;EAEAC,gBAAgBA,CAACC,EAAO,GACxB;EAEAC,iBAAiBA,CAACD,EAAO,GACzB;EAEA,IAAIE,OAAOA,CAAA;IACT,OAAO,IAAI,CAACV,SAAS,CAACU,OAAsB;EAC9C;EAAC,QAAAC,CAAA,G;qBAxBUb,mBAAmB,EAAAR,EAAA,CAAAsB,iBAAA,CAAAC,EAAA,CAAAC,SAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnBjB,mBAAmB;IAAAkB,SAAA;IAAAC,MAAA;MAAApB,KAAA;MAAAqB,OAAA;IAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCThClC,EAAA,CAAAC,cAAA,aAAkB;QAChBD,EAAA,CAAAoC,SAAA,eASC;QACDpC,EAAA,CAAAqC,UAAA,IAAAC,kCAAA,iBAA8F;QAChGtC,EAAA,CAAAG,YAAA,EAAM;;;QATAH,EAAA,CAAAI,SAAA,GAAuD;QAAvDJ,EAAA,CAAAuC,WAAA,eAAAJ,GAAA,CAAAf,OAAA,CAAAoB,OAAA,IAAAL,GAAA,CAAAf,OAAA,CAAAqB,OAAA,CAAuD;QAGvDzC,EAAA,CAAA0C,qBAAA,gBAAAP,GAAA,CAAA5B,KAAA,CAAuB;QADvBP,EAAA,CAAA2C,UAAA,gBAAAR,GAAA,CAAAf,OAAA,CAAuB,aAAAe,GAAA,CAAAvB,QAAA,aAAAuB,GAAA,CAAAP,OAAA;QAMrB5B,EAAA,CAAAI,SAAA,GAAkC;QAAlCJ,EAAA,CAAA2C,UAAA,SAAAR,GAAA,CAAAf,OAAA,CAAAwB,MAAA,kBAAAT,GAAA,CAAAf,OAAA,CAAAwB,MAAA,aAAkC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
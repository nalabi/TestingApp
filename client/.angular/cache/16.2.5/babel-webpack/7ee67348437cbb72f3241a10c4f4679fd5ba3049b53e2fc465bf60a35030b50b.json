{"ast":null,"code":"import { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/modal\";\nexport class ConfirmService {\n  constructor(modalService) {\n    this.modalService = modalService;\n  }\n  confirm(title = 'Confirmation', message = 'Are you sure you want to do this?', btnOkText = 'Ok', btnCancelText = 'Cancel') {\n    const config = {\n      initialState: {\n        title,\n        message,\n        btnOkText,\n        btnCancelText\n      }\n    };\n    this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\n    return this.bsModelRef.onHidden.pipe(map(() => {\n      return this.bsModelRef.content.result;\n    }));\n  }\n  static #_ = this.ɵfac = function ConfirmService_Factory(t) {\n    return new (t || ConfirmService)(i0.ɵɵinject(i1.BsModalService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConfirmService,\n    factory: ConfirmService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ConfirmDialogComponent","map","ConfirmService","constructor","modalService","confirm","title","message","btnOkText","btnCancelText","config","initialState","bsModelRef","show","onHidden","pipe","content","result","_","i0","ɵɵinject","i1","BsModalService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\BongumusaN\\TestingApp\\client\\src\\app\\_services\\confirm.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\r\nimport { Observable, map } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmService {\r\n  bsModelRef?: BsModalRef<ConfirmDialogComponent>;\r\n\r\n  constructor(private modalService: BsModalService) { }\r\n\r\n  confirm(\r\n    title = 'Confirmation',\r\n    message = 'Are you sure you want to do this?',\r\n    btnOkText = 'Ok',\r\n    btnCancelText = 'Cancel'): Observable<boolean> {\r\n      const config = {\r\n        initialState: {\r\n          title,\r\n          message,\r\n          btnOkText,\r\n          btnCancelText\r\n        }\r\n      }\r\n      this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\r\n      return this.bsModelRef.onHidden!.pipe(\r\n        map(() => {\r\n          return this.bsModelRef!.content!.result\r\n        })\r\n      )\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,sBAAsB,QAAQ,mDAAmD;AAC1F,SAAqBC,GAAG,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,YAA4B;IAA5B,KAAAA,YAAY,GAAZA,YAAY;EAAoB;EAEpDC,OAAOA,CACLC,KAAK,GAAG,cAAc,EACtBC,OAAO,GAAG,mCAAmC,EAC7CC,SAAS,GAAG,IAAI,EAChBC,aAAa,GAAG,QAAQ;IACtB,MAAMC,MAAM,GAAG;MACbC,YAAY,EAAE;QACZL,KAAK;QACLC,OAAO;QACPC,SAAS;QACTC;;KAEH;IACD,IAAI,CAACG,UAAU,GAAG,IAAI,CAACR,YAAY,CAACS,IAAI,CAACb,sBAAsB,EAAEU,MAAM,CAAC;IACxE,OAAO,IAAI,CAACE,UAAU,CAACE,QAAS,CAACC,IAAI,CACnCd,GAAG,CAAC,MAAK;MACP,OAAO,IAAI,CAACW,UAAW,CAACI,OAAQ,CAACC,MAAM;IACzC,CAAC,CAAC,CACH;EACL;EAAC,QAAAC,CAAA,G;qBAxBUhB,cAAc,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdrB,cAAc;IAAAsB,OAAA,EAAdtB,cAAc,CAAAuB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/_services/admin.service\";\nimport * as i2 from \"ngx-bootstrap/modal\";\nimport * as i3 from \"@angular/common\";\n\nfunction UserManagementComponent_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function UserManagementComponent_tr_8_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openRolesModal(user_r1));\n    });\n    i0.ɵɵtext(7, \"Edit Roles\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", user_r1.roles, \"\");\n  }\n}\n\nexport let UserManagementComponent = /*#__PURE__*/(() => {\n  class UserManagementComponent {\n    constructor(adminService, modalService) {\n      this.adminService = adminService;\n      this.modalService = modalService;\n    }\n\n    ngOnInit() {\n      this.getUsersWithRoles();\n    }\n\n    getUsersWithRoles() {\n      this.adminService.getUserWithRoles().subscribe(users => {\n        this.users = users;\n      });\n    }\n\n    openRolesModal(user) {\n      const config = {\n        class: 'modal-dialog-centered',\n        initialState: {\n          user,\n          roles: this.getRolesArray(user)\n        }\n      };\n      this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n      this.bsModalRef.content.updateSelectedRoles.subscribe(values => {\n        const rolesToUpdate = {\n          roles: [...values.filter(el => el.checked === true).map(el => el.name)]\n        };\n\n        if (rolesToUpdate) {\n          this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\n            user.roles = [...rolesToUpdate.roles];\n          });\n        }\n      });\n    }\n\n    getRolesArray(user) {\n      const roles = [];\n      const userRoles = user.roles;\n      const availableRoles = [{\n        name: 'Admin',\n        value: 'Admin'\n      }, {\n        name: 'Moderator',\n        value: 'Moderator'\n      }, {\n        name: 'Member',\n        value: 'Member'\n      }];\n      availableRoles.forEach(role => {\n        let isMatch = false;\n\n        for (const userRole of userRoles) {\n          if (role.name === userRole) {\n            isMatch = true;\n            role.checked = true;\n            roles.push(role);\n            break;\n          }\n        }\n\n        if (!isMatch) {\n          role.checked = false;\n          roles.push(role);\n        }\n      });\n      return roles;\n    }\n\n  }\n\n  UserManagementComponent.ɵfac = function UserManagementComponent_Factory(t) {\n    return new (t || UserManagementComponent)(i0.ɵɵdirectiveInject(i1.AdminService), i0.ɵɵdirectiveInject(i2.BsModalService));\n  };\n\n  UserManagementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserManagementComponent,\n    selectors: [[\"app-user-management\"]],\n    decls: 9,\n    vars: 1,\n    consts: [[1, \"row\"], [1, \"table\"], [2, \"width\", \"30%\"], [2, \"width\", \"40%\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-info\", 3, \"click\"]],\n    template: function UserManagementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"th\", 2);\n        i0.ɵɵtext(4, \" Username \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"th\", 3);\n        i0.ɵɵtext(6, \" Active Roles \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"th\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, UserManagementComponent_tr_8_Template, 8, 2, \"tr\", 4);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n      }\n    },\n    dependencies: [i3.NgForOf],\n    styles: [\".button[_ngcontent-%COMP%]{background-color:#4caf50;border:none;color:#fff;padding:15px 32px;text-align:center;text-decoration:none;display:inline-block;font-size:16px}\"]\n  });\n  return UserManagementComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
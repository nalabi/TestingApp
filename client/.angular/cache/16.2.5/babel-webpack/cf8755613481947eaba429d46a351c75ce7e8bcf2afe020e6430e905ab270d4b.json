{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nclass FileLikeObject {\n  constructor(fileOrInput) {\n    this.rawFile = fileOrInput;\n    const fakePathOrObject = fileOrInput instanceof HTMLInputElement ? fileOrInput.value : fileOrInput;\n    const postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n    const method = `_createFrom${postfix}`;\n    this[method](fakePathOrObject);\n  }\n  _createFromFakePath(path) {\n    this.lastModifiedDate = void 0;\n    this.size = void 0;\n    this.type = `like/${path.slice(path.lastIndexOf('.') + 1).toLowerCase()}`;\n    this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n  }\n  _createFromObject(object) {\n    this.size = object.size;\n    this.type = object.type;\n    this.name = object.name;\n  }\n}\nclass FileItem {\n  constructor(uploader, some, options) {\n    this.url = '/';\n    this.headers = [];\n    this.withCredentials = true;\n    this.formData = [];\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 0;\n    this.uploader = uploader;\n    this.some = some;\n    this.options = options;\n    this.file = new FileLikeObject(some);\n    this._file = some;\n    if (uploader.options) {\n      this.method = uploader.options.method || 'POST';\n      this.alias = uploader.options.itemAlias || 'file';\n    }\n    this.url = uploader.options.url;\n  }\n  upload() {\n    try {\n      this.uploader.uploadItem(this);\n    } catch (e) {\n      this.uploader._onCompleteItem(this, '', 0, {});\n      this.uploader._onErrorItem(this, '', 0, {});\n    }\n  }\n  cancel() {\n    this.uploader.cancelItem(this);\n  }\n  remove() {\n    this.uploader.removeFromQueue(this);\n  }\n  onBeforeUpload() {\n    return void 0;\n  }\n  onBuildForm(form) {\n    return {\n      form\n    };\n  }\n  onProgress(progress) {\n    return {\n      progress\n    };\n  }\n  onSuccess(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n  onError(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n  onCancel(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n  onComplete(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n  _onBeforeUpload() {\n    this.isReady = true;\n    this.isUploading = true;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 0;\n    this.onBeforeUpload();\n  }\n  _onBuildForm(form) {\n    this.onBuildForm(form);\n  }\n  _onProgress(progress) {\n    this.progress = progress;\n    this.onProgress(progress);\n  }\n  _onSuccess(response, status, headers) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = true;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 100;\n    this.index = undefined;\n    this.onSuccess(response, status, headers);\n  }\n  _onError(response, status, headers) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = true;\n    this.progress = 0;\n    this.index = undefined;\n    this.onError(response, status, headers);\n  }\n  _onCancel(response, status, headers) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = true;\n    this.isError = false;\n    this.progress = 0;\n    this.index = undefined;\n    this.onCancel(response, status, headers);\n  }\n  _onComplete(response, status, headers) {\n    this.onComplete(response, status, headers);\n    if (this.uploader.options.removeAfterUpload) {\n      this.remove();\n    }\n  }\n  _prepareToUploading() {\n    this.index = this.index || ++this.uploader._nextIndex;\n    this.isReady = true;\n  }\n}\nclass FileType {\n  /*  MS office  */\n  // tslint:disable-next-line:variable-name\n  static #_ = this.mime_doc = ['application/msword', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template', 'application/vnd.ms-word.document.macroEnabled.12', 'application/vnd.ms-word.template.macroEnabled.12']; // tslint:disable-next-line:variable-name\n  static #_2 = this.mime_xsl = ['application/vnd.ms-excel', 'application/vnd.ms-excel', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template', 'application/vnd.ms-excel.sheet.macroEnabled.12', 'application/vnd.ms-excel.template.macroEnabled.12', 'application/vnd.ms-excel.addin.macroEnabled.12', 'application/vnd.ms-excel.sheet.binary.macroEnabled.12']; // tslint:disable-next-line:variable-name\n  static #_3 = this.mime_ppt = ['application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/vnd.openxmlformats-officedocument.presentationml.template', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow', 'application/vnd.ms-powerpoint.addin.macroEnabled.12', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12', 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'];\n  /* PSD */\n  // tslint:disable-next-line:variable-name\n  static #_4 = this.mime_psd = ['image/photoshop', 'image/x-photoshop', 'image/psd', 'application/photoshop', 'application/psd', 'zz-application/zz-winassoc-psd'];\n  /* Compressed files */\n  // tslint:disable-next-line:variable-name\n  static #_5 = this.mime_compress = ['application/x-gtar', 'application/x-gcompress', 'application/compress', 'application/x-tar', 'application/x-rar-compressed', 'application/octet-stream', 'application/x-zip-compressed', 'application/zip-compressed', 'application/x-7z-compressed', 'application/gzip', 'application/x-bzip2'];\n  static getMimeClass(file) {\n    let mimeClass = 'application';\n    if (file?.type && this.mime_psd.indexOf(file.type) !== -1) {\n      mimeClass = 'image';\n    } else if (file?.type?.match('image.*')) {\n      mimeClass = 'image';\n    } else if (file?.type?.match('video.*')) {\n      mimeClass = 'video';\n    } else if (file?.type?.match('audio.*')) {\n      mimeClass = 'audio';\n    } else if (file?.type === 'application/pdf') {\n      mimeClass = 'pdf';\n    } else if (file?.type && this.mime_compress.indexOf(file.type) !== -1) {\n      mimeClass = 'compress';\n    } else if (file?.type && this.mime_doc.indexOf(file.type) !== -1) {\n      mimeClass = 'doc';\n    } else if (file?.type && this.mime_xsl.indexOf(file.type) !== -1) {\n      mimeClass = 'xls';\n    } else if (file?.type && this.mime_ppt.indexOf(file.type) !== -1) {\n      mimeClass = 'ppt';\n    }\n    if (mimeClass === 'application' && file?.name) {\n      mimeClass = this.fileTypeDetection(file.name);\n    }\n    return mimeClass;\n  }\n  static fileTypeDetection(inputFilename) {\n    const types = {\n      jpg: 'image',\n      jpeg: 'image',\n      tif: 'image',\n      psd: 'image',\n      bmp: 'image',\n      png: 'image',\n      nef: 'image',\n      tiff: 'image',\n      cr2: 'image',\n      dwg: 'image',\n      cdr: 'image',\n      ai: 'image',\n      indd: 'image',\n      pin: 'image',\n      cdp: 'image',\n      skp: 'image',\n      stp: 'image',\n      '3dm': 'image',\n      mp3: 'audio',\n      wav: 'audio',\n      wma: 'audio',\n      mod: 'audio',\n      m4a: 'audio',\n      compress: 'compress',\n      zip: 'compress',\n      rar: 'compress',\n      '7z': 'compress',\n      lz: 'compress',\n      z01: 'compress',\n      bz2: 'compress',\n      gz: 'compress',\n      pdf: 'pdf',\n      xls: 'xls',\n      xlsx: 'xls',\n      ods: 'xls',\n      mp4: 'video',\n      avi: 'video',\n      wmv: 'video',\n      mpg: 'video',\n      mts: 'video',\n      flv: 'video',\n      '3gp': 'video',\n      vob: 'video',\n      m4v: 'video',\n      mpeg: 'video',\n      m2ts: 'video',\n      mov: 'video',\n      doc: 'doc',\n      docx: 'doc',\n      eps: 'doc',\n      txt: 'doc',\n      odt: 'doc',\n      rtf: 'doc',\n      ppt: 'ppt',\n      pptx: 'ppt',\n      pps: 'ppt',\n      ppsx: 'ppt',\n      odp: 'ppt'\n    };\n    const chunks = inputFilename.split('.');\n    if (chunks.length < 2) {\n      return 'application';\n    }\n    const extension = chunks[chunks.length - 1].toLowerCase();\n    if (types[extension] === undefined) {\n      return 'application';\n    } else {\n      return types[extension];\n    }\n  }\n}\nfunction isFile(value) {\n  return File && value instanceof File;\n}\nclass FileUploader {\n  constructor(options) {\n    this.isUploading = false;\n    this.queue = [];\n    this.progress = 0;\n    this._nextIndex = 0;\n    this.options = {\n      autoUpload: false,\n      isHTML5: true,\n      filters: [],\n      removeAfterUpload: false,\n      disableMultipart: false,\n      formatDataFunction: item => item._file,\n      formatDataFunctionIsAsync: false,\n      url: ''\n    };\n    this.setOptions(options);\n    this.response = new EventEmitter();\n  }\n  setOptions(options) {\n    this.options = Object.assign(this.options, options);\n    this.authToken = this.options.authToken;\n    this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n    this.autoUpload = this.options.autoUpload;\n    this.options.filters?.unshift({\n      name: 'queueLimit',\n      fn: this._queueLimitFilter\n    });\n    if (this.options.maxFileSize) {\n      this.options.filters?.unshift({\n        name: 'fileSize',\n        fn: this._fileSizeFilter\n      });\n    }\n    if (this.options.allowedFileType) {\n      this.options.filters?.unshift({\n        name: 'fileType',\n        fn: this._fileTypeFilter\n      });\n    }\n    if (this.options.allowedMimeType) {\n      this.options.filters?.unshift({\n        name: 'mimeType',\n        fn: this._mimeTypeFilter\n      });\n    }\n    for (let i = 0; i < this.queue.length; i++) {\n      this.queue[i].url = this.options.url;\n    }\n  }\n  addToQueue(files, _options, filters) {\n    let options = _options;\n    const list = [];\n    for (const file of files) {\n      list.push(file);\n    }\n    const arrayOfFilters = this._getFilters(filters);\n    const count = this.queue.length;\n    const addedFileItems = [];\n    list.map(some => {\n      if (!options) {\n        options = this.options;\n      }\n      const temp = new FileLikeObject(some);\n      if (this._isValidFile(temp, arrayOfFilters, options)) {\n        const fileItem = new FileItem(this, some, options);\n        addedFileItems.push(fileItem);\n        this.queue.push(fileItem);\n        this._onAfterAddingFile(fileItem);\n      } else {\n        if (typeof this._failFilterIndex === 'number' && this._failFilterIndex >= 0) {\n          const filter = arrayOfFilters[this._failFilterIndex];\n          this._onWhenAddingFileFailed(temp, filter, options);\n        }\n      }\n    });\n    if (this.queue.length !== count) {\n      this._onAfterAddingAll(addedFileItems);\n      this.progress = this._getTotalProgress();\n    }\n    this._render();\n    if (this.options.autoUpload) {\n      this.uploadAll();\n    }\n  }\n  removeFromQueue(value) {\n    const index = this.getIndexOfItem(value);\n    const item = this.queue[index];\n    if (item.isUploading) {\n      item.cancel();\n    }\n    this.queue.splice(index, 1);\n    this.progress = this._getTotalProgress();\n  }\n  clearQueue() {\n    while (this.queue.length) {\n      this.queue[0].remove();\n    }\n    this.progress = 0;\n  }\n  uploadItem(value) {\n    const index = this.getIndexOfItem(value);\n    const item = this.queue[index];\n    const transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n    item._prepareToUploading();\n    if (this.isUploading) {\n      return;\n    }\n    this.isUploading = true;\n    this[transport](item);\n  }\n  cancelItem(value) {\n    const index = this.getIndexOfItem(value);\n    const item = this.queue[index];\n    const prop = this.options.isHTML5 ? item._xhr : item._form;\n    if (item && item.isUploading) {\n      prop.abort();\n    }\n  }\n  uploadAll() {\n    const items = this.getNotUploadedItems().filter(item => !item.isUploading);\n    if (!items.length) {\n      return;\n    }\n    items.map(item => item._prepareToUploading());\n    items[0].upload();\n  }\n  cancelAll() {\n    const items = this.getNotUploadedItems();\n    items.map(item => item.cancel());\n  }\n  isFile(value) {\n    return isFile(value);\n  }\n  isFileLikeObject(value) {\n    return value instanceof FileLikeObject;\n  }\n  getIndexOfItem(value) {\n    return typeof value === 'number' ? value : this.queue.indexOf(value);\n  }\n  getNotUploadedItems() {\n    return this.queue.filter(item => !item.isUploaded);\n  }\n  getReadyItems() {\n    return this.queue.filter(item => item.isReady && !item.isUploading).sort((item1, item2) => item1.index - item2.index);\n  }\n  onAfterAddingAll(fileItems) {\n    return {\n      fileItems\n    };\n  }\n  onBuildItemForm(fileItem, form) {\n    return {\n      fileItem,\n      form\n    };\n  }\n  onAfterAddingFile(fileItem) {\n    return {\n      fileItem\n    };\n  }\n  onWhenAddingFileFailed(item, filter, options) {\n    return {\n      item,\n      filter,\n      options\n    };\n  }\n  onBeforeUploadItem(fileItem) {\n    return {\n      fileItem\n    };\n  }\n  onProgressItem(fileItem, progress) {\n    return {\n      fileItem,\n      progress\n    };\n  }\n  onProgressAll(progress) {\n    return {\n      progress\n    };\n  }\n  onSuccessItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n  onErrorItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n  onCancelItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n  onCompleteItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n  onCompleteAll() {\n    return void 0;\n  }\n  _mimeTypeFilter(item) {\n    return !(item?.type && this.options.allowedMimeType && this.options.allowedMimeType?.indexOf(item.type) === -1);\n  }\n  _fileSizeFilter(item) {\n    return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n  }\n  _fileTypeFilter(item) {\n    return !(this.options.allowedFileType && this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n  }\n  _onErrorItem(item, response, status, headers) {\n    item._onError(response, status, headers);\n    this.onErrorItem(item, response, status, headers);\n  }\n  _onCompleteItem(item, response, status, headers) {\n    item._onComplete(response, status, headers);\n    this.onCompleteItem(item, response, status, headers);\n    const nextItem = this.getReadyItems()[0];\n    this.isUploading = false;\n    if (nextItem) {\n      nextItem.upload();\n      return;\n    }\n    this.onCompleteAll();\n    this.progress = this._getTotalProgress();\n    this._render();\n  }\n  _headersGetter(parsedHeaders) {\n    return name => {\n      if (name) {\n        return parsedHeaders[name.toLowerCase()] || undefined;\n      }\n      return parsedHeaders;\n    };\n  }\n  _xhrTransport(item) {\n    // tslint:disable-next-line:no-this-assignment\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const that = this;\n    const xhr = item._xhr = new XMLHttpRequest();\n    let sendable;\n    this._onBeforeUploadItem(item);\n    if (typeof item._file.size !== 'number') {\n      throw new TypeError('The file specified is no longer valid');\n    }\n    if (!this.options.disableMultipart) {\n      sendable = new FormData();\n      this._onBuildItemForm(item, sendable);\n      const appendFile = () => sendable.append(item.alias, item._file, item.file.name);\n      if (!this.options.parametersBeforeFiles) {\n        appendFile();\n      }\n      // For AWS, Additional Parameters must come BEFORE Files\n      if (this.options.additionalParameter !== undefined) {\n        Object.keys(this.options.additionalParameter).forEach(key => {\n          let paramVal = this.options.additionalParameter?.[key];\n          // Allow an additional parameter to include the filename\n          if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0 && item.file?.name) {\n            paramVal = paramVal.replace('{{file_name}}', item.file.name);\n          }\n          sendable.append(key, paramVal);\n        });\n      }\n      if (appendFile && this.options.parametersBeforeFiles) {\n        appendFile();\n      }\n    } else {\n      if (this.options.formatDataFunction) {\n        sendable = this.options.formatDataFunction(item);\n      }\n    }\n    xhr.upload.onprogress = event => {\n      const progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n      this._onProgressItem(item, progress);\n    };\n    xhr.onload = () => {\n      const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      const response = this._transformResponse(xhr.response, headers);\n      const gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n      const method = `_on${gist}Item`;\n      this[method](item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n    xhr.onerror = () => {\n      const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      const response = this._transformResponse(xhr.response, headers);\n      this._onErrorItem(item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n    xhr.onabort = () => {\n      const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      const response = this._transformResponse(xhr.response, headers);\n      this._onCancelItem(item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n    if (item.method && item.url) {\n      xhr.open(item.method, item.url, true);\n    }\n    xhr.withCredentials = item.withCredentials;\n    if (this.options.headers) {\n      for (const header of this.options.headers) {\n        xhr.setRequestHeader(header.name, header.value);\n      }\n    }\n    if (item.headers.length) {\n      for (const header of item.headers) {\n        xhr.setRequestHeader(header.name, header.value);\n      }\n    }\n    if (this.authToken && this.authTokenHeader) {\n      xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n    }\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == XMLHttpRequest.DONE) {\n        that.response.emit(xhr.responseText);\n      }\n    };\n    if (this.options.formatDataFunctionIsAsync) {\n      sendable.then(result => xhr.send(JSON.stringify(result)));\n    } else {\n      xhr.send(sendable);\n    }\n    this._render();\n  }\n  _getTotalProgress(value = 0) {\n    if (this.options.removeAfterUpload) {\n      return value;\n    }\n    const notUploaded = this.getNotUploadedItems().length;\n    const uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n    const ratio = 100 / this.queue.length;\n    const current = value * ratio / 100;\n    return Math.round(uploaded * ratio + current);\n  }\n  _getFilters(filters) {\n    if (!filters) {\n      return this.options?.filters || [];\n    }\n    if (Array.isArray(filters)) {\n      return filters;\n    }\n    if (typeof filters === 'string') {\n      const names = filters.match(/[^\\s,]+/g);\n      return this.options?.filters || [].filter(filter => names?.indexOf(filter.name) !== -1);\n    }\n    return this.options?.filters || [];\n  }\n  _render() {\n    return void 0;\n  }\n  _queueLimitFilter() {\n    return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n  }\n  _isValidFile(file, filters, options) {\n    this._failFilterIndex = -1;\n    return !filters.length ? true : filters.every(filter => {\n      if (typeof this._failFilterIndex === 'number') {\n        this._failFilterIndex++;\n      }\n      return filter.fn.call(this, file, options);\n    });\n  }\n  _isSuccessCode(status) {\n    return status >= 200 && status < 300 || status === 304;\n  }\n  _transformResponse(response, headers) {\n    return response;\n  }\n  _parseHeaders(headers) {\n    const parsed = {};\n    let key;\n    let val;\n    let i;\n    if (!headers) {\n      return parsed;\n    }\n    headers.split('\\n').map(line => {\n      i = line.indexOf(':');\n      key = line.slice(0, i).trim().toLowerCase();\n      val = line.slice(i + 1).trim();\n      if (key) {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    });\n    return parsed;\n  }\n  _onWhenAddingFileFailed(item, filter, options) {\n    this.onWhenAddingFileFailed(item, filter, options);\n  }\n  _onAfterAddingFile(item) {\n    this.onAfterAddingFile(item);\n  }\n  _onAfterAddingAll(items) {\n    this.onAfterAddingAll(items);\n  }\n  _onBeforeUploadItem(item) {\n    item._onBeforeUpload();\n    this.onBeforeUploadItem(item);\n  }\n  _onBuildItemForm(item, form) {\n    item._onBuildForm(form);\n    this.onBuildItemForm(item, form);\n  }\n  _onProgressItem(item, progress) {\n    const total = this._getTotalProgress(progress);\n    this.progress = total;\n    item._onProgress(progress);\n    this.onProgressItem(item, progress);\n    this.onProgressAll(total);\n    this._render();\n  }\n  _onSuccessItem(item, response, status, headers) {\n    item._onSuccess(response, status, headers);\n    this.onSuccessItem(item, response, status, headers);\n  }\n  _onCancelItem(item, response, status, headers) {\n    item._onCancel(response, status, headers);\n    this.onCancelItem(item, response, status, headers);\n  }\n}\nclass FileDropDirective {\n  constructor(element) {\n    this.fileOver = new EventEmitter();\n    // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n    this.onFileDrop = new EventEmitter();\n    this.element = element;\n  }\n  getOptions() {\n    return this.uploader?.options;\n  }\n  getFilters() {\n    return '';\n  }\n  onDrop(event) {\n    const transfer = this._getTransfer(event);\n    if (!transfer) {\n      return;\n    }\n    const options = this.getOptions();\n    const filters = this.getFilters();\n    this._preventAndStop(event);\n    if (options) {\n      this.uploader?.addToQueue(transfer.files, options, filters);\n    }\n    this.fileOver.emit(false);\n    this.onFileDrop.emit(transfer.files);\n  }\n  onDragOver(event) {\n    const transfer = this._getTransfer(event);\n    if (!this._haveFiles(transfer.types)) {\n      return;\n    }\n    transfer.dropEffect = 'copy';\n    this._preventAndStop(event);\n    this.fileOver.emit(true);\n  }\n  onDragLeave(event) {\n    if (this.element) {\n      if (event.currentTarget === this.element[0]) {\n        return;\n      }\n    }\n    this._preventAndStop(event);\n    this.fileOver.emit(false);\n  }\n  _getTransfer(event) {\n    return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n  }\n\n  _preventAndStop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  _haveFiles(types) {\n    if (!types) {\n      return false;\n    }\n    if (types.indexOf) {\n      return types.indexOf('Files') !== -1;\n    } else if (types.contains) {\n      return types.contains('Files');\n    } else {\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function FileDropDirective_Factory(t) {\n    return new (t || FileDropDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FileDropDirective,\n    selectors: [[\"\", \"ng2FileDrop\", \"\"]],\n    hostBindings: function FileDropDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) {\n          return ctx.onDrop($event);\n        })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) {\n          return ctx.onDragOver($event);\n        })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) {\n          return ctx.onDragLeave($event);\n        });\n      }\n    },\n    inputs: {\n      uploader: \"uploader\"\n    },\n    outputs: {\n      fileOver: \"fileOver\",\n      onFileDrop: \"onFileDrop\"\n    }\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FileDropDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng2FileDrop]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    uploader: [{\n      type: Input\n    }],\n    fileOver: [{\n      type: Output\n    }],\n    onFileDrop: [{\n      type: Output\n    }],\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }],\n    onDragOver: [{\n      type: HostListener,\n      args: ['dragover', ['$event']]\n    }],\n    onDragLeave: [{\n      type: HostListener,\n      args: ['dragleave', ['$event']]\n    }]\n  });\n})();\nclass FileSelectDirective {\n  constructor(element) {\n    // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n    this.onFileSelected = new EventEmitter();\n    this.element = element;\n  }\n  getOptions() {\n    return this.uploader?.options;\n  }\n  getFilters() {\n    return '';\n  }\n  isEmptyAfterSelection() {\n    return !!this.element.nativeElement.attributes.multiple;\n  }\n  onChange() {\n    const files = this.element.nativeElement.files;\n    const options = this.getOptions();\n    const filters = this.getFilters();\n    this.uploader?.addToQueue(files, options, filters);\n    this.onFileSelected.emit(files);\n    if (this.isEmptyAfterSelection()) {\n      this.element.nativeElement.value = '';\n    }\n  }\n  static #_ = this.ɵfac = function FileSelectDirective_Factory(t) {\n    return new (t || FileSelectDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FileSelectDirective,\n    selectors: [[\"\", \"ng2FileSelect\", \"\"]],\n    hostBindings: function FileSelectDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"change\", function FileSelectDirective_change_HostBindingHandler() {\n          return ctx.onChange();\n        });\n      }\n    },\n    inputs: {\n      uploader: \"uploader\"\n    },\n    outputs: {\n      onFileSelected: \"onFileSelected\"\n    }\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FileSelectDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng2FileSelect]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    uploader: [{\n      type: Input\n    }],\n    onFileSelected: [{\n      type: Output\n    }],\n    onChange: [{\n      type: HostListener,\n      args: ['change']\n    }]\n  });\n})();\nclass FileUploadModule {\n  static #_ = this.ɵfac = function FileUploadModule_Factory(t) {\n    return new (t || FileUploadModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FileUploadModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FileUploadModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [FileDropDirective, FileSelectDirective],\n      exports: [FileDropDirective, FileSelectDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };","map":{"version":3,"names":["i0","EventEmitter","Directive","Input","Output","HostListener","NgModule","CommonModule","FileLikeObject","constructor","fileOrInput","rawFile","fakePathOrObject","HTMLInputElement","value","postfix","method","_createFromFakePath","path","lastModifiedDate","size","type","slice","lastIndexOf","toLowerCase","name","_createFromObject","object","FileItem","uploader","some","options","url","headers","withCredentials","formData","isReady","isUploading","isUploaded","isSuccess","isCancel","isError","progress","file","_file","alias","itemAlias","upload","uploadItem","e","_onCompleteItem","_onErrorItem","cancel","cancelItem","remove","removeFromQueue","onBeforeUpload","onBuildForm","form","onProgress","onSuccess","response","status","onError","onCancel","onComplete","_onBeforeUpload","_onBuildForm","_onProgress","_onSuccess","index","undefined","_onError","_onCancel","_onComplete","removeAfterUpload","_prepareToUploading","_nextIndex","FileType","_","mime_doc","_2","mime_xsl","_3","mime_ppt","_4","mime_psd","_5","mime_compress","getMimeClass","mimeClass","indexOf","match","fileTypeDetection","inputFilename","types","jpg","jpeg","tif","psd","bmp","png","nef","tiff","cr2","dwg","cdr","ai","indd","pin","cdp","skp","stp","mp3","wav","wma","mod","m4a","compress","zip","rar","lz","z01","bz2","gz","pdf","xls","xlsx","ods","mp4","avi","wmv","mpg","mts","flv","vob","m4v","mpeg","m2ts","mov","doc","docx","eps","txt","odt","rtf","ppt","pptx","pps","ppsx","odp","chunks","split","length","extension","isFile","File","FileUploader","queue","autoUpload","isHTML5","filters","disableMultipart","formatDataFunction","item","formatDataFunctionIsAsync","setOptions","Object","assign","authToken","authTokenHeader","unshift","fn","_queueLimitFilter","maxFileSize","_fileSizeFilter","allowedFileType","_fileTypeFilter","allowedMimeType","_mimeTypeFilter","i","addToQueue","files","_options","list","push","arrayOfFilters","_getFilters","count","addedFileItems","map","temp","_isValidFile","fileItem","_onAfterAddingFile","_failFilterIndex","filter","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","getIndexOfItem","splice","clearQueue","transport","prop","_xhr","_form","abort","items","getNotUploadedItems","cancelAll","isFileLikeObject","getReadyItems","sort","item1","item2","onAfterAddingAll","fileItems","onBuildItemForm","onAfterAddingFile","onWhenAddingFileFailed","onBeforeUploadItem","onProgressItem","onProgressAll","onSuccessItem","onErrorItem","onCancelItem","onCompleteItem","onCompleteAll","nextItem","_headersGetter","parsedHeaders","_xhrTransport","that","xhr","XMLHttpRequest","sendable","_onBeforeUploadItem","TypeError","FormData","_onBuildItemForm","appendFile","append","parametersBeforeFiles","additionalParameter","keys","forEach","key","paramVal","replace","onprogress","event","Math","round","lengthComputable","loaded","total","_onProgressItem","onload","_parseHeaders","getAllResponseHeaders","_transformResponse","gist","_isSuccessCode","onerror","onabort","_onCancelItem","open","header","setRequestHeader","onreadystatechange","readyState","DONE","emit","responseText","then","result","send","JSON","stringify","notUploaded","uploaded","ratio","current","Array","isArray","names","queueLimit","every","call","parsed","val","line","trim","_onSuccessItem","FileDropDirective","element","fileOver","onFileDrop","getOptions","getFilters","onDrop","transfer","_getTransfer","_preventAndStop","onDragOver","_haveFiles","dropEffect","onDragLeave","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","contains","ɵfac","FileDropDirective_Factory","t","ɵɵdirectiveInject","ElementRef","ɵdir","ɵɵdefineDirective","selectors","hostBindings","FileDropDirective_HostBindings","rf","ctx","ɵɵlistener","FileDropDirective_drop_HostBindingHandler","$event","FileDropDirective_dragover_HostBindingHandler","FileDropDirective_dragleave_HostBindingHandler","inputs","outputs","ngDevMode","ɵsetClassMetadata","args","selector","FileSelectDirective","onFileSelected","isEmptyAfterSelection","nativeElement","attributes","multiple","onChange","FileSelectDirective_Factory","FileSelectDirective_HostBindings","FileSelectDirective_change_HostBindingHandler","FileUploadModule","FileUploadModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["C:/Users/BongumusaN/TestingApp/client/node_modules/ng2-file-upload/fesm2022/ng2-file-upload.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nclass FileLikeObject {\n    constructor(fileOrInput) {\n        this.rawFile = fileOrInput;\n        const fakePathOrObject = fileOrInput instanceof HTMLInputElement ? fileOrInput.value : fileOrInput;\n        const postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        const method = `_createFrom${postfix}`;\n        this[method](fakePathOrObject);\n    }\n    _createFromFakePath(path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = `like/${path.slice(path.lastIndexOf('.') + 1).toLowerCase()}`;\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    _createFromObject(object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    }\n}\n\nclass FileItem {\n    constructor(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    upload() {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    }\n    cancel() {\n        this.uploader.cancelItem(this);\n    }\n    remove() {\n        this.uploader.removeFromQueue(this);\n    }\n    onBeforeUpload() {\n        return void 0;\n    }\n    onBuildForm(form) {\n        return { form };\n    }\n    onProgress(progress) {\n        return { progress };\n    }\n    onSuccess(response, status, headers) {\n        return { response, status, headers };\n    }\n    onError(response, status, headers) {\n        return { response, status, headers };\n    }\n    onCancel(response, status, headers) {\n        return { response, status, headers };\n    }\n    onComplete(response, status, headers) {\n        return { response, status, headers };\n    }\n    _onBeforeUpload() {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    }\n    _onBuildForm(form) {\n        this.onBuildForm(form);\n    }\n    _onProgress(progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    }\n    _onSuccess(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = undefined;\n        this.onSuccess(response, status, headers);\n    }\n    _onError(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = undefined;\n        this.onError(response, status, headers);\n    }\n    _onCancel(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = undefined;\n        this.onCancel(response, status, headers);\n    }\n    _onComplete(response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    }\n    _prepareToUploading() {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    }\n}\n\nclass FileType {\n    /*  MS office  */\n    // tslint:disable-next-line:variable-name\n    static { this.mime_doc = [\n        'application/msword',\n        'application/msword',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n        'application/vnd.ms-word.document.macroEnabled.12',\n        'application/vnd.ms-word.template.macroEnabled.12'\n    ]; }\n    // tslint:disable-next-line:variable-name\n    static { this.mime_xsl = [\n        'application/vnd.ms-excel',\n        'application/vnd.ms-excel',\n        'application/vnd.ms-excel',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n        'application/vnd.ms-excel.sheet.macroEnabled.12',\n        'application/vnd.ms-excel.template.macroEnabled.12',\n        'application/vnd.ms-excel.addin.macroEnabled.12',\n        'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n    ]; }\n    // tslint:disable-next-line:variable-name\n    static { this.mime_ppt = [\n        'application/vnd.ms-powerpoint',\n        'application/vnd.ms-powerpoint',\n        'application/vnd.ms-powerpoint',\n        'application/vnd.ms-powerpoint',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n        'application/vnd.openxmlformats-officedocument.presentationml.template',\n        'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n        'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n        'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n        'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n        'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n    ]; }\n    /* PSD */\n    // tslint:disable-next-line:variable-name\n    static { this.mime_psd = [\n        'image/photoshop',\n        'image/x-photoshop',\n        'image/psd',\n        'application/photoshop',\n        'application/psd',\n        'zz-application/zz-winassoc-psd'\n    ]; }\n    /* Compressed files */\n    // tslint:disable-next-line:variable-name\n    static { this.mime_compress = [\n        'application/x-gtar',\n        'application/x-gcompress',\n        'application/compress',\n        'application/x-tar',\n        'application/x-rar-compressed',\n        'application/octet-stream',\n        'application/x-zip-compressed',\n        'application/zip-compressed',\n        'application/x-7z-compressed',\n        'application/gzip',\n        'application/x-bzip2'\n    ]; }\n    static getMimeClass(file) {\n        let mimeClass = 'application';\n        if (file?.type && this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file?.type?.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file?.type?.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file?.type?.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file?.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (file?.type && this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (file?.type && this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (file?.type && this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (file?.type && this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application' && file?.name) {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    }\n    static fileTypeDetection(inputFilename) {\n        const types = {\n            jpg: 'image',\n            jpeg: 'image',\n            tif: 'image',\n            psd: 'image',\n            bmp: 'image',\n            png: 'image',\n            nef: 'image',\n            tiff: 'image',\n            cr2: 'image',\n            dwg: 'image',\n            cdr: 'image',\n            ai: 'image',\n            indd: 'image',\n            pin: 'image',\n            cdp: 'image',\n            skp: 'image',\n            stp: 'image',\n            '3dm': 'image',\n            mp3: 'audio',\n            wav: 'audio',\n            wma: 'audio',\n            mod: 'audio',\n            m4a: 'audio',\n            compress: 'compress',\n            zip: 'compress',\n            rar: 'compress',\n            '7z': 'compress',\n            lz: 'compress',\n            z01: 'compress',\n            bz2: 'compress',\n            gz: 'compress',\n            pdf: 'pdf',\n            xls: 'xls',\n            xlsx: 'xls',\n            ods: 'xls',\n            mp4: 'video',\n            avi: 'video',\n            wmv: 'video',\n            mpg: 'video',\n            mts: 'video',\n            flv: 'video',\n            '3gp': 'video',\n            vob: 'video',\n            m4v: 'video',\n            mpeg: 'video',\n            m2ts: 'video',\n            mov: 'video',\n            doc: 'doc',\n            docx: 'doc',\n            eps: 'doc',\n            txt: 'doc',\n            odt: 'doc',\n            rtf: 'doc',\n            ppt: 'ppt',\n            pptx: 'ppt',\n            pps: 'ppt',\n            ppsx: 'ppt',\n            odp: 'ppt'\n        };\n        const chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        const extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    }\n}\n\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\nclass FileUploader {\n    constructor(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: (item) => item._file,\n            formatDataFunctionIsAsync: false,\n            url: ''\n        };\n        this.setOptions(options);\n        this.response = new EventEmitter();\n    }\n    setOptions(options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters?.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters?.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters?.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters?.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (let i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    }\n    addToQueue(files, _options, filters) {\n        let options = _options;\n        const list = [];\n        for (const file of files) {\n            list.push(file);\n        }\n        const arrayOfFilters = this._getFilters(filters);\n        const count = this.queue.length;\n        const addedFileItems = [];\n        list.map((some) => {\n            if (!options) {\n                options = this.options;\n            }\n            const temp = new FileLikeObject(some);\n            if (this._isValidFile(temp, arrayOfFilters, options)) {\n                const fileItem = new FileItem(this, some, options);\n                addedFileItems.push(fileItem);\n                this.queue.push(fileItem);\n                this._onAfterAddingFile(fileItem);\n            }\n            else {\n                if (typeof this._failFilterIndex === 'number' && this._failFilterIndex >= 0) {\n                    const filter = arrayOfFilters[this._failFilterIndex];\n                    this._onWhenAddingFileFailed(temp, filter, options);\n                }\n            }\n        });\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    }\n    removeFromQueue(value) {\n        const index = this.getIndexOfItem(value);\n        const item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    }\n    clearQueue() {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    }\n    uploadItem(value) {\n        const index = this.getIndexOfItem(value);\n        const item = this.queue[index];\n        const transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        this[transport](item);\n    }\n    cancelItem(value) {\n        const index = this.getIndexOfItem(value);\n        const item = this.queue[index];\n        const prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    }\n    uploadAll() {\n        const items = this.getNotUploadedItems().filter((item) => !item.isUploading);\n        if (!items.length) {\n            return;\n        }\n        items.map((item) => item._prepareToUploading());\n        items[0].upload();\n    }\n    cancelAll() {\n        const items = this.getNotUploadedItems();\n        items.map((item) => item.cancel());\n    }\n    isFile(value) {\n        return isFile(value);\n    }\n    isFileLikeObject(value) {\n        return value instanceof FileLikeObject;\n    }\n    getIndexOfItem(value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    getNotUploadedItems() {\n        return this.queue.filter((item) => !item.isUploaded);\n    }\n    getReadyItems() {\n        return this.queue\n            .filter((item) => (item.isReady && !item.isUploading))\n            .sort((item1, item2) => item1.index - item2.index);\n    }\n    onAfterAddingAll(fileItems) {\n        return { fileItems };\n    }\n    onBuildItemForm(fileItem, form) {\n        return { fileItem, form };\n    }\n    onAfterAddingFile(fileItem) {\n        return { fileItem };\n    }\n    onWhenAddingFileFailed(item, filter, options) {\n        return { item, filter, options };\n    }\n    onBeforeUploadItem(fileItem) {\n        return { fileItem };\n    }\n    onProgressItem(fileItem, progress) {\n        return { fileItem, progress };\n    }\n    onProgressAll(progress) {\n        return { progress };\n    }\n    onSuccessItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    onErrorItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    onCancelItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    onCompleteItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    onCompleteAll() {\n        return void 0;\n    }\n    _mimeTypeFilter(item) {\n        return !(item?.type && this.options.allowedMimeType && this.options.allowedMimeType?.indexOf(item.type) === -1);\n    }\n    _fileSizeFilter(item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    _fileTypeFilter(item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    _onErrorItem(item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    }\n    _onCompleteItem(item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        const nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    }\n    _headersGetter(parsedHeaders) {\n        return (name) => {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || undefined;\n            }\n            return parsedHeaders;\n        };\n    }\n    _xhrTransport(item) {\n        // tslint:disable-next-line:no-this-assignment\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        const xhr = item._xhr = new XMLHttpRequest();\n        let sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            const appendFile = () => sendable.append(item.alias, item._file, item.file.name);\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach((key) => {\n                    let paramVal = this.options.additionalParameter?.[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0 && item.file?.name) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                });\n            }\n            if (appendFile && this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            if (this.options.formatDataFunction) {\n                sendable = this.options.formatDataFunction(item);\n            }\n        }\n        xhr.upload.onprogress = (event) => {\n            const progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            this._onProgressItem(item, progress);\n        };\n        xhr.onload = () => {\n            const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            const response = this._transformResponse(xhr.response, headers);\n            const gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            const method = `_on${gist}Item`;\n            this[method](item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.onerror = () => {\n            const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            const response = this._transformResponse(xhr.response, headers);\n            this._onErrorItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.onabort = () => {\n            const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            const response = this._transformResponse(xhr.response, headers);\n            this._onCancelItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        if (item.method && item.url) {\n            xhr.open(item.method, item.url, true);\n        }\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (const header of this.options.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (const header of item.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken && this.authTokenHeader) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        };\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then((result) => xhr.send(JSON.stringify(result)));\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    }\n    _getTotalProgress(value = 0) {\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        const notUploaded = this.getNotUploadedItems().length;\n        const uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        const ratio = 100 / this.queue.length;\n        const current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    }\n    _getFilters(filters) {\n        if (!filters) {\n            return this.options?.filters || [];\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            const names = filters.match(/[^\\s,]+/g);\n            return this.options?.filters || []\n                .filter((filter) => names?.indexOf(filter.name) !== -1);\n        }\n        return this.options?.filters || [];\n    }\n    _render() {\n        return void 0;\n    }\n    _queueLimitFilter() {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    _isValidFile(file, filters, options) {\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every((filter) => {\n            if (typeof this._failFilterIndex === 'number') {\n                this._failFilterIndex++;\n            }\n            return filter.fn.call(this, file, options);\n        });\n    }\n    _isSuccessCode(status) {\n        return (status >= 200 && status < 300) || status === 304;\n    }\n    _transformResponse(response, headers) {\n        return response;\n    }\n    _parseHeaders(headers) {\n        const parsed = {};\n        let key;\n        let val;\n        let i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map((line) => {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        });\n        return parsed;\n    }\n    _onWhenAddingFileFailed(item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    }\n    _onAfterAddingFile(item) {\n        this.onAfterAddingFile(item);\n    }\n    _onAfterAddingAll(items) {\n        this.onAfterAddingAll(items);\n    }\n    _onBeforeUploadItem(item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    }\n    _onBuildItemForm(item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    }\n    _onProgressItem(item, progress) {\n        const total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    }\n    _onSuccessItem(item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    }\n    _onCancelItem(item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    }\n}\n\nclass FileDropDirective {\n    constructor(element) {\n        this.fileOver = new EventEmitter();\n        // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n        this.onFileDrop = new EventEmitter();\n        this.element = element;\n    }\n    getOptions() {\n        return this.uploader?.options;\n    }\n    getFilters() {\n        return '';\n    }\n    onDrop(event) {\n        const transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        const options = this.getOptions();\n        const filters = this.getFilters();\n        this._preventAndStop(event);\n        if (options) {\n            this.uploader?.addToQueue(transfer.files, options, filters);\n        }\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    }\n    onDragOver(event) {\n        const transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    }\n    onDragLeave(event) {\n        if (this.element) {\n            if (event.currentTarget === this.element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    }\n    _getTransfer(event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    _preventAndStop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    _haveFiles(types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.5\", ngImport: i0, type: FileDropDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.5\", type: FileDropDirective, selector: \"[ng2FileDrop]\", inputs: { uploader: \"uploader\" }, outputs: { fileOver: \"fileOver\", onFileDrop: \"onFileDrop\" }, host: { listeners: { \"drop\": \"onDrop($event)\", \"dragover\": \"onDragOver($event)\", \"dragleave\": \"onDragLeave($event)\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.5\", ngImport: i0, type: FileDropDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ng2FileDrop]' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { uploader: [{\n                type: Input\n            }], fileOver: [{\n                type: Output\n            }], onFileDrop: [{\n                type: Output\n            }], onDrop: [{\n                type: HostListener,\n                args: ['drop', ['$event']]\n            }], onDragOver: [{\n                type: HostListener,\n                args: ['dragover', ['$event']]\n            }], onDragLeave: [{\n                type: HostListener,\n                args: ['dragleave', ['$event']]\n            }] } });\n\nclass FileSelectDirective {\n    constructor(element) {\n        // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n        this.onFileSelected = new EventEmitter();\n        this.element = element;\n    }\n    getOptions() {\n        return this.uploader?.options;\n    }\n    getFilters() {\n        return '';\n    }\n    isEmptyAfterSelection() {\n        return !!this.element.nativeElement.attributes.multiple;\n    }\n    onChange() {\n        const files = this.element.nativeElement.files;\n        const options = this.getOptions();\n        const filters = this.getFilters();\n        this.uploader?.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.5\", ngImport: i0, type: FileSelectDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.5\", type: FileSelectDirective, selector: \"[ng2FileSelect]\", inputs: { uploader: \"uploader\" }, outputs: { onFileSelected: \"onFileSelected\" }, host: { listeners: { \"change\": \"onChange()\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.5\", ngImport: i0, type: FileSelectDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ng2FileSelect]' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { uploader: [{\n                type: Input\n            }], onFileSelected: [{\n                type: Output\n            }], onChange: [{\n                type: HostListener,\n                args: ['change']\n            }] } });\n\nclass FileUploadModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.5\", ngImport: i0, type: FileUploadModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.5\", ngImport: i0, type: FileUploadModule, declarations: [FileDropDirective, FileSelectDirective], imports: [CommonModule], exports: [FileDropDirective, FileSelectDirective] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.5\", ngImport: i0, type: FileUploadModule, imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.5\", ngImport: i0, type: FileUploadModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [FileDropDirective, FileSelectDirective],\n                    exports: [FileDropDirective, FileSelectDirective]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}